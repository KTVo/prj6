{"version":3,"sources":["components/images/patient_Me.jpg","components/homepage_sections/contact_us/social_media_icons/facebook.PNG","components/homepage_sections/contact_us/social_media_icons/twitter.PNG","components/homepage_sections/contact_us/social_media_icons/linkin.PNG","pictures/docwithclipboard.jpg","pictures/patient_doctor_select/left_doctor.png","pictures/patient_doctor_select/right_patient.png","components/payment/payment_pics/major_credit_cards_pic.png","components/case_related/drWritesSecondOpinion.js","components/generateSortableTable.js","components/animations/ani_reload_mgmt_table.js","components/case_related/clientTable_OnGoing.js","components/case_related/clientCaseManagement.js","components/case_related/drCaseManagement.js","components/contact.js","components/user_related/drEdit.js","components/testEndpoint.js","components/homepage.js","components/pricingPage.js","components/payment/paymenthistory.js","components/picCarousel.js","components/multiBrowsePic.js","components/card_related/card.jsx","components/hammer.jsx","components/card_related/views/header.jsx","components/card_related/views/body.jsx","components/card_related/caller_SwipeCardAnimation.js","components/patientSidePanel.js","components/case_related/patient_CaseCreation.js","components/case_related/dr_CaseCreation.js","components/hoverImgBlkWhite.js","components/user_related/registration_funct_comp.js","components/user_related/login.js","components/user_related/loginRegisterDisplay.js","components/user_related/doctorPatientSelect.js","components/payment/payment_form.js","components/navbar_custom.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DrWritesSecondOpinion","props","handleInputChange","event","setState","target","name","value","showDrEditView","Container","style","width","margin","Form","className","onSubmit","handleSubmit","SelectTitle","Label","Row","Col","border","padding","borderStyle","borderColor","state","parsedJSON","pat_name","pat_sex","pat_age","email","record_id","pat_medical_history","comment","type","label","secondDiagnosisMessage","onChange","rows","cols","required","Button","onClick","show","correctCase","allCaseInfo","requestOptions","method","headers","body","JSON","stringify","this","phy_id","fetch","then","response","json","i","length","showAssessmentPageModal","recordID","text","console","log","reload_tables","Modal","dialogClassName","role","Header","Body","Footer","ShowAssessmentPageModalHandle","React","Component","SearchBar","Search","GenerateSortableTable","parsedJSONObj","error","showModal","record_assessment_id","bind","status","handleModal","LoadTables","CloseModalHandle","size","CaseCancellationHandle","incomingData","URL_for_Fetch","res","result","l","is_patient","cancelButton","payButton","alert","createAssessmentButton","acceptButton","data","ConfirmCancelButtonHandle","keyField","columns","defaultSorted","columnToggle","search","searchProps","baseProps","SlidePageTransitionAnimation","tableSettings","useState","index","set","useCallback","transitions","useTransition","p","from","opacity","transform","enter","leave","pages","div","background","map","item","key","Page","ClientTable_OnGoing","dataField","order","sort","userInfo","pat_id","ClientCaseManagement","modeID","userID","textAlign","DrCaseManagement","Contact","displayLoginForm","action","physician_email","encType","Group","controlId","paddingLeft","Control","as","placeholder","borderLeft","marginLeft","DrEdit","setDefaultHospital","indxCurrentHospital","currHospitalName","currentHospital","hospitalNameArr","hospitalName","defaultValue","preventDefault","userMode","passwordAuthorization","password","username","age","sex","bio","npi","phy_addr","speciality","hospital_id","oldBio","repassword","picture","showOldBio","assignJSON","isLoading","phy_bio","phy_name","phy_qual","inputs","document","getElementById","elements","to_send","element","showOldBioNew","selectedSex","DropdownButton","ButtonGroup","title","Dropdown","Item","SelectSexHandle","ref","TestEndpoint","Test_client_Handle","Test_physician_Handle","Test_update_pending_records_Handle","Test_WTFFF_accept_pending_record_Handle","Test_record_assessment_Handle","Test_get_client_records_Handle","Test_physician_login_Handle","Test_get_all_physician_records_Handle","Test_get_all_patient_records_Handle","Test_client_all_Handle","Test_client_id_Handle","Test_hospitals_Handle","Test_get_pending_records_Handle","Homepage","Pricing","src","pricedoctor","alt","Our","prices","go","here","useStyles","makeStyles","table","minWidth","ccyFormat","num","toFixed","desc","qty","price","invoiceSubtotal","reduce","sum","invoiceTaxes","invoiceTotal","Paymenthistory","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","colSpan","TableBody","row","rowSpan","PicCarousel","loopCarouselItem","pic","selectedPic","Carousel","maxHeight","maxWidth","valueURL","valueFileName","Caption","backgroundColor","valueTitle","color","fontSize","fontWeight","valueDescription","MultiBrowsePic","arrPics","selectedFiles","setSelectedFiles","id","multiple","files","arrFiles","Array","file","URL","createObjectURL","prevImages","concat","revokeObjectURL","htmlFor","FrontCard","class","user","doctorName","location","specialty","height","image","BackCard","about","cardPosition","isBack","position","X","Y","display","top","window","innerHeight","left","innerWidth","showCardClass","cardContainer","card_list","user_data","val","mainScroll","scroll","push","show_status","HammerArea","onDragStart","e","center","x","y","onDragEnd","deltaX","func_like","onPan","onTap","func_show_info","onPanEnd","card_data","isLike","ans","cntIndexCard","numElements","hadChosen","selectDr","sessionStorage","setItem","is_moving","setTimeout","shift","createDataList","isShowBackToggle","dataList","drInfo","is_like","disabled","href","ShowContentsOfBody","RunModalPhysician","Caller_SwipeCardAnimation","FromList","list","fetchUserData","randomlyOneOfList","people1","avatar","Math","floor","random","cnt","peopleArray","rating","drId","loading","drList","PatientSlidePanel","isPaneOpen","pat_bio","pat_height","pat_weight","RightPaneHandle","backgroundImage","patient_Me","overlayClassName","isOpen","onRequestClose","subtitle","Image","thumbnail","GetSlidingPanel","Patient_CaseCreation","pageTitleUserDisplay","patModeID","categoryTitleUserDisplay","viewOrAddPicMode","descriptionTitleUserDisplay","pat_notes","PatientCaseCreationComponents","pat_data","prim_case_description","marginRight","is_rec_loading","patientRecords","GetDrInfoForBackend","selectedDr","parse","getItem","requestMethods","physician_id","ResPendingRec","s","responsestatus","patientSelectedCategory","pat_email","phy_email","phy_firstName","phy_lastName","phy_spec","phy_hospital","pics","caseTitle","prim_case_name","drModeID","d","Dr_CaseCreation","drCaseCreationComponents","HoverImgBlkWhite","overlayText","hover","imgSource","picHeight","picWidth","overlay","overlayColor","DropDownMenu","selectedBirthElement","dataArr","DropDownMenu_Hosp","hospital_name","DrAttritube","GetTitle","ShowRegistrationForm","outerProps","firstName","lastName","date","month","day","year","hospital","RegFunctionalComponent","Login","showLogin","handleLoginSubmit","loginInfoFromBackend","userDataBackend","userData","handleUserLoginFromNavBar","LoginRegisterDisplay","selectedFile","setCurrentYear","currentYear","Date","getFullYear","cntDay","iter_over_items","calculatedAge","GetAge","SelectLoginRegisterHandle","choice","isLogin","choseReturn","monthName","numericalBirthMonth","GetNumericalMonth","selectedBirthMonth","convertedBirthdate","selectedBirthYear","selectedBirthDay","getTime","abs","getUTCFullYear","DoctorPatientSelect","GetShowDoctorPatientPicLoginSelect","showIt_bool","showPic","handleDoctorPic","toggleShowPic","handlePatientPic","selectedUserMode","changeShowPic","selectedMode","doctor_left","patient_right","DisplaySelectionPics","SwitchToAccessPage","Payment_Form","handleInputFocus","focus","isShown","name_on_card","credit_card_num","exp_date","cv_code","subtotal","taxRate","total","showModalHandle","major_credit_card_pics","paddingRight","cvc","expiry","focused","number","icon","onFocus","prepend","borderRight","paddingTop","NavbarClass","to","exact","path","PatientNavBar","DoctorNavBar","NewUserNavBar","NavbarModes","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.17c1d5d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/patient_Me.799c0eb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.d1075aa1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/twitter.a14d80a1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/linkin.14c41c78.PNG\";","module.exports = __webpack_public_path__ + \"static/media/docwithclipboard.ba55f78c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/left_doctor.70544c40.png\";","module.exports = __webpack_public_path__ + \"static/media/right_patient.43a233be.png\";","module.exports = __webpack_public_path__ + \"static/media/major_credit_cards_pic.c94befce.png\";","import React from 'react';\nimport {Button, Form, Container, Row, Col, Modal} from 'react-bootstrap';\nimport {MDBInput} from 'mdbreact';\nimport '../../css/modalLarge.css';\n\n\nexport class DrWritesSecondOpinion extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                secondDiagnosisMessage: '',\n                parsedJSON: [],\n                show: true\n\n            };\n\n        this.correctCase = [];\n\n    }\n\n    componentDidMount() {\n        //Convert these to props later\n        let doctorID = 1;\n        let allCaseInfo = [];\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": this.props.phy_id})\n        };\n\n        fetch(\"http://52.247.220.137:80/get_all_physician_records\",requestOptions)\n            .then(response => response.json())\n            .then(json => {\n                for(let i = 0; i < json.length; i++)\n                {\n\n                    if(this.props.phy_id == json[i].phy_id)\n                    {\n                        allCaseInfo = json[i];\n                        i = json.length;\n                    }\n                }\n                this.setState(\n                    {\n                        parsedJSON: allCaseInfo\n                    }\n                )\n            });\n    }\n\n    OpenCloseModalHandler()\n    {\n        this.setState(\n            {\n                show: this.props.showAssessmentPageModal\n            }\n        )\n    }\n\n\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n\n    }\n\n    SelectTitle()\n    {\n        /*\n        if(this.props.data.userMode === 'Doctor')\n        {\n            return(<Form.Label><u className={\"display-4\"}>Case Diagnosis</u></Form.Label>);\n        }\n        else\n        {\n            return(<Form.Label><u className={\"display-4\"}>Case Review</u></Form.Label>);\n        }\n        */\n\n    }\n\n\n\n\n    showDrEditView = () =>\n    {\n        return(\n            <Container style={{width:\"50%\", margin:\"auto\"}}>\n                <Form className={'loginForm'} onSubmit={this.handleSubmit}>\n                    {this.SelectTitle()}\n                    <br />\n\n                    <Container style={{width: \"50%\", margin:\"auto\"}}>\n                        <Form.Label>\n                            <Row>\n                                <Col  style={{width: \"50%\", margin:\"auto\", border: \"1px\", padding:\"25px\", borderStyle: \"solid\", borderColor: \"black\"}}>\n                                    <h3 style={{padding: \"2px\"}}>Fill in Second Diagnosis</h3>\n                                    <Row style={{padding:\"5px\"}}>Patient Name: {this.state.parsedJSON.pat_name}</Row>\n                                    <Row style={{padding:\"5px\"}}>Patient Sex: {this.state.parsedJSON.pat_sex}</Row>\n                                    <Row style={{padding:\"5px\"}}>Patient Age: {this.state.parsedJSON.pat_age}</Row>\n                                    <Row style={{padding:\"5px\"}}>Patient Email: {this.state.parsedJSON.email}</Row>\n                                    <Row style={{padding:\"5px\"}}>Record ID: {this.state.parsedJSON.record_id}</Row>\n                                    <br />\n                                    Patient Medical History:\n                                    <Container>\n                                        <Row style={{border: \"2px\", padding:\"25px\", borderStyle: \"solid\", borderColor: \"black\"}}>\n                                            {this.state.parsedJSON.pat_medical_history}</Row>\n                                    </Container>\n                                    <br />\n                                    Primary Diagnosis:\n                                    <Container>\n                                        <Row style={{border: \"2px\", padding:\"25px\", borderStyle: \"solid\", borderColor: \"black\"}}>\n                                            {this.state.parsedJSON.comment}</Row>\n                                    </Container>\n                                </Col>\n                            </Row>\n                        </Form.Label>\n                    </Container>\n\n                    <MDBInput  type={\"textarea\"}\n                               name=\"secondDiagnosisMessage\"\n                               label={\"Enter Second Diagnosis Here\"}\n                               value={this.state.secondDiagnosisMessage}\n                               onChange={this.handleInputChange}\n                               rows={10}\n                               cols={100}\n                               required/>\n\n\n                    <br />\n\n\n                    <Button type=\"button\" onClick={()=>this.handleSubmit()}>Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n\n\n    handleSubmit()\n    {\n\n        //Submit to the backend the assessment and mark status as complete\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"record_assessment_id\": this.props.recordID, \"assessment\": this.state.secondDiagnosisMessage,\n                \"status\": \"Complete\"})\n        };\n\n        fetch(\"http://52.247.220.137:80/update_pending_records\", requestOptions)\n            .then(response=>response.text()).then(text => console.log(text))\n            .then(() => this.props.reload_tables());\n\n\n    }\n\n    render() {\n\n        return(\n            <div>\n\n                <Modal show ={this.state.show}  dialogClassName=\"modal-xl\" role=\"document\"\n                    >\n                    <Modal.Header>Case Assessment</Modal.Header>\n                    <Modal.Body>\n\n                        {this.showDrEditView()}\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.props.ShowAssessmentPageModalHandle}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n\n        );\n    }\n\n}","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport {Button, Container, Modal} from 'react-bootstrap';\nimport {DrWritesSecondOpinion} from './case_related/drWritesSecondOpinion';\nimport 'bootstrap/dist/css/bootstrap.css';\nconst {SearchBar} = Search;\n\nexport class GenerateSortableTable extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            parsedJSONObj: [], //this array will have everything parsedJSONObj and will include a url to caseID and cancel buttons\n            error: null,\n            showModal: false,\n            record_assessment_id: null,\n            showAssessmentPageModal: false\n        };\n\n        this.recordID = null;\n        this.ShowAssessmentPageModalHandle = this.ShowAssessmentPageModalHandle.bind(this);\n    }\n\n\n    handleModal(status, record_assessment_id)\n    {\n\n\n        this.setState({\n            showModal: status,\n            record_assessment_id: record_assessment_id\n        })\n\n    }\n\n    CloseModalHandle()\n    {\n        //Closes the modal\n        this.handleModal(false, null);\n        //Refreshes Page\n        //window.location.reload(false);\n        this.LoadTables();\n\n    }\n\n    CaseCancellationHandle(record_assessment_id)\n    {\n\n\n        //send to backend this.state.parsedJSONObj.record_id for deletion\n\n        //Call in fetch to delete case with id\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"record_assessment_id\": record_assessment_id,\n                                        \"assessment\": \"\", \"status\": \"Cancelled\"})\n        };\n\n        fetch(\"http://52.247.220.137:80/update_pending_records\", requestOptions)\n            .then(response=>response.text())\n            .then(text => {\n                this.LoadTables();\n                console.log(text)});\n        //Close Modal\n        this.CloseModalHandle();\n        //Refreshes page\n        //window.location.reload(false);\n        this.LoadTables();\n\n\n    }\n\n\n    ConfirmCancelButtonHandle(record_assessment_id)\n    {\n        //Ask user to confirm\n        return(\n            <div>\n\n                <Modal show = {this.state.showModal}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        Are you sure you want to delete this case?\n\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Button onClick={()=>{this.CaseCancellationHandle(record_assessment_id)}}>Yes</Button>\n                        <Button onClick={()=>{this.CloseModalHandle()}}>No</Button>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n\n    }\n\n    componentDidMount() {\n        this.LoadTables();\n    }\n\n    LoadTables()\n    {\n        fetch(this.props.incomingData.URL_for_Fetch, this.props.incomingData.requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n\n                    let l = result.length;\n                    for (let i = 0; i < l; i++) {\n                        if (result[i].status == \"pending\" && this.props.is_patient) {\n                            result[i].cancelButton = <Button onClick={() => {\n\n                                this.handleModal(true, result[i].record_assessment_id)\n\n                            }}>Cancel</Button>\n\n                        }\n                        else if (result[i].status == \"pending\" && !this.props.is_patient){\n                            result[i].cancelButton = <Button onClick={() => {\n                                this.handleModal(true, result[i].record_assessment_id)\n\n                            }}>Cancel</Button>\n                            result[i].acceptButton = <Button onClick={() => {\n                                fetch(\"http://52.247.220.137/accept_pending_record\",\n                                    {\n                                        method: 'PUT',\n                                        headers: {'Content-Type': 'application/json'},\n                                        body: JSON.stringify({\"record_assessment_id\": result[i].record_assessment_id})\n                                    }).then(() => alert(\"accepted!\"))\n                                    .then(() => {\n                                        this.LoadTables();\n                                    });\n                            }}>Accept</Button>\n                        }\n                        else if(result[i].status == \"Awaiting Payment\" && this.props.is_patient)\n                        {\n                            result[i].payButton = <Button onClick={() => {\n                                fetch(\"http://52.247.220.137/pay\",\n                                    {\n                                        method: 'PUT',\n                                        headers: {'Content-Type': 'application/json'},\n                                        body: JSON.stringify({\"record_assessment_id\": result[i].record_assessment_id})\n                                    }).then(() => alert(\"Payment Accepted!\"))\n                                    .then(() => {\n                                        this.LoadTables();\n                                    });\n                            }}>Pay</Button>\n\n                        }\n                        else if(result[i].status == \"Diagnosing\" && !this.props.is_patient) {\n\n                            result[i].createAssessmentButton = <Button onClick={() => {\n                                this.recordID = result[i].record_assessment_id;\n                                this.setState(\n                                    {\n                                        showAssessmentPageModal: true\n                                    }\n                                )\n                            }\n                            }>Create Assessment</Button>\n                        }\n                    }\n                    this.setState({\n                        parsedJSONObj: result\n                    })\n                },\n\n                (error) => {\n                    console.log(\"Error with JSON retrieval for Client Ongoing Case Table.\");\n                    console.log(error.data);\n\n                }\n            );\n    }\n\n    ShowAssessmentPageModalHandle()\n    {\n        this.setState(\n            {\n                showAssessmentPageModal: !this.state.showAssessmentPageModal\n            }\n        )\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.ConfirmCancelButtonHandle(this.state.record_assessment_id)}\n                <Container>\n                    { this.state.showAssessmentPageModal && <DrWritesSecondOpinion recordID={this.recordID}\n                                                                                   phy_id={this.props.phy_id}\n                                                                                   showAssessmentPageModal={this.state.showAssessmentPageModal}\n                                                                                   ShowAssessmentPageModalHandle = {this.ShowAssessmentPageModalHandle}\n                                                                                   reload_tables={() => this.LoadTables()}\n                                                                /> }\n                    <ToolkitProvider\n                        keyField=\"id\"\n                        data={ this.state.parsedJSONObj }\n                        columns={ this.props.incomingData.columns }\n                        defaultSorted={ this.props.incomingData.defaultSorted }\n                        columnToggle\n                        search\n                    >\n                        {\n                            props => (\n                                <div>\n                                    <h3>Input something at below input field:</h3>\n                                    <SearchBar { ...props.searchProps } />\n                                    <hr />\n                                    <BootstrapTable\n                                        { ...props.baseProps }\n                                    />\n                                </div>\n                            )\n                        }\n                    </ToolkitProvider>\n                </Container>\n\n            </div>\n        );\n    }\n}","import React, { useState, useCallback } from 'react'\nimport { useTransition, animated } from 'react-spring'\nimport '../../css/animatedBackground.scss';\nimport {GenerateSortableTable} from '../generateSortableTable';\n\n\nexport function SlidePageTransitionAnimation(tableSettings) {\n\n    const [index, set] = useState(0)\n    const onClick = useCallback(() => set(state => (state + 1) % 2), [])\n    const transitions = useTransition(index, p => p, {\n        from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n        enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n        leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' },\n    })\n\n    let pages = [\n        ({ style }) => <animated.div style={{ ...style, background: 'white' }}><GenerateSortableTable incomingData={tableSettings.incomingData} /></animated.div>,\n        ({ style }) => <animated.div style={{ ...style, background: 'white' }}><GenerateSortableTable incomingData={tableSettings.incomingData} /></animated.div>,\n\n    ]\n    console.log(\"Why am I not transitioning this page!\");\n\n    return (\n        <div className=\"simple-trans-main\">\n            {transitions.map(({ item, props, key }) => {\n                const Page = pages[item]\n                return <Page key={key} style={props} />\n            })}\n\n            <button onClick={onClick}>Animate</button>\n        </div>\n    )\n}\n\n","import React from 'react';\nimport {SlidePageTransitionAnimation} from '../animations/ani_reload_mgmt_table';\n\nexport class ClientTable_OnGoing extends React.Component\n{\n\n    constructor(props) {\n        super(props);\n        console.log(\"GET DEEZ PROPS for Patient\");\n        console.log(props);\n        this.data={\n            is_patient: true\n        };\n\n        this.data.defaultSorted = [{\n            dataField: 'id',\n            order: 'desc'\n        }];\n\n        this.data.columns = [{\n            dataField: 'phy_name',\n            text: 'Doctor',\n            sort: true\n        }, {\n            dataField: 'comment',\n            text: 'Original Diagnosis',\n            sort: true\n        }, {\n            dataField: 'assessment',\n            text: 'Secondary Diagnosis',\n            sort: true\n        }, {\n            dataField: 'completion_dt',\n            text: 'Date Completed',\n            sort: true\n        }, {\n            dataField: 'create_dt',\n            text: 'Date Created',\n            sort: true\n        }, {\n            dataField: 'status',\n            text: 'Case Status',\n            sort: true\n        }, {\n            dataField: 'cancelButton',\n            text: 'Cancel',\n            sort: false\n            }];\n\n        this.data.requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"pat_id\": this.props.userInfo.pat_id})\n        };\n        this.data.URL_for_Fetch = \"http://52.247.220.137/get_all_patient_records\";\n        this.data.userInfo = this.props.userInfo;\n    }\n\n    render() {\n        console.log(\"AAAAdata from client_ongoing\");\n        console.log(this.data);\n        console.log('THIS IS PROPS');\n        console.log(this.props.userInfo.pat_id);\n        return (\n            <div>\n                <SlidePageTransitionAnimation incomingData={this.data} />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport {ClientTable_OnGoing} from './clientTable_OnGoing';\n\nexport class ClientCaseManagement extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n\n    }\n\n\n\n    render() {\n      console.log(\"from Client Case Management modeID = \" + this.props.userInfo.modeID);\n      console.log(\"from Client Case Management userID = \" + this.props.userInfo.userID);\n\n\n      return(\n          <div>\n              <h2 style={{textAlign: 'center'}}><u>Patient Case Management</u></h2>\n              <ClientTable_OnGoing userInfo = {this.props.userInfo}/>\n\n          </div>\n      );\n  }\n};\n\n//   <ClientTable_Completed userInfo = {this.props.userInfo}/>","import React from 'react';\n\n\nimport {GenerateSortableTable} from '../generateSortableTable';\n\nexport class DrCaseManagement extends React.Component\n{\n\n    constructor(props) {\n        super(props);\n        console.log(\"PROPS FOR DR CASE MANAGEMENT\");\n        console.log(props);\n        this.data = {\n            is_patient: false\n        };\n\n        this.data.defaultSorted = [{\n            dataField: 'id',\n            order: 'desc'\n        }];\n\n        this.data.columns = [{\n            dataField: 'id',\n            text: 'Case ID',\n            sort: true\n        }, {\n            dataField: 'pat_name',\n            text: 'Patient Name',\n            sort: true\n        }, {\n            dataField: 'comment',\n            text: 'Original Diagnosis',\n            sort: true\n        }, {\n            dataField: 'assessment',\n            text: 'Secondary Diagnosis',\n            sort: true\n        }, {\n            dataField: 'completion_dt',\n            text: 'Date Completed',\n            sort: true\n        }, {\n            dataField: 'create_dt',\n            text: 'Date Created',\n            sort: true\n        }, {\n            dataField: 'status',\n            text: 'Case Status',\n            sort: true\n        }, {\n            dataField: 'cancelButton',\n            text: 'Cancel',\n            sort: false\n        }, {\n            dataField: 'acceptButton',\n            text: 'Accept',\n            sort: false\n        }, {\n            dataField: 'createAssessmentButton',\n            text: 'Assessment',\n            sort: false\n        }, {\n            dataField: 'payButton',\n            text: 'Payment',\n            sort: false\n        }];\n\n        this.data.requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": this.props.userInfo.phy_id})\n        };\n        this.data.URL_for_Fetch = \"http://52.247.220.137/get_all_physician_records\";\n        this.data.userInfo = this.props.userInfo;\n    }\n\n    render() {\n        return (\n            <div>\n                <GenerateSortableTable incomingData = {this.data} phy_id={this.props.userInfo.phy_id}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Container, Col, Row, Form, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css'\nexport class Contact extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state ={\n            physician_email: 'foolycooly288622@yahoo.com'\n        };\n    }\n\n    displayLoginForm = () =>\n    {\n        return(\n          <div>\n              <h1  className=\"h1-responsive font-weight-bold text-center my-4\" style={{textAlign: 'center'}}>Contact Us</h1>\n              <Container className=\"col-md-9 mb-md-0 mb-5\"  style={{width:\"500px\", margin:\"auto\"}}>\n\n                  <Form action = { `mailto:${this.state.physician_email}`} method={ \"post\"}\n                        encType={ \"text/plain\" } className={ \"form-control\" } style ={{border:\"0px\"}}>\n                      <Row>\n                        <Form.Group controlId={\"nameContact\"} style={{paddingLeft:\"10%\"}}>\n                          <Form.Label>Name</Form.Label>\n                          <Form.Control as={\"input\"} type={ \"text\" } name={ \"From \"} className={ \"form-control\"}\n                                        placeholder={\"Your fullname\"} style={{width:\"150%\"}}/>\n                        </Form.Group>\n                      </Row>\n                      <Row>\n                          <Form.Group controlId={\"emailContact\"} style={{paddingLeft:\"10%\"}}>\n                              <Form.Label>Email</Form.Label>\n                              <Form.Control as={\"input\"} name={  \"Recipient's Email \" }\n                                     className={  \"form-control\" } placeholder={\"name@example.com\"} style={{width:\"150%\"}}/>\n                          </Form.Group>\n                      </Row>\n\n\n                      <Row>\n                          <Form.Group controlId={\"messageContact\"} style={{paddingLeft:\"10%\"}}>\n                              <Form.Label>Message</Form.Label>\n\n                              <Form.Control name={\"Message\"} as={\"textarea\"} rows={5} cols={100}\n                                            placeholder={\"Your message...\"}/>\n                          </Form.Group>\n\n                      </Row>\n\n\n                      <Button style={{borderLeft:\"10%\", marginLeft:\"9%\", paddingLeft:\"-10%\"}} as={\"input\"} type={  \"submit\"} name = { \"\" } />\n\n                  </Form>\n\n\n              </Container>\n          </div>\n        );\n    }\n\n    render() {\n\n        return(\n            <div>\n                {this.displayLoginForm()}\n            </div>\n        );\n    }\n};\n\n//<Modal_It nameOfFunction={this.displayLoginForm()} modalTitle={\"Contact\"} />","import React from 'react';\nimport {Button, Form, Col, Row, Container, Collapse, DropdownButton, ButtonGroup, Dropdown} from 'react-bootstrap';\nimport '../../css/hoverForText.css';\nimport {MDBInput} from 'mdbreact';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport class DrEdit extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.data = {};\n        this.data.oldBio = this.props.pat_medical_history;\n\n\n        this.state =\n            {\n                bio: '',\n                email: '',\n                password: '',\n                repassword: '',\n                age: '',\n                name: '',\n                npi: '',\n                sex: '',\n                picture: '',\n                speciality: '',\n                hospitalNameArr: [\n                    {label:\"Cleveland Clinic\", value:\"Cleveland Clinic\"},\n                    {label: \"Johns Hopkins Hospital\", value: \"Johns Hopkins Hospital\"},\n                    {label: \"Mayo Clinic\", value: \"Mayo Clinic\"},\n                    {label: \"UCLA Medical Center\", value: \"UCLA Medical Center\"}\n                    ],\n                currentHospital: 'Johns Hopkins Hospital',\n                passwordAuthorization: '',\n                showOldBio: false,\n                assignJSON: [],\n                isLoading: false\n            };\n\n\n\n\n\n    }\n\n    componentDidMount() {\n        console.log(\"this from drEdit.js\");\n        console.log(this.props);\n\n        if(this.props.userMode == \"patient\") {\n            this.data.oldBio = this.props.pat_medical_history;\n\n            this.setState(\n                {\n                    bio: this.props.userInfo.pat_medical_history,\n                    email: this.props.userInfo.email,\n                    password: this.props.userInfo.password,\n                    repassword: this.props.userInfo.password,\n                    name: this.props.userInfo.pat_name,\n\n                    picture: '',\n\n                    currentHospital: 'Johns Hopkins Hospital',\n                    passwordAuthorization: '',\n                    assignJSON: [],\n                    isLoading: false,\n                    sex: 'm'\n                }\n            )\n        }\n        //Handles multiple namings\n        else if(this.props.userMode == \"physician\" || this.props.userMode == \"doctor\" )\n        {\n\n            this.data.oldBio = this.props.pat_medical_history;\n\n            this.setState(\n                {\n                    bio: this.props.userInfo.phy_bio,\n                    email: this.props.userInfo.email,\n                    password: this.props.userInfo.password,\n                    repassword: this.props.userInfo.password,\n                    name: this.props.userInfo.phy_name,\n                    npi: this.props.userInfo.npi,\n                    picture: '',\n                    speciality: this.props.userInfo.phy_qual,\n                    currentHospital: 'Johns Hopkins Hospital',\n                    passwordAuthorization: '',\n                    assignJSON: [],\n                    isLoading: false,\n                    sex: 'm'\n                }\n            )\n\n\n        }\n\n        //Insert endpoint for gathering user info here in Phase II for updated information\n    }\n\n    iter_over_items(){\n        let inputs = document.getElementById(\"myForm\").elements;\n\n        let to_send = {};\n\n        for (var i = 0; i < inputs.length; i++) {\n            let element = inputs[i];\n\n            to_send[element.name] = element.value;\n\n\n        }\n\n\n        return to_send;\n    }\n\n    setDefaultHospital = (event) =>\n    {\n        let indxCurrentHospital = 0;\n        const currHospitalName = this.state.currentHospital;\n\n        //Checks for the index of current hospital for default value of select menu right below\n        {this.state.hospitalNameArr.map(function(hospitalName, index){\n            if(currHospitalName === hospitalName.value)\n            {\n                indxCurrentHospital = index;\n            }\n        })}\n\n        return(\n            <Form.Label>\n                Select Clinic:\n\n                <br/>\n\n                <Form.Control as={\"select\"} name = \"selectedHospitalName\"\n                        defaultValue={this.state.hospitalNameArr[indxCurrentHospital].value}\n                        onChange={this.handleInputChange}>\n                    {this.state.hospitalNameArr.map(function(hospitalName, index){\n                        return <option key={index} value={hospitalName.value}>{hospitalName.value}</option>\n                    })}\n\n\n                </Form.Control>\n\n\n            </Form.Label>\n        );\n\n    }\n\n    handleShowOldBio(showOldBioNew)\n    {\n        console.log(\"Before \"+ this.state.showOldBio)\n\n        this.setState({\n            showOldBio: !showOldBioNew\n        });\n\n        console.log(\"After \"+ this.state.showOldBio)\n    }\n\n    handleInputChange = (event) => {\n\n        this.setState(\n            {\n\n                [event.target.name]:event.target.value\n\n            })\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        console.log(\"I am in handleSubmit(event) for from here is \" + this.props.userMode)\n\n        if(this.state.passwordAuthorization == this.props.userInfo.password)\n        {\n\n            if(this.props.userMode == \"patient\") {\n\n                //Run endpoint for submitting changes to backend\n                //\"username\", \"age\", \"sex\", \"medical_history\", \"email\", \"password\", \"pat_id\", \"name\"\n                console.log(\"DUUUUUE NOTGETTING PAT AGE!!\");\n                console.log(this.state);\n                console.log(\"thiiiss props\");\n                console.log(this.props);\n                const requestOptions = {\n                    method: 'PUT',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({\n                        \"username\": this.props.userInfo.username,\n                        \"pat_name\": this.state.name,\n                        \"pat_age\": this.state.age,\n                        \"pat_sex\": this.state.sex,\n                        \"pat_medical_history\": this.state.bio,\n                        \"email\": this.state.email,\n                        \"password\": this.props.userInfo.password,\n                        \"pat_id\": this.props.userInfo.pat_id\n                    })\n                };\n\n                fetch(\"http://52.247.220.137:80/client\", requestOptions)\n                    .then(response => console.log(response));\n\n            }\n            //Handles multiple namings\n            else if(this.props.userMode == \"physician\" || this.props.userMode == \"doctor\" )\n            {\n\n                console.log(\"Testing_physician PUT\");\n\n                const requestOptions = {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({\"npi\": this.props.userInfo.npi, \"username\": this.props.userInfo.username,\n                        \"phy_name\": this.state.name, \"phy_bio\": this.state.bio,\n                        \"phy_addr\": this.props.userInfo.phy_addr, \"phy_qual\": this.state.speciality,\n                        \"reviewCnt\": 0, \"email\": this.props.userInfo.email, \"password\": this.props.userInfo.password,\n                        \"phy_id\": this.props.userInfo.phy_id, \"hospital_id\": this.props.userInfo.hospital_id})\n                };\n\n                fetch(\"http://52.247.220.137:80/physician\", requestOptions)\n                    .then(response => console.log(response));\n\n\n            }\n\n\n            console.log(\"Look for state\");\n            console.log(this);\n            alert(\"Changes have been submitted. Note for testing purposes, changes made to Password has been blocked at this time.\");\n        }\n        else\n        {\n            alert(\"Confirmation password does not match. Test Mode: Try \" + this.props.userInfo.password);\n        }\n\n\n    }\n\n    SelectSexHandle(selectedSex)\n    {\n        this.setState(\n            {\n                sex: selectedSex\n            }\n        )\n        console.log(this.state.sex);\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                {\n                    !this.state.isLoading &&\n                <Container>\n\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Label>\n                            Edit Personal Info\n                        </Form.Label>\n                        <br/>\n                        <Form.Label>\n                            Email:\n                            <Form.Control as={\"input\"}\n                                          name=\"email\"\n                                          type=\"text\"\n                                          onChange={this.handleInputChange}\n                                          placeholder={this.state.email}\n\n\n                            />\n                        </Form.Label>\n\n                        <br/>\n\n                        <Form.Label>\n                            Change Password:\n                            <Form.Control as={\"input\"}\n                                          name=\"password\"\n                                          type=\"password\"\n                                          onChange={this.handleInputChange}\n                                          placeholder={'******'}\n                            />\n                        </Form.Label>\n\n                        <br/>\n\n                        <Form.Label>\n                            Repeat Password:\n                            <Form.Label as={\"input\"}\n                                        name=\"repassword\"\n                                        type=\"password\"\n                                        onChange={this.handleInputChange}\n                                        placeholder={'******'}\n                            />\n                        </Form.Label>\n\n                        <br/>\n                        <Form.Label>\n                            Full Name:\n                            <Form.Control as={\"input\"}\n                                          name=\"name\"\n                                          type=\"text\"\n                                          placeholder={this.state.name}\n                                          onChange={this.handleInputChange}\n\n                            />\n                        </Form.Label>\n\n                        <br />\n\n                        <Form.Label>\n                            Age:\n                            <Form.Control as={\"input\"}\n                                          name=\"age\"\n                                          type=\"number\"\n                                          placeholder={this.state.age}\n                                          onChange={this.handleInputChange}\n\n                            />\n                        </Form.Label>\n\n\n                        <br/>\n\n\n                        {this.setDefaultHospital()}\n\n\n                        <br/>\n\n\n                        <br/><br/>\n\n                        <div>\n                            {\n                                    <DropdownButton\n                                        as={ButtonGroup}\n                                        name={\"selectSex\"}\n                                        title={\"Choose Gender\"}\n                                    >\n                                        <Dropdown.Item onClick={()=>this.SelectSexHandle(\"m\")}>Male</Dropdown.Item>\n                                        <Dropdown.Item onClick={()=>this.SelectSexHandle(\"f\")}>Female</Dropdown.Item>\n                                    </DropdownButton>\n                                }\n                        </div>\n                        <br/>\n\n                        { ( (this.props.userMode == 'physician') || (this.props.userMode == 'doctor') &&\n                            <Form.Label>\n                                Specialty:\n                                <Form.Control as={\"input\"}\n                                              name=\"speciality\"\n                                              type=\"text\"\n                                              placeholder={this.state.speciality}\n                                              onChange={this.handleInputChange}\n\n                                />\n                            </Form.Label>\n                        )}\n\n                        <br/>\n                        <Form.Label>Bio:</Form.Label>\n                        <Form.Control as=\"textarea\" name=\"bio\" value={this.state.bio} ref=\"newText\"\n                                      style={{rows: \"10\", cols: \"10\"}} onChange={this.handleInputChange}></Form.Control>\n\n\n                        <br/>\n                        <Form.Label>\n                            <MDBInput as={\"input\"}\n                                      name=\"passwordAuthorization\"\n                                      label={\"Enter Password to submit changes:\"}\n                                      type=\"password\"\n                                      placeholder={this.state.passwordAuthorization}\n                                      onChange={this.handleInputChange}\n                                      style={{\n                                          width: \"100%\", padding: \"12px 40px\",\n                                          margin: \"auto\"\n                                      }}\n\n                                      required/>\n                        </Form.Label>\n                        <br/>\n                        <Button type=\"submit\" value={this.state.value}>Submit</Button>\n                    </Form>\n                </Container>\n\n                }\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Button, Row, Col, Container} from 'react-bootstrap';\n\n\n\nexport class TestEndpoint extends React.Component\n{\n    /**********************************\n     *                                *\n     *          The PUTs              *\n     *                                *\n     **********************************/\n\n    Test_client_Handle()\n    {\n        console.log(\"Testing_client PUT\");\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"username\": 1, \"name\":'Kevin Vo', \"age\": 1, \"sex\": 1, \"medical_history\": 1, \"email\": \"1@yahoo.com\", \"password\": 1, \"pat_id\": 3})\n        };\n\n        fetch(\"http://52.247.220.137:80/client\", requestOptions)\n            .then(response => console.log(response));\n\n    }\n\n    Test_physician_Handle()\n    {\n        console.log(\"Testing_physician PUT\");\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"npi\": 99, \"username\": 1, \"name\": \"Eric Diaz\", \"bio\": \"Dances in the evening\",\n                \"addr\": \"1987 Apple Dr\", \"qual\": \"Butts\", \"reviewCnt\": 1, \"email\": \"phy@phy.com\", \"password\": \"258\", \"phy_id\":3})\n        };\n\n        fetch(\"http://52.247.220.137:80/physician\", requestOptions)\n            .then(response => console.log(response));\n    }\n\n    Test_update_pending_records_Handle()\n    {\n        console.log(\"Testing_update_pending_records PUT\");\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"record_assessment_id\": 1, \"assessment\": 1, \"status\": \"Complete\"})\n        };\n\n        fetch(\"http://52.247.220.137:80/update_pending_records\", requestOptions)\n            .then(response=>response.text()).then(text => console.log(text));\n\n    }\n\n\n\n    Test_WTFFF_accept_pending_record_Handle()\n    {\n        console.log(\"WTFFF_accept_pending_record PUT\");\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"record_assessment_id\": 2})\n        };\n\n        fetch(\"http://52.247.220.137:80/accept_pending_record\", requestOptions)\n            .then(response => console.log(response));\n    }\n\n    /**********************************\n     *                                *\n     *          The POSTs             *\n     *                                *\n     **********************************/\n\n    Test_record_assessment_Handle()\n    {\n        console.log(\"Testing record_assessment POST\");\n\n        const requestOptions ={\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\"record_id\": 1, \"physician_id\": 1, \"pat_id\": 1} )\n        };\n\n        fetch(\"http://52.247.220.137/record_assessment\", requestOptions)\n            .then(response => console.log(response));\n    }\n\n\n\n    Test_get_client_records_Handle()\n    {\n        console.log(\"Testing get_client_records POST \");\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"record_id\":1,\"pat_id\":1,\"physician_id\":1})\n        };\n\n        fetch(\"http://52.247.220.137:80/client_records\",requestOptions)\n            .then(response => response.json())\n            .then(json => console.log(json));\n\n\n\n    }\n\n    Test_get_all_physician_records_Handle()\n    {\n        console.log(\"Testing get_all_physician_records POST\");\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\":1})\n        };\n\n        fetch(\"http://52.247.220.137:80/get_all_physician_records\",requestOptions)\n            .then(response => response.json())\n            .then(json => console.log(json));\n\n\n\n    }\n\n    Test_get_all_patient_records_Handle()\n    {\n        console.log(\"Testing get_all_patient_records POST\");\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"pat_id\":1})\n        };\n\n        fetch(\"http://52.247.220.137:80/get_all_patient_records\",requestOptions)\n            .then(response => response.json())\n            .then(json => console.log(json));\n\n\n\n    }\n\n    /**********************************\n     *                                *\n     *          The GETs              *\n     *                                *\n     **********************************/\n\n    Test_get_pending_records_Handle()\n    {\n        console.log(\"Testing get_pending_records GET\");\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": 3})\n        };\n\n        fetch(\"http://52.247.220.137/get_pending_records\", requestOptions)\n            .then(response => response.json())\n            .then(json => console.log(json));\n\n    }\n\n    Test_hospitals_Handle()\n    {\n        console.log(\"Testing Hospitals GET\");\n\n        fetch(\"http://52.247.220.137:80/hospitals\")\n            .then(response => response.json())\n            .then(json => console.log(json));\n    }\n\n\n    Test_client_all_Handle()\n    {\n        console.log(\"Testing client_all GET\");\n\n        fetch(\"http://52.247.220.137:80/client/all\")\n            .then(response => response.json())\n            .then(json => console.log(json));\n    }\n\n    Test_client_id_Handle()\n    {\n        console.log(\"Testing client_<id> GET\");\n\n        fetch(\"http://52.247.220.137:80/client/1\")\n            .then(response => response.json())\n            .then(json => console.log(json));\n    }\n    Test_physician_login_Handle()\n    {\n        console.log(\"Testing physician_login POST\");\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({username: \"bib@aol.com\", password: 1})\n        };\n\n        fetch(\"http://52.247.220.137:80/physician/login\", requestOptions)\n            .then(response => response.json())\n            .then(response => console.log(response));\n\n    }\n\n    render()\n    {\n        return(\n            <div>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Container style={{textAlign: \"center\"}}>\n                                <Row>\n                                    <Col>PUTs</Col>\n\n                                </Row>\n\n                                <Row>\n                                    <Button onClick={this.Test_client_Handle}>/client</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_physician_Handle}>/physician</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_update_pending_records_Handle}>/update_pending_records</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_WTFFF_accept_pending_record_Handle}>WTFFF_accept_pending_record</Button>\n                                </Row>\n\n\n                            </Container>\n                        </Col>\n                        <Col>\n                            <Container>\n                                <Row>\n                                    <Col>POSTs</Col>\n\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_record_assessment_Handle}>/record_assessment</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_get_client_records_Handle}>/client_records</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_physician_login_Handle}>/physician/login</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_get_all_physician_records_Handle}>/get_all_physician_records</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_get_all_patient_records_Handle}>/get_all_patient_records</Button>\n                                </Row>\n                            </Container>\n                        </Col>\n                        <Col>\n                            <Container>\n                                <Row>\n                                    <Col>GETs</Col>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_client_all_Handle}>/client/all</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_client_id_Handle}>/client/id</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_hospitals_Handle}>/hospitals</Button>\n                                </Row>\n                                <Row>\n                                    <Button onClick={this.Test_get_pending_records_Handle}>/get_pending_records</Button>\n                                </Row>\n\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Spring, animated, config } from 'react-spring/renderprops';\nimport {ContactUs_HomePage} from './homepage_sections/contact_us/contactus';\n//import '../css/style_homepage_background_scroll.css'\n\n\nimport {TestEndpoint} from \"./testEndpoint\";\n\nconst COLORS = [\n    'black',\n    'white',\n    'orange'\n]\n\nfunction Contact_us_display()\n{\n\n        return(\n            <div>\n                <ContactUs_HomePage />\n            </div>\n        );\n\n}\n\nexport class Homepage extends React.Component\n{\n    render()\n    {\n        return(\n            <div>\n                <TestEndpoint />\n            </div>\n        )\n    }\n}\n\n/*\nexport class Homepage extends React.Component {\n    state = { y: 0 }\n    el = React.createRef()\n    spring = React.createRef()\n    setY = () => this.setState({ y: Math.round(Math.random() * 750) + 50 })\n    // User interaction should stop animation in order to prevent scroll-hijacking\n    // Doing this on onWheel isn't enough, but just to illustrate ...\n    stop = () => this.spring.current.stop()\n    render() {\n\n        const y = this.el.current ? this.el.current.scrollTop : 0\n\n        return (\n            <>\n                <div className=\"scrolltop-main\">\n\n                    <Spring\n                        native\n                        reset\n                        from={{ y }}\n                        to={{ y: this.state.y }}\n                        ref={this.spring}\n                        config={config.slow}>\n                        {props => (\n                            <animated.div\n                                className=\"scrolltop-c\"\n                                ref={this.el}\n                                onWheel={this.stop}\n                                scrollTop={props.y}>\n                                <Carousel_it />\n                                <Contact_us_display />\n                                {COLORS.map(c => (\n                                    <div key={c} style={{ height: 1000, background: c }}>\n\n                                    </div>\n                                ))}\n                            </animated.div>\n                        )}\n                    </Spring>\n\n                </div>\n\n            </>\n        )\n\n\n    }\n\n}\n*/\n","import React from \"react\";\nimport pricedoctor from '../pictures/docwithclipboard.jpg';\n\n\nexport function Pricing() {\n\n\n    return (\n\n        <div>\n            <div className=\"pricing-logo\">\n                <img src={pricedoctor} alt=\"Doctor Clip Image\" />\n            </div>\n            <h1>Pricing</h1>\n            <p>\n                Here is a list of our prices!\n                <li>\n                    <a Our prices go here />\n                </li>\n\n\n            </p>\n        </div>\n\n    );\n\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst TAX_RATE = 0.08;\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 700,\n    },\n});\n// ~~~~~goal is to use this to pull backend data to front end to be displayed~~~~\n// export function PaymentInfo(props)\n// {\n//\n//     //Calls to endpoint for payment info\n//     console.log(\"Testing all payment history information\");\n//     const requestOptions = {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.parse({\"some kind of payment id\":1})\n//     };\n//\n//     fetch(\"http://52.247.220.137:80/get_all_physician_records\",requestOptions)\n//         .then(response => response.json())\n//         .then(\n//             (result) =>\n//             {\n//                 class PaymentInfo {\n//                     PaymentInfo.description = DescriptionId;\n//                     PaymentInfo.doctorID = DoctorId;\n//                     PaymentInfo.price = PriceId;\n//                 }\n//\n//\n//\n//\n//\n//             }\n//         );\n//\n// }\n\n\n// fixes numbers to only 2 decimal places\nfunction ccyFormat(num) {\n    return `${num.toFixed(2)}`;\n}\n// shows how many of a quantity\nfunction priceRow(qty) {\n    return qty;\n}\n// formats the rows to display information\nfunction createRow(desc, qty) {\n    const price = priceRow(qty);\n    return {desc, qty, price};\n}\n// shows subtotal\nfunction subtotal(items) {\n    return items.map(({price}) => price).reduce((sum, i) => sum + i, 0);\n}\n\n\nconst rows = [\n    //here is where one of the inputs will be pulled into the table\n    // under description is what kind of service theyre getting\n    createRow('DescriptionId', 150.00),\n];\n//these functions do math to add up the total.\n//Not sure if you'll need them since its going to be backend data\nconst invoiceSubtotal = subtotal(rows);\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\nexport function Paymenthistory() {\n    const classes = useStyles();\n\n\n    return (\n    // this is were the table starts\n        // line 94 is where the header starts\n        // line 135,137 is where the doctor id and card number\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"spanning table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" colSpan={3}>\n                            <h1>\n                                Payment History\n                            </h1>\n                        </TableCell>\n                        <TableCell align=\"right\"> </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>Description:</TableCell>\n                        <TableCell align=\"right\">Price:</TableCell>\n                        <TableCell align=\"right\"> </TableCell>\n                        <TableCell align=\"right\">Sum:</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.desc}>\n                            <TableCell>{row.desc}</TableCell>\n                            <TableCell align=\"right\">{row.qty}</TableCell>\n                            <TableCell align=\"right\"></TableCell>\n                            <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\n                        </TableRow>\n                    ))}\n\n                    <TableRow>\n                        <TableCell rowSpan={3}/>\n                        <TableCell colSpan={2}> Subtotal: </TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>Tax: </TableCell>\n                        <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell colSpan={2}> Total: </TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">Doctor: the doctor id </TableCell>\n                    </TableRow>\n                        <TableCell align=\"left\">Card Number: **** **** **** 1234</TableCell>\n                    <TableRow>\n                        <TableCell align=\"left\">Status: PAID </TableCell>\n                    </TableRow>\n                </TableBody>\n\n            </Table>\n        </TableContainer>\n    );\n}\n\n\n","import React from 'react';\nimport { Carousel, Button,Modal} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Pelvis pic https://post.healthline.com/wp-content/uploads/2020/08/pelvis-x-ray_thumb-1-732x549.jpg\nexport class PicCarousel extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                show: false,\n\n                pic:[\n                    {\n                        label: 'pic_1',\n                        valueTitle: 'X-Ray Pevis',\n                        valueURL: 'https://post.healthline.com/wp-content/uploads/2020/08/pelvis-x-ray_thumb-1-732x549.jpg',\n                        valueFileName: 'pelvis-x-ray_thumb-1-732x549.jpg',\n                        valueDescription:'Patient has fracture, joint dislocation and effusion, and several pediatric pathologies involving the pelvic girdle'\n                    },\n                    {\n                        label: 'pic_2',\n                        valueTitle: 'X-Ray Chest',\n                        valueURL: 'https://4rai.com/images/easyblog_articles/155/chest-xray.jpg',\n                        valueFileName: 'chest-xray.jpg',\n                        valueDescription: 'It\\'s evident patient has conditions such as pneumonia, heart failure, lung cancer, tuberculosis, sarcoidosis, and lung tissue scarring.'\n                    },\n                    {\n                        label: 'pic_3',\n                        valueTitle: 'X-Ray Hands',\n                        valueURL: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRJCJwq-te73EiuwrkdMiohyK60YY3ofiP7rw&usqp=CAU',\n                        valueFileName: 'hand-xray.jpg',\n                        valueDescription: 'Examined the radiocarpal and distal radioulnar joints, the carpals, metacarpals, and phalanges.'\n                    }\n                ]\n\n\n\n            };\n    }\n\n    loopCarouselItem = () =>\n    {\n\n        return(\n            this.state.pic.map(function(selectedPic,index) {\n                return (\n\n                    <Carousel.Item>\n                        <div style={{width: \"70%\", margin: \"auto\"}}>\n                        <img\n                            style={{maxHeight:\"1080px\", maxWidth:\"1920px\"}}\n                            key={index}\n                            className=\"d-block w-100\"\n                            src={selectedPic.valueURL}\n                            alt={selectedPic.valueFileName}\n                        />\n                        </div>\n                        <Carousel.Caption>\n                            <table style={{backgroundColor: 'rgba(23,32,42, 0.55)'}}>\n                                <h3>{selectedPic.valueTitle}</h3>\n                                <p style={{color: '#58D68D', fontSize: '30px', fontWeight: 'bold'}}>{selectedPic.valueDescription}</p>\n                            </table>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                );\n            })\n        );\n    }\n    handleModal()\n    {\n        this.setState({show:!this.state.show})\n    }\n\n    render() {\n        return(\n            <div>\n\n                <Button onClick={()=>{this.handleModal()}}>Show Pictures</Button>\n\n                <Modal show = {this.state.show}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        Case Pictures\n                        <Button onClick={()=>{this.handleModal()}}>\n                            Close\n                        </Button>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Carousel>\n                            {this.loopCarouselItem()}\n                        </Carousel>\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n\n                <br />\n            </div>\n        );\n    }\n}","import React, { useState } from \"react\";\nimport '../css/multiBrowseButton.css';\n\nexport const MultiBrowsePic = () => {\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const handleImageChange = (event) => {\n\n        if (event.target.files) {\n            const arrFiles = Array.from(event.target.files).map((file) =>\n                URL.createObjectURL(file)\n            );\n            console.log('GGG ');\n        console.log(arrFiles);\n            setSelectedFiles((prevImages) => prevImages.concat(arrFiles));\n            Array.from(event.target.files).map(\n                (file) => URL.revokeObjectURL(file)\n            );\n        }\n    };\n\n    const renderPhotos = (arrPics) => {\n        console.log(\"source: \", arrPics);\n        return arrPics.map((picture) => {\n            return <img src={picture} alt=\"\" key={picture} />;\n        });\n    };\n    \n    return (\n        <div className=\"app\">\n            <div>\n                <input type=\"file\" id=\"file\" multiple onChange={handleImageChange} />\n                <div className=\"label-holder\">\n                    <label htmlFor=\"file\" className=\"label\">Browse</label>\n                </div>\n                <div className=\"result\">{renderPhotos(selectedFiles)}</div>\n\n            </div>\n        </div>\n    );\n};\n\n","import React from \"react\";\nimport \"./assets/card.scss\";\nimport '../../css/makeImgUndraggable.css';\n\nconst FrontCard = (props) => {\n\n  return (\n    <article\n      id=\"front-card\"\n      className={`card-container ${props.class}`}\n      style={props.style}\n    >\n      <div className=\"img-item\">        </div>\n      <div className=\"text-item\">\n\n        <p>{props.user.doctorName}</p>\n        <p>{props.user.location}</p>\n        <p>{props.user.specialty}</p>\n        <img className={'imgUndraggable'} align={\"center\"} height={180} width={180} src={props.user.image} alt={\"docimg\"} />\n      </div>\n    </article>\n  );\n};\n\nconst BackCard = (props) => {\n\n  return (\n    <section\n      id=\"back-card\"\n      className={`card-container ${props.class}`}\n      style={props.style}\n    >\n      <h1>{props.user.about} More info</h1>\n      <div>{props.user.age} years old</div>\n      <div>NPI: {props.user.npi}</div>\n      <div>{props.user.location}</div>\n      <div>{props.user.email}</div>\n      <div>\n        <i className=\"fas fa-map-marker-alt\" />\n        {props.user.from}\n      </div>\n    </section>\n  );\n};\n\nconst cardPosition = (order, isBack, position) => {\n  if (order === 0 && (position.X || position.Y)) {\n    return {\n      display: order !== 0 && isBack ? \"none\" : \"flex\",\n      top: (position.Y / window.innerHeight) * 100 + \"%\",\n      left: (position.X / window.innerWidth) * 100 + \"%\",\n      width: `calc(300px - ${order}%)`\n    };\n  }\n  return {\n    display: order !== 0 && isBack ? \"none\" : \"flex\",\n    top: 50 + order + \"%\",\n    width: `calc(300px - ${order}%)`\n  };\n};\n\nconst showCardClass = (index, status, isBack) => {\n  if (index === 0) {\n    switch (status) {\n      case 1:\n        return isBack ? \"show-back-card\" : \"show-front-card\";\n      case 2:\n        return isBack ? \"show-front-card\" : \"show-back-card\";\n      default:\n        return \"\";\n    }\n  }\n};\n\nconst cardContainer = (props, position) => {\n  let card_list = [];\n  const maxNumberOfCards = 14;\n  props.user_data.map((val, index) => {\n  if(index < maxNumberOfCards) {\n    let mainScroll = index === 0 ? props.scroll : \"\";\n    card_list.push(\n        <FrontCard\n            user={val}\n            key={index}\n            class={\n              mainScroll + \" \" + showCardClass(index, props.show_status, false)\n            }\n            style={cardPosition(index, false, position)}\n        />,\n        <BackCard\n            user={val}\n            key={index + props.user_data.length}\n            class={mainScroll + \" \" + showCardClass(index, props.show_status, true)}\n            style={cardPosition(index, true, position)}\n        />\n    );\n  }\n    return card_list;\n  });\n  return card_list;\n};\n\nexport default cardContainer;\n","import React, {Component} from 'react';\nimport Hammer from 'react-hammerjs';\nimport cardContainer from './card_related/card';\n\nexport default class HammerArea extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      position: {\n        X: 0,\n        Y: 0\n      }\n\n    }\n  }\n\n  onDragStart = (e) => {\n    this.setState(() => {\n      return {\n        position: {\n          X: e.center.x,\n          Y: e.center.y\n        }\n      }\n    })\n  }\n\n  onDragEnd = (e) => {\n    if (e.deltaX < -50){\n      this.props.func_like(false);\n    } else if (50 < e.deltaX){\n      this.props.func_like(true);\n    }\n    this.setState(() => {\n      return {\n        position: {\n          X: 0,\n          Y: 0\n        }\n      }\n    })\n  }\n\n  render(){\n\n    return(\n      <Hammer\n          onPan={this.onDragStart}\n          onTap={this.props.func_show_info.bind(this)}\n          onPanEnd={this.onDragEnd}\n      >\n        <div className='card-area'>\n          {cardContainer(this.props.card_data, this.state.position)}\n        </div>\n      </Hammer>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport \"../assets/header.scss\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <p>Our Doctors</p>\n      </header>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport HammerArea from \"../../hammer\";\nimport \"../assets/body.scss\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport Header from \"./header\";\n\nexport default class Body extends Component {\n  constructor(props) {\n    super(props);\n\n    let dataList = this.props.drInfo;\n    console.log(dataList)\n\n    this.state = {\n      user_data: [...dataList],\n      is_moving: false,\n      show_status: 0,\n      scroll: \"\",\n        show: false\n\n    };\n    this.data ={}\n    this.data.cntIndexCard = 0;\n    this.data.numElements = dataList.length;\n    this.data.hadChosen = false;\n  }\n\n\n\n    handleModal()\n    {\n        this.setState({show:!this.state.show})\n    }\n\n    ShowContentsOfBody()\n    {\n\n        return(\n            <div>\n                <div id=\"main-container\">\n                    <HammerArea\n                        card_data={this.state}\n                        func_like={(is_like) => this.isLike(is_like)}\n                        func_show_info={() => this.isShowBackToggle()}\n                    />\n                    <div className=\"button-area\">\n                        <button\n                            onClick={this.isLike.bind(this, false)}\n                            disabled={this.state.is_moving}\n                        >\n                            <Button href=\"#\">Next</Button>\n                        </button>\n                        <button\n                            onClick={this.isShowBackToggle.bind(this)}\n                            disabled={this.state.is_moving}\n                        >\n                            <Button href=\"#\">Info</Button>\n                        </button>\n                        <button\n                            onClick={this.isLike.bind(this, true)}\n                            disabled={this.state.is_moving}\n                        >\n                            <Button href=\"#\">Select</Button>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    RunModalPhysician()\n    {\n\n        return(\n            <div>\n                <Button onClick={()=>{this.handleModal()}}>\n                    Select Physician\n                </Button>\n\n\n                <Modal show = {this.state.show}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        Select Secondary Physician\n                        <Button onClick={()=>{this.handleModal()}}>\n                            Close\n                        </Button>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Header />\n                        {this.ShowContentsOfBody()}\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n            </div>\n        )\n    }\n\n\n  isLike = (ans) => {\n      this.data.cntIndexCard = this.data.cntIndexCard + 1;\n      console.log(\"indxNum \" + this.data.cntIndexCard);\n\n      if(ans === true)\n      {\n\n          //Fixes underbound\n          if(this.data.cntIndexCard >= this.data.numElements | this.data.cntIndexCard < 0)\n          {\n              this.data.cntIndexCard = 1;\n          }\n\n          else if(this.data.cntIndexCard < 0)\n          {\n              this.data.cntIndexCard = this.data.cntIndexCard-1;\n          }\n          else if(this.data.hadChosen === false)\n          {\n              this.data.cntIndexCard = this.data.cntIndexCard - 1;\n          }\n\n          this.data.hadChosen = true;\n\n\n          //call function that takes in the index or card information to be shoved to the backend\n          //This just stores the doctor's information until submit button is pushed\n          //console.log(\"indxNum \" + this.data.cntIndexCard);\n\n          //console.log(people1);\n          //console.log(people1[this.data.cntIndexCard]);\n            let selectDr = JSON.stringify(this.state.user_data[this.data.cntIndexCard]);\n            console.log(selectDr);\n          sessionStorage.setItem('selectedDoctorIndx', selectDr);\n          this.handleModal();   //Closes the doctor selection modal\n\n\n      }\n\n    this.setState(() => {\n      return {\n        is_moving: true,\n        scroll: ans ? \"right-scroll\" : \"left-scroll\"\n      };\n    });\n    setTimeout(() => {\n      let data = this.state.user_data;\n      data.shift();\n      this.setState(() => {\n        return {\n          user_data: this.props.createDataList(data),   //I changed this with Eric and Bernie\n          is_moving: false,\n          show_status: 0,\n          scroll: \"\"\n        };\n      });\n    }, 500);\n  };\n\n  isShowBackToggle = () => {\n    this.setState(() => {\n      return {\n        show_status: this.state.show_status === 2 ? 1 : 2\n      };\n    });\n  };\n\n\n  render() {\n\n    return (\n        <div>\n            {this.RunModalPhysician()}\n        </div>\n  );\n  }\n  }\n","import React from 'react';\nimport Body from './views/body';\nimport '../../css/animatedBackground.scss';\n\nexport class Caller_SwipeCardAnimation extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                people1:[],\n                isLoading: true,\n                cnt: 0\n            };\n\n\n    }\n\n    async componentDidMount() {\n\n\n        //Calls to endpoint for every doctors' info\n        //then push into people1 array\n        console.log(\"Testing get_all_physician_records POST\");\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": 1})\n        };\n\n\n\n        await fetch(\"http://52.247.220.137:80/physician/all\")\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    console.log(\"I am in fetch.....\")\n                    console.log(result);\n                    let l = result.length;\n                    let peopleArray = [];\n                    for (let i = 0; i < l; i++) {\n                        peopleArray.push({});\n                        peopleArray[i].doctorName = result[i].phy_name;\n                        peopleArray[i].age = Math.floor(Math.random()*30+30);\n                        peopleArray[i].location = result[i].phy_addr;\n                        peopleArray[i].email = result[i].email;\n                        peopleArray[i].rating = \"CONSULT BACKEND ABOUT A FLOAT RATING [0.0, 5.0]\";\n                        peopleArray[i].npi = result[i].npi;\n                        peopleArray[i].specialty = result[i].phy_qual;\n                        peopleArray[i].drId = result[i].phy_id;\n\n                    }\n                    this.loading = true;\n                    this.setState(\n                        {\n                            people1: peopleArray,\n                            isLoading: false\n                        }\n                    )\n                    this.p = peopleArray;\n                    return peopleArray;\n                }\n            )\n\n    }\n\n    FromList = (list, index) => {\n        return list[index];\n    };\n\n    fetchUserData = () => {\n        const user_data = this.randomlyOneOfList(this.state.people1);\n        user_data.avatar = this.state.people1;\n\n\n        return user_data;\n    };\n\n    createDataList = (list = []) => {\n        while(list.length < 1) {\n            list.push(this.fetchUserData());\n        }\n        return list;\n    };\n\n    randomlyOneOfList = (list) => {\n        return list[Math.floor(Math.random() * Math.floor(list.length))];\n    }\n\n\n    render() {\n        return(\n            <div>\n\n                {!this.state.isLoading && (\n                    <Body drInfo = {this.state.people1}  createDataList = {(drList) => this.createDataList(drList)}/>\n                )}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport patient_Me from '../components/images/patient_Me.jpg';\nimport {Image, Button, Container, Col, Row} from 'react-bootstrap';\nimport '../css/slidePanelRowVerticalSpacing.css';\n\nexport class PatientSlidePanel extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state={\n            isPaneOpen: false,\n        }\n        this.data ={};\n        this.data.pat_name= 'Kevin Vo';\n        this.data.pat_age= '98';\n        this.data.pat_bio= 'A delight for the senses.';\n        this.data.pat_sex= 'M';\n        this.data.pat_height= '167.64';\n        this.data.pat_weight= \"86.1826\";\n\n        this.RightPaneHandle = this.RightPaneHandle.bind(this)\n\n    }\n\n    RightPaneHandle()\n    {\n        this.setState(\n            {\n                isPaneOpen: !this.state.isPaneOpen\n            }\n        )\n    }\n\n\n    GetSlidingPanel()\n    {\n        return(\n            <SlidingPane\n                style={{backgroundImage: {patient_Me}}}\n                className={\"panel-heading\"}\n                overlayClassName={\"panel-heading\"}\n                isOpen={this.state.isPaneOpen}\n                from={\"left\"}\n                width={\"320px\"}\n                onRequestClose={\n                    () => {\n                        this.setState({\n                            isPaneOpen: false\n                        })\n                    }\n                }\n\n                title={ <div className={\"TitleText\"} >Patient Information</div> }\n                subtitle={<div>Name: {this.data.pat_name}</div>}\n            >\n\n                <Image src = {patient_Me}\n                       width={\"auto\"}\n                       height={\"270px\"}\n                       thumbnail\n                       className={\"img-border\"}/>\n\n                <Container>\n                    <Row className={\"RowVerticalSpacing\"}>\n                        Sex: {this.data.pat_sex}\n                    </Row>\n                    <Row  className={\"RowVerticalSpacing\"}>\n                        Age: {this.data.pat_age}\n                    </Row>\n                    <Row  className={\"RowVerticalSpacing\"}>\n                        Height: {this.data.pat_height} cm\n                    </Row>\n                    <Row  className={\"RowVerticalSpacing\"}>\n                        Weight: {this.data.pat_weight} kg\n                    </Row>\n                    <Row  className={\"RowVerticalSpacing\"}>\n                        Bio: {this.data.pat_bio}\n                    </Row>\n\n                </Container>\n            </SlidingPane>\n\n\n\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.RightPaneHandle} >Show Patient Info</Button>\n\n                {this.GetSlidingPanel()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {PicCarousel} from '../picCarousel';\nimport {MultiBrowsePic} from '../multiBrowsePic';\n//import {people1} from './data/data';\nimport {Row, Col, Button, Form, Container} from 'react-bootstrap';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport {Caller_SwipeCardAnimation} from '../card_related/caller_SwipeCardAnimation';\nimport {MDBInput} from \"mdbreact\";\nimport {PatientSlidePanel} from \"../patientSidePanel\";\nimport 'mdbreact/dist/css/mdb.css';\nimport 'mdbreact/dist/css/style.css';\n\nexport class Patient_CaseCreation extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                pat_notes: '',  //Details that patients can add to case\n                patientSelectedCategory: '',\n                people1: [],\n                patientRecords: [],\n                is_rec_loading: true,\n                record_id: this.props.userInfo.record_id\n            };\n        this.data = {\n            pat_email: '',  //For identifying who the case belongs to\n            phy_email: '',\n            phy_firstName: '',\n            phy_lastName: '',\n            phy_bio: '',\n            phy_spec: '',\n            phy_hospital: '',\n            pics: '',    //Images of the patient for the case\n            caseTitle: '',\n            userID: '1', //0 -> Doctor User, 1 -> Patient User\n            show: false,\n            prim_case_name: 'Menstrual Cramps',\n            prim_case_description: 'Patient seems to exhibit abnormal menstrual cramps. X-rays shows vitamin D3 and Calcium deficiency' +\n                '. Course of action is to prescribe Oxycodone and oral vitamin supplements.'\n\n        };\n\n        this.drModeID = '0';  //ID for a doctor user\n        this.patModeID = '1'; //ID for a patient user\n\n        this.GetDrInfoForBackend = this.GetDrInfoForBackend.bind(this);\n    }\n\n    componentDidMount() {\n        const requestMethods = {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\n\n                pat_id: this.props.userInfo.pat_id // pat_id\n\n            })\n        }\n        fetch(\"http://52.247.220.137/get_pat_records_lite\", requestMethods)\n            .then((d) => d.json())\n            .then(d => {\n                    console.log(d);\n                    this.setState({\n                        patientRecords: d,\n                        record_id: d[0].record_id,\n                        is_rec_loading: false\n                    })\n                }\n            )\n    }\n\n    pageTitleUserDisplay = () =>\n    {\n        if(this.data.userID === this.patModeID)\n        {\n            return(\n                <Form.Label>\n                    <h2><u>Submit Case for Second Opinion</u></h2>\n                </Form.Label>\n            );\n        }\n        else\n        {\n            return(\n                <Form.Label>\n                    <h1>Submit Case</h1>\n                </Form.Label>\n            );\n        }\n    }\n\n    categoryTitleUserDisplay = () =>\n    {\n        console.log(this.data.userID + \" - pat - \" + this.patModeID);\n\n        if(this.data.userID === this.patModeID)\n        {\n            return <h3 style={{display:\"inline\"}}>Category for Second Opinion:</h3>\n        }\n        else\n        {\n            return <h3 style={{display:\"inline\"}}>Category:</h3>\n        }\n\n    }\n\n    viewOrAddPicMode = () =>\n    {\n\n        if(this.data.userID === this.patModeID)\n        {\n            return (<PicCarousel />)\n        }\n        else\n        {\n            return (<MultiBrowsePic/>)\n        }\n\n    }\n\n\n\n    descriptionTitleUserDisplay = () =>\n    {\n        if(this.userID === this.patModeID) {\n            return (\n                <div>\n                    <label>\n                        Description (Optional):\n                        <br/>\n                        <textarea name=\"pat_notes\" rows=\"5\" cols=\"100\" value={this.state.pat_notes}\n                                  onChange={this.handleInputChange}/>\n                    </label>\n                </div>\n\n            );\n        }\n        else\n        {\n            return(\n                <label>\n                    Description:\n                    <br />\n                    <textarea  name=\"pat_notes\" rows=\"20\" cols=\"100\" value={this.state.pat_notes} onChange={this.handleInputChange}/>\n                </label>\n            );\n        }\n\n    }\n\n    handleSelectDoctor ()\n    {\n        return(<Caller_SwipeCardAnimation GetDrInfoForBackend={(p) => {this.GetDrInfoForBackend(p)} }/>);\n    }\n\n\n\n\n    PatientCaseCreationComponents = () =>\n    {\n        /*\n        let pat_id = this.props.userInfo.pat_id\n         */\n\n        return(\n            <div>\n                <PatientSlidePanel pat_data={this.data}/>\n                <Form style={{textAlign:\"center\"}}>\n                    {this.pageTitleUserDisplay()}\n                    <br />\n\n\n                    <Container style={{width:\"1000px\", margin:\"auto\", border:\"0px\"}}>\n                        <Row>\n                            <Col style={{width:\"0px\", marginLeft:\"200px\", border:\"0px\"}}>\n                                <h3 style={{width:\"250px\", margin:\"0px\", border:\"0px\", textAlign:\"right\"}}>Name for Case:</h3>\n                            </Col>\n                            <Col >\n                                <p style={{width:\"500px\", margin:\"0px\", border:\"0px\", textAlign:\"left\"}}>{this.data.prim_case_description}</p>\n                            </Col>\n                        </Row>\n                    </Container>\n\n                    <br />\n\n\n\n                    {this.viewOrAddPicMode()}\n\n                    <Row>\n                        <Col style={{width: \"1000px\", margin:\"auto\"}}>\n                            <Form.Label style={{width: \"500px\", marginLeft:\"45%\", marginRight:\"1px\"}}>\n\n                                {this.categoryTitleUserDisplay()}\n                                <Form.Control name={\"patientSelectedCategory\"} as={\"select\"} defaultValue={\"January\"}\n                                              value={this.state.value} onChange={this.handleInputChange}>\n                                    <option value=\"Allergy and Immunology\">Allergy and Immunology</option>\n                                    <option value=\"Endovascular Surgical Neuroradiology\">Endovascular Surgical Neuroradiology</option>\n                                    <option value=\"Gastroenterology\">Gastroenterology</option>\n                                    <option value=\"General Surgery\">General Surgery</option>\n                                    <option value=\"Hematology\">Hematology</option>\n                                    <option value=\"Musculoskeletal Radiology\">Musculoskeletal Radiology</option>\n                                    <option value=\"Neurology\">Neurology</option>\n                                    <option value=\"Orthopaedics\">Orthopaedics</option>\n                                    <option value=\"Otolaryngology\">Otolaryngology</option>\n                                    <option value=\"Pathology\">Pathology</option>\n                                    <option value=\"Pediatric\">Pediatric</option>\n                                    <option value=\"Radiation Oncology\">Radiation Oncology</option>\n                                    <option value=\"Reproductive Endocrinology and Infertility\">Reproductive Endocrinology and Infertility</option>\n                                    <option value=\"Spinal Cord Injury Medicine\">Spinal Cord Injury Medicine</option>\n                                    <option value=\"Sports Medicine\">Sports Medicine</option>\n                                    <option value=\"Thoracic Surgery\">Thoracic Surgery</option>\n                                    <option value=\"Vascular and Interventional Radiology\">Vascular and Interventional Radiology</option>\n                                </Form.Control>\n                            </Form.Label>\n                        </Col>\n                        <Col>\n                            {this.categoryTitleUserDisplay()}\n\n                            <Form.Label style={{width: \"500px\", marginLeft:\"45%\", marginRight:\"1px\"}}>\n                                <Form.Control name={\"record_id\"} as={\"select\"} defaultValue={\"1\"}\n                                              onChange={this.handleInputChange}>\n                                    {!this.state.is_rec_loading && this.state.patientRecords.map(item => {\n                                        return(\n                                            <option value={item.record_id}>{item.comment}</option>\n                                        )\n                                    })}\n                                </Form.Control>\n                            </Form.Label>\n                        </Col>\n                        <Col style={{width: \"50px\"}}>\n                            <Caller_SwipeCardAnimation GetDrInfoForBackend = {(p) => {this.GetDrInfoForBackend(p)}}/>\n                        </Col>\n\n                    </Row>\n\n                    <br />\n\n                    <br />\n\n                    {this.descriptionTitleUserDisplay()}\n\n                    <br />\n\n                    <Button name=\"submit\" style={{display:\"inline\"}} onClick={this.handleSubmit}>Submit</Button>\n\n\n                </Form>\n            </div>\n        );\n    }\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            })\n    }\n\n    GetDrInfoForBackend(people1)\n    {\n        this.setState (\n            {\n                people1: people1\n            }\n        )\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let selectedDr = JSON.parse(sessionStorage.getItem('selectedDoctorIndx'));\n        let selectedNPI = 0;\n        console.log(\"SELECTED DOCTOR\");\n        console.log(selectedDr)\n        //selectedNPI = this.state.people1[selectedDr];\n\n        console.log(\"RECORD ID\");\n        console.log(this.state.record_id);\n\n        const requestMethods = {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\n                record_id: this.state.record_id,\n                physician_id: selectedDr.drId,\n                pat_id: this.props.userInfo.pat_id // this.props.userInfo.pat_id\n\n            })\n        }\n        //Res PendingRec is response pending records\n        // needs to be tested still. sever was down 11/7/20.\n        // server should be up by 3pm\n        fetch(\"http://52.247.220.137/record_assessment\", requestMethods)\n            .then(ResPendingRec => ResPendingRec.text())\n            .then(s => {\n                if (s == \"record updated\") {\n                    this.setState({responsestatus: \"success\"})\n                }\n                else {\n                    console.log(\"ERROR\");\n                    this.setState({responsestatus:\"error\"})\n                }\n\n            })\n\n\n\n    }\n\n    render()\n    {\n        console.log(\"from Case Submission modeID = \" + this.props.userInfo.modeID);\n        console.log(\"from Case Submission = \" + this.props.userInfo.userID);\n        return(\n            <div>\n\n                {this.PatientCaseCreationComponents()};\n            </div>\n        );\n    }\n};","import React from 'react';\nimport {PicCarousel} from '../picCarousel';\nimport {MultiBrowsePic} from '../multiBrowsePic';\n//import {people1} from './data/data';\nimport {Row, Col, Button, Form, Container} from 'react-bootstrap';\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport {Caller_SwipeCardAnimation} from '../card_related/caller_SwipeCardAnimation';\nimport {MDBInput} from \"mdbreact\";\nimport {PatientSlidePanel} from \"../patientSidePanel\";\nimport 'mdbreact/dist/css/mdb.css';\nimport 'mdbreact/dist/css/style.css';\n\nexport class Dr_CaseCreation extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                pat_notes: '',  //Details that patients can add to case\n                patientSelectedCategory: '',\n                people1: [],\n                patientRecords: [],\n                is_rec_loading: true,\n                record_id: this.props.userInfo.record_id\n            };\n        this.data = {\n            pics: '',    //Images of the patient for the case\n            userID: '1', //0 -> Doctor User, 1 -> Patient User\n            show: false,\n            prim_case_description: ''\n\n        };\n\n        this.drModeID = '0';  //ID for a doctor user\n        this.patModeID = '1'; //ID for a patient user\n\n        this.GetDrInfoForBackend = this.GetDrInfoForBackend.bind(this);\n    }\n\n    componentDidMount() {\n        const requestMethods = {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\n\n                pat_id: this.props.userInfo.pat_id // pat_id\n\n            })\n        }\n        fetch(\"http://52.247.220.137/get_pat_records_lite\", requestMethods)\n            .then((d) => d.json())\n            .then(d => {\n                    console.log(d);\n                    this.setState({\n                        patientRecords: d,\n                        record_id: d[0].record_id,\n                        is_rec_loading: false\n                    })\n                }\n            )\n    }\n\n    pageTitleUserDisplay = () =>\n    {\n        if(this.data.userID === this.patModeID)\n        {\n            return(\n                <Form.Label>\n                    <h2><u>Submit Case for Second Opinion</u></h2>\n                </Form.Label>\n            );\n        }\n        else\n        {\n            return(\n                <Form.Label>\n                    <h1>Submit Case</h1>\n                </Form.Label>\n            );\n        }\n    }\n\n    categoryTitleUserDisplay = () =>\n    {\n        console.log(this.data.userID + \" - pat - \" + this.patModeID);\n\n        if(this.data.userID === this.patModeID)\n        {\n            return <h3 style={{display:\"inline\"}}>Category for Second Opinion:</h3>\n        }\n        else\n        {\n            return <h3 style={{display:\"inline\"}}>Category:</h3>\n        }\n\n    }\n\n    viewOrAddPicMode = () =>\n    {\n\n        if(this.data.userID === this.patModeID)\n        {\n            return (<PicCarousel />)\n        }\n        else\n        {\n            return (<MultiBrowsePic/>)\n        }\n\n    }\n\n\n\n    descriptionTitleUserDisplay = () =>\n    {\n        if(this.userID === this.patModeID) {\n            return (\n                <div>\n                    <label>\n                        Description (Optional):\n                        <br/>\n                        <textarea name=\"pat_notes\" rows=\"5\" cols=\"100\" value={this.state.pat_notes}\n                                  onChange={this.handleInputChange}/>\n                    </label>\n                </div>\n\n            );\n        }\n        else\n        {\n            return(\n                <label>\n                    Description:\n                    <br />\n                    <textarea  name=\"pat_notes\" rows=\"20\" cols=\"100\" value={this.state.pat_notes} onChange={this.handleInputChange}/>\n                </label>\n            );\n        }\n\n    }\n\n    handleSelectDoctor ()\n    {\n        return(<Caller_SwipeCardAnimation GetDrInfoForBackend={(p) => {this.GetDrInfoForBackend(p)} }/>);\n    }\n\n\n\n\n    drCaseCreationComponents = () =>\n    {\n        /*\n        let pat_id = this.props.userInfo.pat_id\n         */\n\n        return(\n            <div>\n                <PatientSlidePanel pat_data={this.data}/>\n                <Form style={{textAlign:\"center\"}}>\n                    {this.pageTitleUserDisplay()}\n                    <br />\n\n\n                    <Container style={{width:\"1000px\", margin:\"auto\", border:\"0px\"}}>\n                        <Row>\n                            <h4 style={{textAlign:\"left\"}}>Note: </h4>\n                        </Row>\n\n                        <Row style={{paddingLeft:\"20px\"}}>\n                                <h4 style={{textAlign:\"left\"}}>\n                                    An Identifying Number will be generated for this case on the servers once created.\n                                </h4>\n                        </Row>\n\n                    </Container>\n\n                    <br />\n\n\n\n                    {this.viewOrAddPicMode()}\n\n                    <Row>\n                        <Col style={{width: \"1000px\", margin:\"auto\"}}>\n                            <Form.Label style={{width: \"500px\", marginLeft:\"45%\", marginRight:\"1px\"}}>\n\n                                {this.categoryTitleUserDisplay()}\n                                <Form.Control name={\"patientSelectedCategory\"} as={\"select\"} defaultValue={\"January\"}\n                                              value={this.state.value} onChange={this.handleInputChange}>\n                                    <option value=\"Allergy and Immunology\">Allergy and Immunology</option>\n                                    <option value=\"Endovascular Surgical Neuroradiology\">Endovascular Surgical Neuroradiology</option>\n                                    <option value=\"Gastroenterology\">Gastroenterology</option>\n                                    <option value=\"General Surgery\">General Surgery</option>\n                                    <option value=\"Hematology\">Hematology</option>\n                                    <option value=\"Musculoskeletal Radiology\">Musculoskeletal Radiology</option>\n                                    <option value=\"Neurology\">Neurology</option>\n                                    <option value=\"Orthopaedics\">Orthopaedics</option>\n                                    <option value=\"Otolaryngology\">Otolaryngology</option>\n                                    <option value=\"Pathology\">Pathology</option>\n                                    <option value=\"Pediatric\">Pediatric</option>\n                                    <option value=\"Radiation Oncology\">Radiation Oncology</option>\n                                    <option value=\"Reproductive Endocrinology and Infertility\">Reproductive Endocrinology and Infertility</option>\n                                    <option value=\"Spinal Cord Injury Medicine\">Spinal Cord Injury Medicine</option>\n                                    <option value=\"Sports Medicine\">Sports Medicine</option>\n                                    <option value=\"Thoracic Surgery\">Thoracic Surgery</option>\n                                    <option value=\"Vascular and Interventional Radiology\">Vascular and Interventional Radiology</option>\n                                </Form.Control>\n                            </Form.Label>\n                        </Col>\n                        <Col>\n                            {this.categoryTitleUserDisplay()}\n\n                            <Form.Label style={{width: \"500px\", marginLeft:\"45%\", marginRight:\"1px\"}}>\n                                <Form.Control name={\"record_id\"} as={\"select\"} defaultValue={\"1\"}\n                                              onChange={this.handleInputChange}>\n                                    {!this.state.is_rec_loading && this.state.patientRecords.map(item => {\n                                        return(\n                                            <option value={item.record_id}>{item.comment}</option>\n                                        )\n                                    })}\n                                </Form.Control>\n                            </Form.Label>\n                        </Col>\n                        <Col style={{width: \"50px\"}}>\n                            <Caller_SwipeCardAnimation GetDrInfoForBackend = {(p) => {this.GetDrInfoForBackend(p)}}/>\n                        </Col>\n\n                    </Row>\n\n                    <br />\n\n                    <br />\n\n                    {this.descriptionTitleUserDisplay()}\n\n                    <br />\n\n                    <Button name=\"submit\" style={{display:\"inline\"}} onClick={this.handleSubmit}>Submit</Button>\n\n\n                </Form>\n            </div>\n        );\n    }\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            })\n    }\n\n    GetDrInfoForBackend(people1)\n    {\n        this.setState (\n            {\n                people1: people1\n            }\n        )\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let selectedDr = JSON.parse(sessionStorage.getItem('selectedDoctorIndx'));\n        let selectedNPI = 0;\n        console.log(\"SELECTED DOCTOR\");\n        console.log(selectedDr)\n        //selectedNPI = this.state.people1[selectedDr];\n\n        console.log(\"RECORD ID\");\n        console.log(this.state.record_id);\n\n        const requestMethods = {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\n                record_id: this.state.record_id,\n                physician_id: selectedDr.drId,\n                pat_id: this.props.userInfo.pat_id // this.props.userInfo.pat_id\n\n            })\n        }\n        //Res PendingRec is response pending records\n        // needs to be tested still. sever was down 11/7/20.\n        // server should be up by 3pm\n        fetch(\"http://52.247.220.137/record_assessment\", requestMethods)\n            .then(ResPendingRec => ResPendingRec.text())\n            .then(s => {\n                if (s == \"record updated\") {\n                    this.setState({responsestatus: \"success\"})\n                }\n                else {\n                    console.log(\"ERROR\");\n                    this.setState({responsestatus:\"error\"})\n                }\n\n            })\n\n\n\n    }\n\n    render()\n    {\n        console.log(\"from dr Case Submission modeID = \" + this.props.userInfo.modeID);\n        console.log(\"from dr Case Submission = \" + this.props.userInfo.userID);\n        return(\n            <div>\n\n                {this.drCaseCreationComponents()};\n            </div>\n        );\n    }\n};","import React from \"react\";\nimport { MDBMask, MDBView, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport 'mdbreact/dist/css/mdb.css';\n\n\nexport function HoverImgBlkWhite(props){\n\n\n\n\n        return (\n\n            <MDBContainer className=\"mt-4\">\n                <div style={{position: \"relative\",\n                    textAlign: \"center\",\n                    color: \"black\",\n                    fontSize: \"20px\",\n                    fontWeight: \"600\"}}>Click Image below to {props.overlayText}</div>\n                <MDBRow>\n                    <MDBCol>\n\n                        <MDBView hover>\n\n                            <img\n                                src={props.imgSource}\n                                className=\"img-fluid\"\n                                alt=\"\"\n                                style ={{height: props.data.picHeight, width: props.data.picWidth}}\n\n\n                            />\n\n                            <MDBMask className=\"flex-center\" overlay={props.data.overlayColor}>\n                                <p className=\"white-text\">{props.overlayText}</p>\n                            </MDBMask>\n\n\n                        </MDBView>\n                    </MDBCol>\n                </MDBRow>\n\n            </MDBContainer>\n\n        );\n\n\n\n}\n\n\n\n","//props will sent in a bunch of stuff\nimport React from \"react\";\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap-grid.css';\nimport 'react-bootstrap/dist/react-bootstrap';\n\nfunction DropDownMenu(data){\n\n    return(\n        <Form.Control name = {data.name} value={data.selectedBirthElement} onChange={data.handleInputChange} as={\"select\"} defaultValue={\"January\"}>\n\n                {\n                    data.dataArr.map(function(selectedBirthElement){\n                        return <option value={selectedBirthElement}>{selectedBirthElement}</option>\n                    })\n                }\n\n        </Form.Control>\n\n\n\n    )\n}\n\nfunction DropDownMenu_Hosp(data){\n    console.log(data);\n    return(\n        <Form.Control name = {\"hospital\"} onChange={data.handleInputChange} as={\"select\"} defaultValue={\"1\"}>\n\n            {\n                data.dataArr.map(function(item) {\n\n                    return <option value={item.hospital_id}>{item.hospital_name}</option>\n                })\n            }\n\n\n\n        </Form.Control>\n\n\n    )\n\n}\n\nfunction DrAttritube(data)\n{\n    console.log(data);\n    if(data.modeID == 'Doctor') {\n        return (\n            <div>\n                <Form.Label>NPI:</Form.Label>\n                <Form.Control name=\"npi\" placeholder={\"Enter National Provider Identifier\"}/>\n\n\n\n                <Form.Label>Speciality:</Form.Label>\n                <Form.Control name=\"speciality\" placeholder={\"Enter Specialty\"} />\n\n\n\n                <Form.Label>Select Clinic:</Form.Label>\n                <DropDownMenu_Hosp name={\"hospital\"} dataArr = {data.dataArr} />\n\n\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nfunction GetTitle(data)\n{\n    if(data.modeID == 'Doctor')\n    {\n        return(<Form.Label><u className={\"display-4\"}>Physician Registration</u></Form.Label>);\n    }\n    else\n    {\n        return(<Form.Label><u className={\"display-4\"}>Patient Registration</u></Form.Label>);\n    }\n}\n\nfunction ShowRegistrationForm(props)\n{\n    let modeID = props.outerProps.data.userMode;\n    console.log(props);\n\n    return(\n        <div>\n\n            <Form id={\"myForm\"} style={{width:\"500px\", margin:\"auto\"}}>\n                <Form.Label>\n                    <GetTitle modeID = {modeID}/>\n                    <br />\n                </Form.Label>\n                <Form.Group controlId={\"formEmail\"}>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control name=\"email\" value={props.outerProps.data.email} type=\"email\" placeholder={\"Enter email\"}/>\n                </Form.Group>\n\n                <Form.Group controlId={\"formPassword\"}>\n                    <Row>\n                        <Col>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control name=\"password\" value={props.outerProps.data.password} type={\"password\"} placeholder={\"Enter Password\"} />\n                        </Col>\n                        <Col>\n                            <Form.Label>Repeat Password</Form.Label>\n                            <Form.Control name=\"repassword\" value={props.outerProps.data.repassword} type={\"password\"} placeholder={\"Re-Enter Password\"} />\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group controlId={\"formName\"}>\n                    <Form.Label>Name</Form.Label>\n                    <Row>\n                        <Col>\n                            <Form.Control name=\"firstName\" value={props.outerProps.data.firstName} placeholder={\"Enter First name\"}/>\n                        </Col>\n                        <Col>\n                            <Form.Control name=\"lastName\" value={props.outerProps.data.lastName} placeholder={\"Enter Last name\"}/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Label>Birthday</Form.Label>\n                <Row>\n\n                    <Col>\n                        <DropDownMenu name={\"selectedBirthMonth\"} dataArr = {props.outerProps.data.date.month} />\n                    </Col>\n                    <Col>\n                        <DropDownMenu name={\"selectedBirthDay\"} dataArr = {props.outerProps.data.date.day} />\n                    </Col>\n                    <Col>\n                        <DropDownMenu name={\"selectedBirthYear\"} dataArr = {props.outerProps.data.date.year} />\n                    </Col>\n\n                </Row>\n\n\n\n                <DrAttritube modeID={modeID} dataArr = {props.outerProps.hospital}/>\n\n\n                <Form.Label>Bio:</Form.Label>\n                <br />\n                <Form.Control name={\"bio\"} as={\"textarea\"} rows={3} cols={100}/>\n\n                <Row>\n                    <Button type=\"button\" onClick={props.outerProps.handleSubmit}>Register</Button>\n                </Row>\n            </Form>\n        </div>\n    );\n}\n\n\nexport function RegFunctionalComponent(props)\n{\n   return(\n       <div>\n           <ShowRegistrationForm outerProps = {props} />\n       </div>\n   )\n}","import React from 'react';\nimport {Button, Form, Container} from 'react-bootstrap';\nimport '../../css/login.css';\n\n\nexport class Login extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                email: '',\n                password: '',\n                loginInfoFromBackend: []\n\n            };\n\n    }\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n\n    }\n\n    SelectTitle()\n    {\n        if(this.props.data.userMode === 'Doctor')\n        {\n            return(<Form.Label><u className={\"display-4\"}>Physician Login</u></Form.Label>);\n        }\n        else\n        {\n            return(<Form.Label><u className={\"display-4\"}>Patient Login</u></Form.Label>);\n        }\n    }\n\n\n    showLogin = () =>\n    {\n        return(\n            <Container style={{width:\"50%\", margin:\"auto\"}}>\n                <Form className={'loginForm'} onSubmit={this.handleSubmit}>\n                    {this.SelectTitle()}\n                    <br />\n                    <Form.Label>\n                        Email:\n                        <Form.Control as={\"input\"}\n                            name=\"email\"\n                            type=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </Form.Label>\n\n\n\n                    <br />\n                    <Form.Label>\n                        Password:\n                        <Form.Control as={\"input\"}\n                            name=\"password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </Form.Label>\n\n                    <br />\n\n\n                    <Button type=\"button\" onClick={() => this.handleLoginSubmit()}>Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n\n\n    handleLoginSubmit()\n    {\n        let userDataBackend = [];\n        if(this.props.data.userMode === 'Doctor') {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\"username\": this.state.email, \"password\": this.state.password})\n            };\n\n            fetch(\"http://52.247.220.137:80/physician/login\", requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    userDataBackend = {};\n                    userDataBackend.modeID = \"physician\";\n                    userDataBackend.userID = response.phy_id;\n                    userDataBackend.userData = response;\n\n                    this.props.handleUserLoginFromNavBar(userDataBackend);\n        })\n                //.catch(r => r.text()).then(r => console.log(r));\n\n        }\n        else\n        {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\"username\": this.state.email, \"password\": this.state.password})\n            };\n\n            fetch(\"http://52.247.220.137:80/client/login\", requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    userDataBackend = {};\n                    userDataBackend.modeID = \"patient\";\n                    userDataBackend.userID = response.pat_id;\n                    userDataBackend.userData = response;\n\n                    this.props.handleUserLoginFromNavBar(userDataBackend);\n                });\n        }\n\n    }\n\n\n\n    render() {\n\n        return(\n            <div>\n                {this.showLogin()}\n            </div>\n\n\n        );\n    }\n\n}","import React from 'react';\nimport {RegFunctionalComponent} from './registration_funct_comp';\nimport {ButtonGroup, Button} from 'react-bootstrap';\nimport {Login} from './login';\n\nimport '../../App.css';\n\nexport class LoginRegisterDisplay extends React.Component {\n    state = {selectedFile: null}\n\n    constructor(props) {\n        super(props);\n        fetch(\"http://52.247.220.137:80/hospitals\")\n            .then(response => response.json())\n            .then(json => {\n\n                this.state.hospitalNameArr = json\n                this.state.isLoading = false;\n\n\n            });\n        this.state = {\n            isLogin: true,\n            choseReturn: false,\n            isLoading: true,\n            hospitalNameArr: []\n        }\n\n        this.data = {};\n\n        //this.data.hospitalNameArr= [\"Cleveland Clinic\", \"Johns Hopkins Hospital\", \"Mayo Clinic\", \"UCLA Medical Center\"];\n\n        this.data.date= {\n            month: [\"January\", \"February\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\n                \"November\", \"December\"],\n\n            day: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\",\n                \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"],\n\n            year:[]\n        };\n        this.data.userMode = this.props.userMode;\n    }\n\n    setCurrentYear = () =>\n    {\n        let currentDate = new Date();\n        let currentYear = currentDate.getFullYear();\n\n        for(let cntDay = 1900; cntDay <= currentYear; cntDay++)\n        {\n            this.data.date.year.push(cntDay);\n\n\n        }\n    }\n\n    GetNumericalMonth(monthName)\n    {\n        switch(monthName)\n        {\n            case 'January': return 1; break;\n            case 'February': return 2; break;\n            case 'March': return 3; break;\n            case 'April': return 4; break;\n            case 'May': return 5; break;\n            case 'June': return 6; break;\n            case 'July': return 7; break;\n            case 'August': return 8; break;\n            case 'September': return 9; break;\n            case 'October': return 10; break;\n            case 'November': return 11; break;\n            case 'December': return 12; break;\n            default: return 1;\n        }\n    }\n\n    GetAge(data)\n    {\n        const numericalBirthMonth = this.GetNumericalMonth(data.selectedBirthMonth);\n        const convertedBirthdate = new Date(data.selectedBirthYear, numericalBirthMonth, data.selectedBirthDay,\n            0,0,0,0);\n\n        const currentDate = new Date();\n\n        let calculatedAge = currentDate.getTime() - convertedBirthdate.getTime();\n\n        calculatedAge = new Date(calculatedAge);\n\n        calculatedAge = Math.abs(calculatedAge.getUTCFullYear()-1970);\n\n\n        return calculatedAge;\n    }\n\n    handleSubmit = () => {\n        const data = this.iter_over_items();\n\n\n        const calculatedAge = this.GetAge(data);\n\n        if(this.props.userMode == 'Physician' || this.props.userMode == 'Doctor') {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    \"npi\": data.npi, \"username\": data.email, \"phy_name\": data.firstName + \" \" + data.lastName,\n                    \"phy_bio\": data.bio, \"phy_addr\": \"12345\", \"phy_qual\": data.speciality,\n                    \"email\": data.email, \"password\": data.password\n                })\n                /*\n                npi -\n                username\n                name\n                bio\n                address\n                qualifications\n                review count\n                email\n                password\n                */\n\n\n            };\n            console.log(requestOptions);\n\n            fetch(\"http://52.247.220.137:80/physician\", requestOptions)\n                .then(response => console.log(response.text()))\n\n\n\n        }else{\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\"username\": data.email,pat_age: calculatedAge, \"pat_sex\": \"NA\",\n                    \"pat_medical_history\":data.bio, \"pat_name\": data.firstName + \" \" + data.lastName, \"email\": data.email, \"password\": data.password,})\n                /*\n                username\n                pat_age\n                pat_sex\n                pat_medical_history - bio\n                pat_name\n                email\n                password\n                */\n\n\n            };\n\n            fetch(\"http://52.247.220.137:80/client\", requestOptions)\n                .then(response => response.text())\n                .then(response => {\n                        if (response == \"email exists\"){\n                            alert(\"The email already exists\");\n                            //window.location.reload(false);\n                        }\n                    }\n\n                );\n        }\n\n\n\n\n    }\n\n    iter_over_items(){\n        let inputs = document.getElementById(\"myForm\").elements;\n\n        let to_send = {};\n\n        for (var i = 0; i < inputs.length; i++) {\n            let element = inputs[i];\n\n            to_send[element.name] = element.value;\n\n        }\n\n        return to_send;\n    }\n    SelectLoginRegisterHandle = (choice) =>\n    {\n        switch(choice)\n        {\n            case \"login\":{\n                this.setState({\n                    isLogin: true,\n                    choseReturn: false\n                })\n\n            };break;\n            case \"reg\": {\n                this.setState({\n                    isLogin: false,\n                    choseReturn: false\n                })\n\n            };break;\n            case \"switch\": {\n                if(this.data.userMode == \"Doctor\" || this.data.userMode == \"Physician\")\n                {\n                    this.data.userMode = \"Patient\";\n                }\n                else\n                {\n                    this.data.userMode = \"Doctor\";\n                }\n\n                this.setState({\n                    isLogin: this.state.isLogin,\n                    choseReturn: true\n                })\n\n            };break;\n\n        }\n\n        console.log(\"**** isLogin = \" + this.state.isLogin + \", choseReturn = \" + this.state.choseReturn + \", userMode = \" + this.data.userMode)\n    }\n\n\n\n    render() {\n\n        console.log(this.data)\n        this.setCurrentYear();\n        if (this.state.isLoading){\n            console.log(\"im loading....\");\n            return(\n                <div>\n                    <ButtonGroup>\n                        <Button onClick={()=>this.SelectLoginRegisterHandle(\"login\")}>Login</Button>\n                        <Button onClick={()=>this.SelectLoginRegisterHandle(\"reg\")}>Register</Button>\n                        <Button onClick={()=>this.SelectLoginRegisterHandle(\"switch\")}>Switch User Type</Button>\n                    </ButtonGroup>\n\n                    {\n                        !this.state.choseReturn &&\n                        this.state.isLogin &&\n                        <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                    }\n\n                    {\n                        this.state.choseReturn &&\n                        this.state.isLogin &&\n                        <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                    }\n\n                </div>\n            )\n        }\n        return (\n            <div>\n\n                <ButtonGroup>\n                    <Button onClick={()=>this.SelectLoginRegisterHandle(\"login\")}>Login</Button>\n                    <Button onClick={()=>this.SelectLoginRegisterHandle(\"reg\")}>Register</Button>\n                    <Button onClick={()=>this.SelectLoginRegisterHandle(\"switch\")}>Switch User Type</Button>\n                </ButtonGroup>\n\n                {\n                    this.state.choseReturn &&\n                    this.state.isLogin &&\n                    <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                }\n\n                {\n                    this.state.choseReturn &&\n                    !this.state.isLogin &&\n                    <RegFunctionalComponent hospital = {this.state.hospitalNameArr} data={this.data} handleSubmit={(e) => this.handleSubmit(e)}/>\n                }\n\n                {\n\n                    !this.state.choseReturn &&\n                    !this.state.isLogin &&\n                    <RegFunctionalComponent hospital = {this.state.hospitalNameArr} data={this.data} handleSubmit={(e) => this.handleSubmit(e)}/>\n                }\n                {\n                    !this.state.choseReturn &&\n                    this.state.isLogin &&\n                    <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                }\n\n            </div>\n        );\n    }\n};\n\n//                <DrRegFunctionalComponent data={this.data} funct={e => this.handleSubmit(e)}/>\n","import React from 'react';\nimport {Container, Row, Col, Button, Modal} from 'react-bootstrap';\nimport doctor_left from '../../pictures/patient_doctor_select/left_doctor.png';\nimport patient_right from '../../pictures/patient_doctor_select/right_patient.png';\nimport {HoverImgBlkWhite} from \"../hoverImgBlkWhite\";\n\nimport {LoginRegisterDisplay} from \"./loginRegisterDisplay\";\n\n\n\n\nexport class DoctorPatientSelect extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.data = {};\n        this.data.picHeight = '500px';\n        this.data.picWidth  = '550px';\n        this.data.overlayColor = \"black-strong\";\n        this.data.selectedUserMode = \"none\";\n        this.state={\n            showPic:true\n        }\n        this.changeShowPic = null;\n        this.GetShowDoctorPatientPicLoginSelect = this.GetShowDoctorPatientPicLoginSelect.bind(this);\n\n    }\n\n    GetShowDoctorPatientPicLoginSelect = (showIt_bool) =>\n    {\n        this.setState(\n            {\n                showPic: showIt_bool\n            }\n        )\n    }\n\n\n    toggleShowPic(selectedMode)\n    {\n        this.data.selectedUserMode = selectedMode;\n\n\n\n        this.setState(\n            {\n                showPic: !this.state.showPic\n            }\n        )\n    }\n    handleDoctorPic = () =>\n    {\n        \n        this.toggleShowPic('Doctor');\n    }\n\n    handlePatientPic = () =>\n    {\n        this.toggleShowPic('Patient');\n\n    }\n\n    DisplaySelectionPics()\n    {\n        return(\n            <div>\n\n            <Container style={{width: \"800px\"}} >\n\n                <Row>\n                    <Col>\n                        <h3 style={{textAlign:\"center\", color: \"black\"}}><u>Select Which Type of User You Are:</u></h3>\n                    </Col>\n                </Row>\n\n                <Row>\n\n                    <Col>\n                        <div onClick = { () => this.handleDoctorPic()}>\n                             <HoverImgBlkWhite data={this.data} overlayText = \"Sign In / Register as Doctor\"\n                                                  imgSource = {doctor_left}\n                             />\n                        </div>\n\n                    </Col>\n\n                    <Col >\n\n\n                        <div onClick = { () => this.handlePatientPic()}>\n                            <HoverImgBlkWhite data={this.data} overlayText = \"Sign In / Register as Patient\"\n                                              imgSource = {patient_right}\n\n                            />\n\n\n                        </div>\n\n\n                    </Col>\n\n                </Row>\n\n            </Container>\n\n            </div>\n        );\n    }\n\n    SwitchToAccessPage()\n    {\n        if(this.state.showPic)\n        {\n            return(\n                <div>\n                    {this.DisplaySelectionPics()}\n                </div>\n            )\n        }\n        else\n        {\n            console.log(\"Inside doctorPatientSelect.js - props = \" )\n            console.log(this.props)\n            return(\n                <div>\n                    <LoginRegisterDisplay handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar} userMode={this.data.selectedUserMode}/>\n\n                </div>\n            );\n        }\n    }\n\n\n    render()\n    {\n\n        return(\n            <div>\n\n            {this.SwitchToAccessPage()}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport {MDBInput} from 'mdbreact';\nimport {Button, Form, Modal, Container, Row, Col} from 'react-bootstrap';\nimport {MultiBrowsePic} from '../multiBrowsePic';\nimport Cards from 'react-credit-cards';\nimport 'mdbreact/dist/css/mdb.css';\nimport 'mdbreact/dist/css/style.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport 'react-credit-cards/lib/styles.scss';\nimport major_credit_card_pics from './payment_pics/major_credit_cards_pic.png';\n\n\n\n\nexport class Payment_Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShown: false,\n            name_on_card: '',\n            credit_card_num: '',\n            exp_date: '',\n            cv_code: '',\n            focus: ''\n        };\n\n        this.subtotal = 150.00;\n        this.taxRate = 0.08;\n        this.total = this.subtotal + this.subtotal*this.taxRate;\n    }\n    componentDidMount() {\n        //Insert API into here\n\n    }\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            })\n\n        console.log(this.state);\n\n    }\n\n    showModalHandle()\n    {\n        this.setState(\n            {\n                isShown: !this.state.isShown\n            }\n        )\n        console.log(\"aaa \"+ this.state.isShown);\n    }\n\n    handleInputFocus = (e) => {\n        this.setState({ focus: e.target.name });\n    }\n\n    render()\n    {\n        return(\n            <div>\n\n                <Button onClick={()=>{this.showModalHandle()}}>\n                    Payment\n                </Button>\n\n                <Modal show = {this.state.isShown}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        <h4>Enter Payment Info</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col>\n                                <Container style={{width: \"100%\", padding: \"0px\", margin: \"0px\", border:\"1px\", borderColor: \"black\", borderStyle: \"solid\"}}>\n                                <Row>\n                                    <img style={{height: \"auto\", width: \"100-px\", margin:\"auto\"}} src={major_credit_card_pics} />\n                                </Row>\n                                    <Form className={'paymentForm'} onSubmit={this.handleSubmit} style={{width: \"50%\", margin: \"auto\"}}>\n                                        <Container style={{margin: \"auto\", width: \"100%\"}}>\n                                            <Row style={{width: \"100%\", margin: \"auto\"}}>\n                                                <Row>\n                                                    <Col style={{paddingRight: \"0px\", margin:\"auto\", border:\"0px\"}}>\n                                                    </Col>\n                                                    <Cards\n                                                        cvc={this.state.cv_code}\n                                                        expiry={this.state.exp_date}\n                                                        focused={this.state.focus}\n                                                        name={this.state.name_on_card}\n                                                        number={this.state.credit_card_num}\n                                                    />\n                                                        <Col>\n                                                            <MDBInput as={\"input\"}\n                                                                      style={{align:\"right\", width: \"100%\", margin: \"auto\"}}\n                                                                      label={\"Name on Card\"}\n                                                                      icon={\"fas fa-user\"}\n                                                                      name=\"name_on_card\"\n                                                                      onChange={this.handleInputChange}\n                                                                      onFocus={this.handleInputFocus}\n                                                                      required/>\n                                                        </Col>\n                                                </Row>\n\n                                            </Row>\n                                            <Row style={{width: \"50%\", margin: \"auto\"}}>\n\n                                                    <MDBInput as={\"input\"}\n                                                              className=\"far fa-credit-card\"\n                                                              label={\"Card Number\"}\n                                                              name=\"credit_card_num\"\n                                                              icon = \"far fa-credit-card\"\n                                                              onChange={this.handleInputChange}\n                                                              onFocus={this.handleInputFocus}\n                                                              required/>\n                                            </Row>\n                                            <Row>\n                                                <Row style={{width: \"50%\", margin: \"auto\"}}>\n\n                                                    <MDBInput as={\"input\"}\n                                                              label={\"Expiration Date\"}\n                                                              name=\"exp_date\"\n                                                              prepend = \"credit-card\"\n                                                              onChange={this.handleInputChange}\n                                                              onFocus={this.handleInputFocus}\n                                                              required/>\n\n                                                </Row>\n                                                <Row style={{paddingLeft:\"50px\"}}>\n\n                                                    <MDBInput as={\"input\"}\n                                                              label={\"CV Code\"}\n                                                              name=\"cv_code\"\n                                                              prepend = \"credit-card\"\n                                                              onChange={this.handleInputChange}\n                                                              onFocus={this.handleInputFocus}\n                                                              required/>\n\n                                                </Row>\n                                            </Row>\n                                            <Button name=\"submit\" style={{display:\"inline\"}} onClick={this.handleInputChange}>Submit</Button>\n                                        </Container>\n\n\n                                        </Form>\n                                    </Container>\n                                </Col>\n                                <Col>\n                                    <Container style={{padding: \"0px\", margin: \"0px\", border:\"1px\", width:\"500px\", borderColor: \"black\", borderStyle: \"solid\"}}>\n\n\n                                        <h4 style={{paddingLeft: '10px'}}>Description:</h4>\n\n                                        <Row style={{paddingRight:'0px', margin: 'auto', borderRight:'0px'}}>\n                                            <Col>\n                                                <h6 style={{paddingLeft: '30px'}}>Diagnosis Fee</h6>\n                                            </Col>\n                                            <Col>\n                                                ${this.subtotal.toFixed(2)}\n                                            </Col>\n                                            <Col style={{paddingTop: \"400px\"}}>\n                                                <h6>Subtotal: ${this.subtotal.toFixed(2)}</h6>\n                                                <h6>Tax: ${(this.taxRate * this.subtotal).toFixed(2)}</h6>\n                                                <h5>Total: ${this.total.toFixed(2)}</h5>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Col>\n                            </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={()=>{this.showModalHandle()}}>\n                            Cancel Payment\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <MultiBrowsePic />\n\n            </div>\n        )\n    }\n}","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport {ClientCaseManagement} from './case_related/clientCaseManagement';\n\nimport {DrCaseManagement} from \"./case_related/drCaseManagement\";\n\nimport {Contact} from '../components/contact';\n\nimport {DrEdit} from \"./user_related/drEdit\";\nimport '../css/navbar_design.css';\nimport {Homepage} from \"./homepage\";\nimport {Pricing} from './pricingPage'\nimport {Paymenthistory} from './payment/paymenthistory';\n\nimport {Patient_CaseCreation} from './case_related/patient_CaseCreation';\nimport{Dr_CaseCreation} from './case_related/dr_CaseCreation';\nimport {DoctorPatientSelect} from './user_related/doctorPatientSelect'\nimport {Payment_Form} from \"./payment/payment_form\";\n\n\n\nexport default class NavbarClass extends React.Component\n{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modeID: \"\",\n            userID: \"\",\n            userData: \"\"\n        }\n\n        this.handleUserLoginFromNavBar = this.handleUserLoginFromNavBar.bind(this);\n\n    }\n\n\n    NewUserNavBar()\n    {\n\n\n        return(\n            <div>\n                <Router>\n                    <div>\n\n                        <nav className={'navbarDesign'}>\n\n                            <Link to=\"/\">Home</Link>\n\n                            <Link to=\"/contact\">Contact Us</Link>\n\n                            <Link to=\"/pricing\">Pricing</Link>\n\n                            <Link to=\"/loginSelect\">Login</Link>\n\n                            <Link to={\"/payment\"}>Payment</Link>\n\n                        </nav>\n                        <Switch>\n                            <Route exact path={'/'} component={() => <Homepage userInfo = {this.data} handleUserLoginFromNavBar = {this.handleUserLoginFromNavBar}/>}></Route>\n                            <Route exact path={'/loginSelect'} component={() => <DoctorPatientSelect handleUserLoginFromNavBar = {this.handleUserLoginFromNavBar}/>}></Route>\n                            <Route exact path={'/contact'} component={() => <Contact userInfo = {this.data}/>}></Route>\n                            <Route exact path={'/pricing'} component={() => <Pricing/>}></Route>\n                            <Route exact path={'/payment'} component={()=> <Payment_Form/>}></Route>\n                        </Switch>\n                    </div>\n                </Router>\n\n                <br />\n\n            </div>\n        );\n    }\n    PatientNavBar()\n    {\n        console.log(\"ERICS CONSOLE LOG\");\n        console.log(this.state.userData);\n        return(\n            <div>\n                <Router>\n                    <div>\n\n                        <nav className={'navbarDesign'}>\n\n                            <Link to=\"/\">Home</Link>\n\n                            <Link to=\"/contact\">Contact Us</Link>\n\n                            <Link to=\"/edit\">Edit</Link>\n\n                            <Link to=\"/pricing\">Pricing</Link>\n\n                            <Link to={\"/caseCreate\"}>Case Submission</Link>\n\n                            <Link to={\"/clientCaseMgmt\"}>Client Case Management</Link>\n\n                            <Link to=\"/paymenthistory\">Payment History</Link>\n\n\n\n                        </nav>\n                        <Switch>\n                            <Route exact path={'/'} component={() => <Homepage userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path='/contact' component={() => <Contact userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/edit'} component ={() => <DrEdit userMode = {\"patient\"} userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/pricing'} component={() => <Pricing/>}></Route>\n                            <Route exact path={'/clientCaseMgmt'} component={() => <ClientCaseManagement userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/caseCreate'} component={() => <Patient_CaseCreation userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/paymenthistory'} component={() => <Paymenthistory/>}></Route>\n                            <Redirect to={'/'} />\n\n                        </Switch>\n                    </div>\n                </Router>\n                <br />\n\n            </div>\n        );\n\n    }\n\n    DoctorNavBar()\n    {\n        console.log(this);\n        //user personalID and pass as props into all the other pages to display that user's info for tables\n        return(\n            <div>\n                <Router>\n                    <div>\n\n                        <nav className={'navbarDesign'}>\n\n                            <Link to=\"/\">Home</Link>\n\n                            <Link to=\"/contact\">Contact Us</Link>\n\n                            <Link to=\"/edit\">Edit</Link>\n\n                            <Link to={\"/caseCreate\"}>Case Submission</Link>\n\n                            <Link to=\"/pricing\">Pricing</Link>\n\n                            <Link to={\"/doctorCaseMgmt\"}>Doctor Case Management</Link>\n\n\n                        </nav>\n                        <Switch>\n                            <Route exact path={'/'} component={() => <Homepage userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path='/contact' component={() => <Contact userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/edit'} component={() => <DrEdit userMode = {\"doctor\"} userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/pricing'} component={Pricing}></Route>\n                            <Route exact path={'/caseCreate'} component={() => <Dr_CaseCreation userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/doctorCaseMgmt'} component={() => <DrCaseManagement modeID = {this.state.modeID} userInfo = {this.state.userData}/>}></Route>\n                            <Redirect to={'/'} />\n\n                        </Switch>\n                    </div>\n                </Router>\n                <br />\n\n            </div>\n        );\n    }\n\n    NavbarModes()\n    {\n\n        if(this.state.modeID === 'patient')\n        {\n\n            return( this.PatientNavBar() )\n        }\n        else if(this.state.modeID === 'physician')\n        {\n\n            return(this.DoctorNavBar())\n        }\n        else    //If not logged in\n        {\n\n\n            return(this.NewUserNavBar())\n\n        }\n\n    }\n    handleUserLoginFromNavBar = (props) =>\n    {\n\n        this.setState({\n            modeID: props.modeID,\n            userID: props.userID,\n            userData: props.userData\n        })\n\n       sessionStorage.setItem('userInfoFromSessionStorage', props)\n    }\n\n\n    render() {\n\n        return(\n          <div>\n              {this.NavbarModes()}\n              <br />\n\n          </div>\n        );\n    }\n}","import React from 'react';\n\nimport NavbarClass from './components/navbar_custom';\n\n\nimport './css/animatedBackground.scss'\nfunction App() {\n\n  return (\n        <div className=\"App\" >\n\n            <NavbarClass />\n\n        </div>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}