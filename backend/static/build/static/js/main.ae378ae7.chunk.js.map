{"version":3,"sources":["components/clientHistoryTable.js","components/clientOnGoingTable.js","components/clientCaseManagement.js","components/drRegister.js","components/drRequestTable.js","components/clientRegister.js","components/drOnGoingTable.js","components/drHistoryTable.js","components/clientCaseCreation.js","components/drCaseManagement.js","components/contact.js","components/drOverlay.js","components/login.js","components/drEdit.js","App.js","serviceWorker.js","index.js"],"names":["ClientHistoryTable","React","Component","props","state","cases","id","caseTitle","doctor","category","createDate","completedDate","this","map","casestudy","index","key","style","display","renderTableData","ClientOnGoingTable","status","DrRegister","selectedFile","setCurrentYear","currentYear","Date","getFullYear","cntDay","date","year","push","handleInputChange","event","setState","target","name","value","fileSelectedHandler","files","fileUploadHandler","handleSubmit","a","data","alert","email","password","repassword","firstName","lastName","npi","speciality","selectedHospitalName","selectedBirthMonth","selectedBirthDay","selectedBirthYear","picture","bio","address","city","us_state","zip","preventDefault","postId","hospitalNameArr","month","day","onSubmit","type","onChange","required","selectedBM","selectedBirthD","selectedBirthY","hospitalName","className","onClick","rows","cols","DrRequestTable","action","DrOnGoingTable","case_status","acceptedOn","docCancel","DrHistoryTable","requestOptions","method","body","JSON","stringify","patient","fetch","then","response","json","ClientCaseCreation","pageTitleUserDisplay","userID","patModeID","categoryTitleUserDisplay","console","log","descriptionTitleUserDisplay","pat_notes","drCaseCreationComponents","textAlign","width","pat_email","phy_email","caseCategory","phy_firstName","phy_lastName","phy_bio","phy_spec","phy_hospital","pics","drModeID","Contact","physician_email","encType","Login","showLogin","show","Button","handleModal","Modal","Header","Body","Footer","DrEdit","setDefaultHospital","defaultValue","headers","resp","text","toConsoles","oldBio","copiedText","label","currentHospital","placeholder","oldEmail","oldFirstName","oldLastName","oldSpeciality","ref","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae378ae7.chunk.js","sourcesContent":["import React from 'react';\nimport '../css/clientCaseManagementPage.css'\n\nclass History_printTableHead extends React.Component{\n    render()\n    {\n        if ((this.props.index % 5) === 0) {\n\n            return (\n                <div>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Doctor</th>\n                        <th>Category</th>\n                        <th>Created On</th>\n                        <th>Completed On</th>\n                    </tr>\n                    </thead>\n                </div>\n            );\n        } else {\n            return (<div>\n                <tr>\n                    <script>{this.props.index}</script>\n                </tr>\n            </div>);\n        }\n    }\n};\n\nexport class ClientHistoryTable extends React.Component\n{\n    constructor(props) {\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n        this.state = { //state is by default an object\n            cases: [\n                { id: 1, caseTitle: 'Irregular Heart Beat', doctor: 'Maria Anders', category: 'Cardiology', createDate: '05/17/20', completedDate: '05/27/20'},\n                { id: 2, caseTitle: 'Milk upsets stomach', doctor: 'Christina Berglund.', category: 'Allgery and Immunology', createDate: '08/27/20', completedDate: '09/21/20'},\n                { id: 3, caseTitle: 'Morning depressions', doctor: 'Francisco Chang', category: 'Mental', createDate: '06/27/20', completedDate: '06/27/20'},\n                { id: 4, caseTitle: 'path_kev11741_00', doctor: 'Maria Anders', category: 'Pathology', createDate: '07/29/20', completedDate: '07/30/20'}\n            ]\n        }\n\n    }\n\n\n    renderTableData() {\n        return this.state.cases.map((casestudy, index) => {\n            const { id, caseTitle, doctor, category, createDate, completedDate } = casestudy //destructuring\n            return (\n                <tr key={id}>\n                    <td>{id}</td>\n                    <td>{caseTitle}</td>\n                    <td>{doctor}</td>\n                    <td>{category}</td>\n                    <td>{createDate}</td>\n                    <td>{completedDate}</td>\n\n                </tr>\n\n\n            )\n        })\n    }\n\n    render()\n    {\n\n        return(\n            <div>\n                <h1 id='title'><u>Completed Cases:</u></h1>\n                <table>\n                    <thead style={{display: 'table-header-group'}}>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Doctor</th>\n                        <th>Category</th>\n                        <th>Created On</th>\n                        <th>Completed On</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport '../css/clientCaseManagementPage.css'\n\nexport class ClientOnGoingTable extends React.Component\n{\n    constructor(props) {\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n        this.state = { //state is by default an object\n            cases: [\n                { id: 1, caseTitle: 'Chest pain and arm hurts', doctor: 'Maria Anders', category: 'Cardiology', createDate: '08/17/20', status: 'Pending'},\n                { id: 2, caseTitle: 'runny nose and itchy throat', doctor: 'Christina Berglund.', category: 'Allgery and Immunology', createDate: '08/27/20', status: 'Diagnosing'},\n                { id: 3, caseTitle: 'cried after watching Encino Man', doctor: 'Francisco Chang', category: 'Mental', createDate: '08/27/20', status: 'Pending'},\n                { id: 4, caseTitle: 'path_kev11741_01', doctor: 'Maria Anders', category: 'Pathology', createDate: '08/29/20', status: 'Diagnosing'}\n            ]\n        }\n\n    }\n\n\n    renderTableData() {\n        return this.state.cases.map((casestudy, index) => {\n            const { id, caseTitle, doctor, category, createDate, status } = casestudy //destructuring\n            return (\n                        <tr key={id}>\n                            <td>{id}</td>\n                            <td>{caseTitle}</td>\n                            <td>{doctor}</td>\n                            <td>{category}</td>\n                            <td>{createDate}</td>\n                            <td>{status}</td>\n                            <td><u>Cancel</u></td>\n                       </tr>\n\n\n            )\n        })\n    }\n\n    render()\n    {\n\n        return(\n            <div>\n                <h1 id='title'><u>Ongoing Cases:</u></h1>\n                <table>\n                    <thead style={{display: 'table-header-group'}}>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Doctor</th>\n                        <th>Category</th>\n                        <th>Created On</th>\n                        <th>Status</th>\n                        <th>Request Refund</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\n\nimport {ClientHistoryTable} from './clientHistoryTable';\nimport {ClientOnGoingTable} from './clientOnGoingTable';\n\nexport class ClientCaseManagement extends React.Component\n{\n  render() {\n      return(\n          <div>\n              <h2 style={{textAlign: 'center'}}><u>Case Management</u></h2>\n              <ClientOnGoingTable />\n              <ClientHistoryTable />\n          </div>\n      );\n  }\n};","import React from 'react';\n\n\nimport '../App.css';\n\nclass DrRegister extends React.Component {\n    state = {selectedFile: null}\n\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                postId: null,\n                email: '',\n                password: '',\n                repassword: '',\n                firstName: '',\n                lastName: '',\n                npi: '',\n                picture: '',\n                speciality: '',\n                bio: '',\n                hospitalNameArr: [\"Cleveland Clinic\", \"Johns Hopkins Hospital\", \"Mayo Clinic\", \"UCLA Medical Center\"],\n                selectedHospitalName: '',\n                selectedBirthMonth: '',\n                selectedBirthDay: '',\n                selectedBirthYear: '',\n                date: {\n                    month: [\"January\", \"February\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\n                        \"November\", \"December\"],\n\n                    day: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\",\n                        \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"],\n\n                    year:[]\n                },\n            };\n\n\n\n    }\n\n    setCurrentYear = () =>\n    {\n        let currentDate = new Date();\n        let currentYear = currentDate.getFullYear();\n\n        for(let cntDay = 1900; cntDay <= currentYear; cntDay++)\n        {\n            this.state.date.year.push(cntDay);\n        }\n    }\n\n    handleInputChange = (event) => {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n    }\n\n    //imageupload\n\n    fileSelectedHandler = (event) => {\n        this.setState({\n            selectedFile: event.target.files[0]\n        })\n    }\n\n    fileUploadHandler = (event) => {\n        /*\n        event.preventDefault();\n        const fd = new FormData();\n        fd.append('drProfilePic', this.state.selectedFile, this.state.selectedFile.name);\n        axios.post('http://52.247.220.137/manage_cases?a=1', fd,\n            {\n                onUploadProgress: progressEvent => {\n                    console.log('Upload Progress: ' + Math.round(progressEvent.loaded/ progressEvent.total*100) + '%')\n                }\n            })\n            .then(response => { console.log(response) });\n\n        */\n    }\n\n\n    handleSubmit = async (event) => {\n        this.fileUploadHandler(event);\n        const data = this.state;\n        /*\n        const data = {'name': this.state.firstName + this.state.lastName, 'email': this.state.email,\n            'password': this.state.password};\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ data })\n        };\n\n        let resp = await fetch('http://52.247.220.137:80/adduser', requestOptions);\n\n        //Getting the text of the response\n        let toConsoles = await resp.text();\n\n        console.log(toConsoles);\n    */\n        /*\n            axios.post('http://52.247.220.137:80/adduser',data)\n                .then(resp => console.log(resp));\n        */\n        /*\n\n        data.name = \"123\";\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ data })\n        };\n        fetch('http://52.247.220.137:80/adduser', requestOptions)\n            .then(response => JSON.parse(response))\n            .then(response => console.log(response));\n*/\n\n        alert(`Test Variables\n               --------------\n                  Email: ${this.state.email} \n               Password: ${this.state.password}\n             Repassword: ${this.state.repassword}\n              FirstName: ${this.state.firstName}\n               LastName: ${this.state.lastName}\n                    NPI: ${this.state.npi}\n             Speciality: ${this.state.speciality}\n                selectedHospitalName: ${this.state.selectedHospitalName}\n                   selectedBirthMonth: ${this.state.selectedBirthMonth}\n               selectedBirthDay: ${this.state.selectedBirthDay}\n                    selectedBirthYear: ${this.state.selectedBirthYear}\n                Picture: ${this.state.picture}\n                    Bio: ${this.state.bio}\n                    \n                    \n                    xxxxxxxxxxxxxxxxxxxxxxxx\n                    \n                    \n                  Email: ${data.email} \n               Password: ${data.password}\n             Repassword: ${data.repassword}\n              FirstName: ${data.firstName}\n               LastName: ${data.lastName}\n                    NPI: ${data.npi}\n             Speciality: ${data.speciality}\n                Address: ${data.address}\n                   City: ${data.city}\n               US_State: ${data.us_state}\n                    Zip: ${data.zip}\n                Picture: ${data.picture}\n                    Bio: ${data.bio}`\n        );\n\n\n        event.preventDefault();\n\n    }\n\n\n\n\n    render() {\n        this.setCurrentYear();\n        //fetch('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY').then( resp => resp.json).then(result => console.log(result));\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        <u>Registration for Physicians</u>\n                        <br />\n                    </label>\n                    <br />\n                    <label>\n                        Email:\n                        <input\n                            name=\"email\"\n                            type=\"text\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Password:\n                        <input\n                            name=\"password\"\n                            type=\"text\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Repeat Password:\n                        <input\n                            name=\"repassword\"\n                            type=\"text\"\n                            value={this.state.repassword}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n                    <label>\n                        First Name:\n                        <input\n                            name=\"firstName\"\n                            type=\"text\"\n                            value={this.state.firstName}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Last Name:\n                        <input\n                            name=\"lastName\"\n                            type=\"text\"\n                            value={this.state.lastName}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n                    <label>\n                        Birthday:\n                            <select name = \"selectedBirthMonth\" value={this.state.value} onChange={this.handleInputChange}>\n                                {this.state.date.month.map(function(selectedBM){\n                                    return <option value={selectedBM}>{selectedBM}</option>\n                                })}\n\n                            </select>\n\n                        <select name = \"selectedBirthDay\" value={this.state.value} onChange={this.handleInputChange}>\n                            {this.state.date.day.map(function(selectedBirthD){\n                                return <option value={selectedBirthD}>{selectedBirthD}</option>\n                            })}\n                        </select>\n\n                        <select name = \"selectedBirthYear\" value={this.state.value} onChange={this.handleInputChange}>\n                            {this.state.date.year.map(function(selectedBirthY){\n                                return <option value={selectedBirthY}>{selectedBirthY}</option>\n                            })}\n                        </select>\n\n\n\n                    </label>\n\n                    <br />\n\n                    <label>\n                        NPI:\n                        <input\n                            name=\"npi\"\n                            type=\"text\"\n                            value={this.state.npi}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Speciality:\n                        <input\n                            name=\"speciality\"\n                            type=\"text\"\n                            value={this.state.speciality}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </label>\n\n                    <br />\n\n\n                    <label>\n                        Select Clinic:\n\n                        <br />\n\n                        <select name = \"selectedHospitalName\" value={this.state.value} onChange={this.handleInputChange}>\n                            {this.state.hospitalNameArr.map(function(hospitalName){\n                                return <option value={hospitalName}>{hospitalName}</option>\n                            })}\n\n\n                        </select>\n\n                    </label>\n\n\n\n                    <br />\n                    <label>\n                        Upload Profile Picture:\n                        <br />\n                        <div className={\"UploadImg\"}>\n                            <input type={\"file\"} onChange={this.fileSelectedHandler}/>\n                            <button onClick={this.fileUploadHandler}>Upload</button>\n                        </div>\n                    </label>\n\n                    <br />\n                    <label>\n                        Bio:\n                        <br />\n                        <textarea name=\"bio\" rows=\"20\" cols=\"100\" value={this.state.bio} onChange={this.handleInputChange}></textarea>\n                    </label>\n                    <br />\n                    <br />\n                    <button type=\"submit\" value={this.state.value}>Register</button>\n                </form>\n            </div>\n        );\n    }\n};\n\nexport default DrRegister;","import React from 'react';\nimport '../css/clientCaseManagementPage.css'\n\nexport class DrRequestTable extends React.Component\n{\n    constructor(props) {\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n        this.state = { //state is by default an object\n            cases: [\n                { id: 1, caseTitle: 'Chest pain and arm hurts',  category: 'Cardiology', createDate: '08/17/20', action: 'Accept / Decline'},\n                { id: 2, caseTitle: 'runny nose and itchy throat',  category: 'Allergy and Immunology', createDate: '08/27/20', action: 'Accept / Decline'},\n                { id: 3, caseTitle: 'cried after watching Encino Man',  category: 'Mental', createDate: '08/27/20', action: 'Accept / Decline'},\n                { id: 4, caseTitle: 'path_kev11741_01', category: 'Pathology', createDate: '08/29/20', action: 'Accept / Decline'}\n            ]\n        }\n\n    }\n\n\n    renderTableData() {\n        return this.state.cases.map((casestudy, index) => {\n            const { id, caseTitle, category, createDate, action } = casestudy //destructuring\n            return (\n                <tr key={id}>\n                    <td>{id}</td>\n                    <td>{caseTitle}</td>\n                    <td>{category}</td>\n                    <td>{createDate}</td>\n                    <td><u>{action}</u></td>\n                </tr>\n\n\n            )\n        })\n    }\n\n    render()\n    {\n\n        return(\n            <div>\n                <h1 id='title'><u>Requests:</u></h1>\n                <table>\n                    <thead style={{display: 'table-header-group'}}>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Category</th>\n                        <th>Created On</th>\n                        <th>Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n\nclass ClientRegister extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                email: '',\n                password: '',\n                repassword: '',\n                firstName: '',\n                lastName: '',\n                picture: '',\n                bio: ''\n            };\n\n\n    }\n\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n    }\n\n\n    handleSubmit = (event) =>\n    {\n\n        const data = this.state;\n        alert(`Test Variables\n               --------------\n                  Email: ${this.state.email} \n               Password: ${this.state.password}\n             Repassword: ${this.state.repassword}\n              FirstName: ${this.state.firstName}\n               LastName: ${this.state.lastName}\n                Picture: ${this.state.picture}\n                    Bio: ${this.state.bio}\n                    \n                    \n                    xxxxxxxxxxxxxxxxxxxxxxxx\n                    \n                    \n                  Email: ${data.email} \n               Password: ${data.password}\n             Repassword: ${data.repassword}\n              FirstName: ${data.firstName}\n               LastName: ${data.lastName}\n                Picture: ${data.picture}\n                    Bio: ${data.bio}`\n        );\n\n\n        event.preventDefault();\n\n    }\n    render() {\n        //fetch('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY').then( resp => resp.json).then(result => console.log(result));\n        return (\n            <form>\n                <label>\n                    <u>Registration for Physicians</u>\n                    <br />\n                </label>\n                <br />\n                <label>\n                    Email:\n                    <input\n                        name=\"email\"\n                        type=\"text\"\n                        value={this.state.email}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n\n\n                <br />\n                <label>\n                    Password:\n                    <input\n                        name=\"password\"\n                        type=\"text\"\n                        value={this.state.password}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n                <br />\n                <label>\n                    Repeat Password:\n                    <input\n                        name=\"repassword\"\n                        type=\"text\"\n                        value={this.state.repassword}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n                <br />\n                <label>\n                    First Name:\n                    <input\n                        name=\"firstName\"\n                        type=\"text\"\n                        value={this.state.firstName}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n                <br />\n\n                <label>\n                    Last Name:\n                    <input\n                        name=\"lastName\"\n                        type=\"text\"\n                        value={this.state.lastName}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n\n                <br />\n                <label>\n                    Upload Profile Picture:\n                    <br />\n                    <input type=\"file\" value={this.state.picture} onChange={this.handlePictureChange}/>\n                </label>\n\n                <br />\n                <label>\n                    Bio:\n                    <br />\n                    <textarea  name=\"bio\" rows=\"20\" cols=\"100\" value={this.state.bio} onChange={this.handleInputChange}/>\n                </label>\n                <br />\n                <br />\n                <button type=\"button\" onClick = {this.handleSubmit}>Register</button>\n            </form>\n        );\n    }\n};\n\nexport default ClientRegister;","import React from 'react';\nimport '../css/clientCaseManagementPage.css'\n\n\nexport class DrOnGoingTable extends React.Component\n{\n\n\n    constructor(props) {\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n        this.state = { //state is by default an object\n            //ID | Case Title | Status | Category | Created On | Accepted On\n            cases: [\n                { id: 1, caseTitle: 'Irregular Heart Beat', case_status: 'Patient Canceled', category: 'Cardiology', createDate: '05/17/20', acceptedOn: '05/20/20', docCancel: 'Cancel'},\n                { id: 2, caseTitle: 'Milk upsets stomach', case_status: 'Completed', category: 'Allergy and Immunology', createDate: '08/27/20', acceptedOn: '08/27/20', docCancel: 'Cancel'},\n                { id: 3, caseTitle: 'Morning depressions', case_status: 'Physician Canceled', category: 'Mental', createDate: '06/27/20', acceptedOn: '06/30/20', docCancel: 'Cancel'},\n                { id: 4, caseTitle: 'path_kev11741_00', case_status: 'Completed', category: 'Pathology', createDate: '07/29/20', acceptedOn: '08/07/20', docCancel: 'Cancel'}\n            ]\n        }\n\n    }\n\n\n    renderTableData() {\n        return this.state.cases.map((casestudy, index) => {\n            const { id, caseTitle, case_status, category, createDate, acceptedOn, docCancel } = casestudy //destructuring\n            return (\n                <tr key={id}>\n                    <td>{id}</td>\n                    <td>{caseTitle}</td>\n                    <td>{case_status}</td>\n                    <td>{category}</td>\n                    <td>{createDate}</td>\n                    <td>{acceptedOn}</td>\n                    <td><u>{docCancel}</u></td>\n                </tr>\n\n\n            )\n        })\n    }\n\n    render()\n    {\n\n        return(\n            <div>\n                <h1 id='title'><u>Ongoing Cases:</u></h1>\n                <table>\n                    <thead style={{display: 'table-header-group'}}>\n                    <tr>\n                        <th>ID</th>\n                        <th>Case Title</th>\n                        <th>Status</th>\n                        <th>Category</th>\n                        <th>Created On</th>\n                        <th>Accepted On</th>\n                        <th>Cancel Option</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport '../css/clientCaseManagementPage.css'\n\nexport class DrHistoryTable extends React.Component\n{\n\n\n    constructor(props) {\n        super(props) //since we are extending class Table so we have to use super in order to override Component class constructor\n\n\n        this.state = {\n            postId: null,\n            //state is by default an object\n            //caseTitle | Status | Doctor | Category | Created On | Diagnosed On\n            cases: [\n                { id: 1, caseTitle: 'Irregular Heart Beat', case_status: 'Patient Canceled', category: 'Cardiology', createDate: '05/17/20', completedDate: '05/27/20'},\n                { id: 2, caseTitle: 'Milk upsets stomach', case_status: 'Completed', category: 'Allergy and Immunology', createDate: '08/27/20', completedDate: '09/21/20'},\n                { id: 3, caseTitle: 'Morning depressions', case_status: 'Physician Canceled', category: 'Mental', createDate: '06/27/20', completedDate: '06/27/20'},\n                { id: 4, caseTitle: 'path_kev11741_00', case_status: 'Completed', category: 'Pathology', createDate: '07/29/20', completedDate: '07/30/20'}\n            ]\n        };\n    }\n    componentDidMount() {\n        //POST request with a JSON body with fetch function\n        //POST b/c medical database\n        const requestOptions =\n        {\n                method: 'POST',\n                body: JSON.stringify({id: 'What?'}, {caseTitle: 'What?'}, {patient: 'What?'}, {case_status: 'What?'},\n                    {category: 'What?'}, {createDate: 'What?'}, {completedDate: 'What?'})\n        };\n\n        fetch(`ERIC'S IP_ADDRESS`, requestOptions)\n            .then(response => response.json())\n            .then(data => this.setState({ postId: data.id}))\n    }\n\n\n\n\n\n    renderTableData() {\n        return this.state.cases.map((casestudy, index) => {\n            const { id, caseTitle, case_status, category, createDate, completedDate } = casestudy //destructuring\n            return (\n                <tr key={id}>\n                    <td>{id}</td>\n                    <td>{caseTitle}</td>\n                    <td>{case_status}</td>\n                    <td>{category}</td>\n                    <td>{createDate}</td>\n                    <td>{completedDate}</td>\n\n                </tr>\n\n\n            )\n        })\n    }\n\n    render()\n    {\n\n        return(\n            <div>\n                <h1 id='title'><u>Completed Cases:</u></h1>\n                <table>\n                    <thead style={{display: 'table-header-group'}}>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Status</th>\n                        <th>Category</th>\n                        <th>Created On</th>\n                        <th>Completed On</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n//\nexport class ClientCaseCreation extends React.Component\n{\n    constructor(props) {\n        super(props);\n        /*\n        this.data = fetch('http://52.247.220.137/manage_cases?a=1').then( resp => resp.json)\n            .then(result => console.log(result));\n        */\n        this.state = {\n            pat_email: '',  //For identifying who the case belongs to\n            pat_notes: '',  //Details that patients can add to case\n            phy_email: '',\n            phy_firstName: '',\n            phy_lastName: '',\n            phy_bio: '',\n            phy_spec: '',\n            phy_hospital: '',\n            pics: '',    //Images of the patient for the case\n            caseTitle: '',\n            caseCategory: '',\n            userID: '1', //0 -> Doctor User, 1 -> Patient User\n        };\n\n        this.drModeID = '0';  //ID for a doctor user\n        this.patModeID = '1'; //ID for a patient user\n    }\n\n    pageTitleUserDisplay = () =>\n    {\n        if(this.state.userID === this.patModeID)\n        {\n            return(\n                <label>\n                    <h1>Submit Case for Second Opinion</h1>\n                </label>\n            );\n        }\n        else\n        {\n            return(\n                <label>\n                    <h1>Submit Case</h1>\n                </label>\n            );\n        }\n    }\n\n    categoryTitleUserDisplay = () =>\n    {\n        console.log(this.state.userID + \" - pat - \" + this.patModeID);\n\n        if(this.state.userID === this.patModeID)\n        {\n            return <h3 style={{display:\"inline\"}}>Category for Second Opinion:</h3>\n        }\n        else\n        {\n            return <h3 style={{display:\"inline\"}}>Category:</h3>\n        }\n\n    }\n\n    descriptionTitleUserDisplay = () =>\n    {\n        if(this.userID === this.patModeID) {\n            return (\n                <div>\n                    <label>\n                        Description (Optional):\n                        <br/>\n                        <textarea name=\"pat_notes\" rows=\"20\" cols=\"100\" value={this.state.pat_notes}\n                                  onChange={this.handleInputChange}/>\n                    </label>\n                </div>\n\n            );\n        }\n        else\n        {\n            return(\n                <label>\n                    Description:\n                    <br />\n                    <textarea  name=\"pat_notes\" rows=\"20\" cols=\"100\" value={this.state.pat_notes} onChange={this.handleInputChange}/>\n                </label>\n            );\n        }\n\n    }\n\n    drCaseCreationComponents = (event) =>\n    {\n        return(\n            <div>\n\n                <form style={{textAlign:\"center\"}}>\n                    {this.pageTitleUserDisplay()}\n                        <br />\n                    <label>\n                        <h3 style={{display:\"inline\"}}>Name for Case:</h3>\n                        <input type={\"text\"} name=\"caseTitle\" style={{display:\"inline\", width:\"60%\"}}\n                               onClick={this.handleInputChange} />\n                    </label>\n\n                    <br />\n\n                    <label>\n\n                        {this.categoryTitleUserDisplay()}\n\n                        <select name=\"caseCategory\" value={this.state.value} onChange={this.handleInputChange}>\n                            <option value=\"Allergy and Immunology\">Allergy and Immunology</option>\n                            <option value=\"Endovascular Surgical Neuroradiology\">Endovascular Surgical Neuroradiology</option>\n                            <option value=\"Gastroenterology\">Gastroenterology</option>\n                            <option value=\"General Surgery\">General Surgery</option>\n                            <option value=\"Hematology\">Hematology</option>\n                            <option value=\"Musculoskeletal Radiology\">Musculoskeletal Radiology</option>\n                            <option value=\"Neurology\">Neurology</option>\n                            <option value=\"Orthopaedics\">Orthopaedics</option>\n                            <option value=\"Otolaryngology\">Otolaryngology</option>\n                            <option value=\"Pathology\">Pathology</option>\n                            <option value=\"Pediatric\">Pediatric</option>\n                            <option value=\"Radiation Oncology\">Radiation Oncology</option>\n                            <option value=\"Reproductive Endocrinology and Infertility\">Reproductive Endocrinology and Infertility</option>\n                            <option value=\"Spinal Cord Injury Medicine\">Spinal Cord Injury Medicine</option>\n                            <option value=\"Sports Medicine\">Sports Medicine</option>\n                            <option value=\"Thoracic Surgery\">Thoracic Surgery</option>\n                            <option value=\"Vascular and Interventional Radiology\">Vascular and Interventional Radiology</option>\n                        </select>\n                    </label>\n\n                    <br />\n\n                    <br />\n\n                    {this.descriptionTitleUserDisplay()}\n\n                    <br />\n\n                    <button name=\"submit\" style={{display:\"inline\"}} onClick={this.handleSubmit}>Submit</button>\n\n\n                </form>\n            </div>\n        );\n    }\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            })\n    }\n\n    handleSubmit = (event) =>\n    {\n        event.preventDefault();\n\n        //Have an overlay pop up to select physician\n\n        alert(`Test Variables\n               --------------\n                 Email: ${this.state.pat_email} \n             pat_notes: ${this.state.pat_notes}\n             phy_email: ${this.state.phy_email}\n             caseTitle: ${this.state.caseTitle}\n          caseCategory: ${this.state.caseCategory}\n            `\n        );\n    }\n\n    render()\n    {\n        return(\n            <div>\n\n                {this.drCaseCreationComponents()}\n            </div>\n        );\n    }\n};","import React from 'react';\n\nimport {DrRequestTable} from './drRequestTable';\nimport {DrOnGoingTable} from './drOnGoingTable';\nimport {DrHistoryTable} from './drHistoryTable';\n\nexport class DrCaseManagement extends React.Component\n{\n  render() {\n      return(\n          <div>\n              <h2 style={{textAlign: 'center'}}><u>Case Management</u></h2>\n              <DrOnGoingTable />\n              <DrRequestTable />\n              <DrHistoryTable />\n          </div>\n      );\n  }\n};","import React from 'react';\n\nexport class Contact extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state ={\n            physician_email: 'foolycooly288622@yahoo.com'\n        };\n    }\n\n\n    render() {\n\n\n        return(\n            <div>\n\n                <h1 style={{textAlign: 'center'}}>Contact Me</h1>\n\n                    <table>\n                        <tr>\n                            <td>\n                                <div className = {\"container\"} >\n                                    <form action = { `mailto:${this.state.physician_email}`} method={ \"post\"}\n                                                  encType={ \"text/plain\" } className={ \"form-control\" }>\n                                        <tr>\n                                            <td>\n                                                <label>Name: </label>\n                                                <input type={ \"text\" } name={ \"From \"} className={ \"form-control\"} />\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n                                                <label>Email: </label>\n                                                <input type={  \"email\" } name={  \"Recipient's Email \" }\n                                                               className={  \"form-control\" } />\n                                            </td>\n                                        </tr>\n\n\n                                        <tr>\n                                            <td>\n                                                <label>Message: </label>\n                                                <br />\n                                                <textarea name={  \"Message \" }rows={  \"20\"} cols={  \"100\"}\n                                                          className={  \"form-control\" }></textarea>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>\n\n                                                <input type={  \"submit\"} name = { \"\" }/>\n\n                                            </td>\n                                        </tr>\n                                    </form>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n            </div>\n        );\n    }\n};","import React from 'react';\nimport {Table} from 'react-bootstrap';\nimport {Button, ButtonToolBar, Modal} from 'react-bootstrap';\n\n\n\nexport class DrOverlay extends React.Component\n{\n    constructor(props) {\n        super(props);\n        let App = React.create\n\n        let Example = () => {\n            const [smShow, setSmShow] = this.useState(false);\n            const [lgShow, setLgShow] = this.useState(false);\n\n            return (\n                <>\n                    <Button onClick={() => setSmShow(true)}>Small modal</Button>{' '}\n                    <Button onClick={() => setLgShow(true)}>Large modal</Button>\n                    <Modal\n                        size=\"sm\"\n                        show={smShow}\n                        onHide={() => setSmShow(false)}\n                        aria-labelledby=\"example-modal-sizes-title-sm\"\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                                Small Modal\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>...</Modal.Body>\n                    </Modal>\n                    <Modal\n                        size=\"lg\"\n                        show={lgShow}\n                        onHide={() => setLgShow(false)}\n                        aria-labelledby=\"example-modal-sizes-title-lg\"\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title id=\"example-modal-sizes-title-lg\">\n                                Large Modal\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>...</Modal.Body>\n                    </Modal>\n                </>\n            );\n        }\n\n\n    }\n\n\n\n    render() {\n\n        return(\n            <div>\n                {this.Example()}\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Button, Modal} from 'react-bootstrap';\n\nimport '../css/login.css';\nexport class Login extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                email: '',\n                password: '',\n                show: false\n\n\n\n            };\n\n\n\n    }\n\n\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n\n    }\n\n    handleSubmit = (event) =>\n    {\n        const data = this.state;\n\n        /*\n        axios.post('http://172.116.201.31:8080/adduser',data)\n            .then(resp => console.log(resp));\n        */\n\n        /*\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ data })\n        };\n        fetch('http://172.116.201.31:8080/adduser', requestOptions)\n            .then(response => console.log(response))\n            .then(data => this.setState({ postId: data.id }));\n        */\n        alert(`Test Variables\n               --------------\n                  Email: ${this.state.email} \n               Password: ${this.state.password}\n                    \n                    xxxxxxxxxxxxxxxxxxxxxxxx\n      \n                  Email: ${data.email} \n               Password: ${data.password}\n                `\n\n        );\n\n\n        event.preventDefault();\n    }\n\n\n\n\n    showLogin = () =>\n    {\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <br />\n                <label>\n                    Email:\n                    <input\n                        name=\"email\"\n                        type=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n\n\n                <br />\n                <label>\n                    Password:\n                    <input\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleInputChange}\n                        required/>\n                </label>\n\n                <br />\n\n\n\n                <button type=\"submit\" value={this.state.value}>Login</button>\n            </form>\n        );\n    }\n\n\n\n    handleModal()\n    {\n        this.setState({show:!this.state.show})\n    }\n\n    render() {\n        return(\n            <div>\n                <div className=\"center\">\n                    <Button onClick={()=>{this.handleModal()}}>Login</Button>\n                </div>\n                <Modal show ={this.state.show}>\n                    <Modal.Header>Login</Modal.Header>\n                    <Modal.Body>\n                        {this.showLogin()}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={()=>{this.handleModal()}}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n\n\n\n\n\n            </div>\n\n\n        );\n    }\n\n}","import React from 'react';\nimport '../css/hoverForText.css';\n\nexport class DrEdit extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                oldBio: 'I danced all night with no water.',\n                email: 'KM@gg.com',\n                password: '',\n                repassword: '',\n                firstName: 'Kent',\n                lastName: 'Moore',\n                npi: '6161',\n                picture: '',\n                speciality: 'Lungs',\n                copiedText:'',\n                hospitalNameArr: [\n                    {label:\"Cleveland Clinic\", value:\"Cleveland Clinic\"},\n                    {label: \"Johns Hopkins Hospital\", value: \"Johns Hopkins Hospital\"},\n                    {label: \"Mayo Clinic\", value: \"Mayo Clinic\"},\n                    {label: \"UCLA Medical Center\", value: \"UCLA Medical Center\"}\n                    ],\n                currentHospital: 'Johns Hopkins Hospital'\n            };\n\n\n\n    }\n\n    setDefaultHospital = (event) =>\n    {\n\n        return(\n            <label>\n                Select Clinic:\n\n                <br/>\n\n                <select name = \"selectedHospitalName\" value={this.state.value} defaultValue={this.state.hospitalNameArr[3].value} onChange={this.handleInputChange}>\n                    {this.state.hospitalNameArr.map(function(hospitalName, index){\n                        return <option key={index} value={hospitalName.value}>{hospitalName.value}</option>\n                    })}\n\n\n                </select>\n\n\n            </label>\n        );\n\n    }\n\n    handleInputChange = (event) => {\n\n        this.setState(\n            {\n\n                [event.target.name]:event.target.value\n\n            })\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        //this.fileUploadHandler(event);\n\n        //const data = this.state;\n\n        const data = {'name': this.state.firstName + this.state.lastName, 'email': this.state.email,\n            'password': this.state.password};\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ data })\n        };\n\n        let resp = await fetch('http://52.247.220.137:80/adduser', requestOptions);\n\n        //Getting the text of the response\n        let toConsoles = await resp.text();\n\n        console.log(toConsoles);\n\n        /*\n            axios.post('http://52.247.220.137:80/adduser',data)\n                .then(resp => console.log(resp));\n        */\n        /*\n\n        data.name = \"123\";\n        // Simple POST request with a JSON body using fetch\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ data })\n        };\n        fetch('http://52.247.220.137:80/adduser', requestOptions)\n            .then(response => JSON.parse(response))\n            .then(response => console.log(response));\n*/\n        console.log(\"oldBio = \" + this.state.oldBio)\n        alert(`Test Variables\n               --------------\n                  Email: ${this.state.email} \n               Password: ${this.state.password}\n             Repassword: ${this.state.repassword}\n              FirstName: ${this.state.firstName}\n               LastName: ${this.state.lastName}\n                    NPI: ${this.state.npi}\n             Speciality: ${this.state.speciality}\n                selectedHospitalName: ${this.state.selectedHospitalName}\n                Picture: ${this.state.picture}\n                    oldBio: ${this.state.oldBio}\n                    \n                    \n                    xxxxxxxxxxxxxxxxxxxxxxxx\n                    \n                    \n                  Email: ${data.email} \n               Password: ${data.password}\n             Repassword: ${data.repassword}\n             `\n        );\n\n\n\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        <u>Edit Personal Info</u>\n                        <br />\n                    </label>\n                    <br />\n                    <label>\n                        Email:\n                        <input\n                            name=\"email\"\n                            type=\"text\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            placeholder={this.state.oldEmail}\n                        />\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Change Password:\n                        <input\n                            name=\"password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            placeholder={'******'}\n                            />\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Repeat Password:\n                        <input\n                            name=\"repassword\"\n                            type=\"password\"\n                            value={this.state.repassword}\n                            onChange={this.handleInputChange}\n                            placeholder={'******'}\n                            />\n                    </label>\n\n                    <br />\n                    <label>\n                        First Name:\n                        <input\n                            name=\"firstName\"\n                            type=\"text\"\n                            value={this.state.firstName}\n                            onChange={this.handleInputChange}\n                            placeholder={this.state.oldFirstName}\n                            />\n                    </label>\n\n                    <br />\n\n                    <label>\n                        Last Name:\n                        <input\n                            name=\"lastName\"\n                            type=\"text\"\n                            value={this.state.lastName}\n                            onChange={this.handleInputChange}\n                            placeholder={this.state.oldLastName}\n                            />\n                    </label>\n\n                    <br />\n\n\n                    <label>\n                        Speciality:\n                        <input\n                            name=\"speciality\"\n                            type=\"text\"\n                            value={this.state.speciality}\n                            onChange={this.handleInputChange}\n                            placeholder={this.state.oldSpeciality}\n                            />\n                    </label>\n\n                    <br />\n\n\n                    {this.setDefaultHospital()}\n\n\n\n                    <br />\n                    <label>\n                        Upload Profile Picture:\n                        <br />\n                        <div className={\"UploadImg\"}>\n                            <input type={\"file\"} onChange={this.fileSelectedHandler}/>\n                            <button onClick={this.fileUploadHandler}>Upload</button>\n                        </div>\n                    </label>\n\n                    <br />\n                    <label>\n                        Bio:\n                        <br /><br />\n                        <div className=\"dropdownText\">\n                            <span>Hover for Old Bio</span>\n                            <div className=\"dropdownText-content\">\n                                <p><div style={{textAlign:\"center\"}}>Current Bio:</div><br />{this.state.oldBio}</p>\n                            </div>\n                        </div>\n                        <br />\n                        <br />\n                        <textarea name=\"oldBio\" value={this.state.oldBio} ref=\"newText\" rows=\"20\" cols=\"100\" onChange={this.handleInputChange} ></textarea>\n                    </label>\n                    <br />\n                    <br />\n                    <button type=\"submit\" value={this.state.value}>Submit</button>\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport {ClientCaseManagement} from './components/clientCaseManagement';\nimport DrRegister from \"./components/drRegister\";\nimport ClientRegister from \"./components/clientRegister\";\nimport {DrCaseManagement} from \"./components/drCaseManagement\";\nimport {ClientCaseCreation} from './components/clientCaseCreation'\nimport {DrOverlay} from './components/drOverlay';\nimport { ClientOnGoingTable } from './components/clientOnGoingTable';\nimport {Contact} from './components/contact';\nimport {Login} from './components/login';\nimport {DrEdit} from \"./components/drEdit\";\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom';\n\nimport './css/animatedBackground.scss'\nfunction App() {\n    /*\n\n              <DrRegister />\n              <ClientCaseManagement />\n              <ClientRegister />\n              <DrCaseManagement />\n              <DrOverlay />\n              <Contact />\n\n     */\n\n  return (\n\n\n        <div className=\"App\" >\n\n            <Router>\n                <div className=\"App\">\n\n                    <table className=\"App-header\">\n                        <tr>\n                            <td><Link to=\"/\">Home</Link></td>\n\n\n                            <td><Link to={\"/Login\"}>Login</Link></td>\n\n\n                            <td><Link to=\"/drRegister\">Doctor Registration</Link></td>\n\n                            <td><Link to=\"/clientCaseCreation\">Client Case Creation</Link></td>\n\n                            <td><Link to=\"/contact\">Contact Us</Link></td>\n\n                            <td><Link to=\"/edit\">Edit</Link></td>\n\n                        </tr>\n                    </table>\n                    <Switch>\n                        <Route exact path={'/Login'} component={Login}></Route>\n                        <Route exact path={'/drRegister'} component={DrRegister}></Route>\n                        <Route exact path={'/clientCaseCreation'} component={ClientCaseCreation}></Route>\n                        <Route exact path='/contact' component={Contact}></Route>\n                        <Route exact path={'/edit'} component ={DrEdit}></Route>\n                    </Switch>\n                </div>\n            </Router>\n\n        </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}