{"version":3,"sources":["components/images/navbar_logo.png","components/images/patient_Me.jpg","components/homepage_sections/contact_us/social_media_icons/facebook.PNG","components/homepage_sections/contact_us/social_media_icons/twitter.PNG","components/homepage_sections/contact_us/social_media_icons/linkin.PNG","pictures/patient_avatar/pat_avatar_2.jpg","pictures/patient_avatar/pat_avatar_3.jpg","pictures/patient_avatar/pat_avatar_4.jpg","pictures/patient_avatar/pat_avatar_5.jpg","pictures/patient_avatar/bearded_male.PNG","pictures/patient_avatar/elder_woman_3.PNG","pictures/patient_avatar/elderly_man.PNG","pictures/patient_avatar/guy_glasses_2.PNG","pictures/patient_avatar/guy_glasses.PNG","pictures/patient_avatar/lady_1.PNG","pictures/patient_avatar/old_lady_1.PNG","pictures/patient_avatar/old_lady_2.PNG","pictures/patient_avatar/old_lady_4.PNG","pictures/patient_avatar/old_lady_5.PNG","pictures/patient_avatar/pat_avatar_6.png","pictures/patient_doctor_select/left_doctor.png","pictures/patient_doctor_select/right_patient.png","components/homepage_sections/homepage_backgrounds/testimonial_slider_background_black-texture.jpg","components/payment/payment_form.js","components/picCarousel.js","components/payment/paymenthistory.js","components/case_related/fullViewCase.js","components/case_related/drWritesSecondOpinion.js","components/generateSortableTable.js","components/animations/ani_reload_mgmt_table.js","components/case_related/clientTable_OnGoing.js","components/case_related/clientCaseManagement.js","components/case_related/drCaseManagement.js","components/animations/ani_slideIn.js","components/contact.js","components/user_related/drEdit.js","components/homepage_sections/contact_us/contactus.js","components/testimonial_slider.js","components/homepage.js","components/pricingPage.js","components/card_related/card.jsx","components/hammer.jsx","components/card_related/views/header.jsx","components/card_related/views/body.jsx","components/card_related/caller_SwipeCardAnimation.js","components/patientSidePanel.js","components/case_related/caseCreation.js","components/hoverImgBlkWhite.js","components/user_related/registration_funct_comp.js","components/user_related/login.js","components/user_related/loginRegisterDisplay.js","components/user_related/doctorPatientSelect.js","components/navbar_custom.js","App.js","serviceWorker.js","index.js","components/payment/payment_pics/major_credit_cards_pic.png","pictures/patient_avatar/pat_avatar_1.jpg","pictures/patient_avatar/male_tux.PNG"],"names":["module","exports","Payment_Form","props","handleInputChange","event","setState","target","name","value","console","log","state","handleInputFocus","e","focus","isShown","name_on_card","credit_card_num","exp_date","cv_code","subtotal","taxRate","total","caseDetail","this","fetch","method","headers","body","JSON","stringify","record_assessment_id","month","substring","year","length","number","csc","company","phy_id","pat_id","Modal","show","size","Header","Body","Row","Col","Container","style","width","padding","margin","border","borderColor","borderStyle","height","src","major_credit_card_pics","Form","className","onSubmit","handleSubmit","paddingRight","cvc","expiry","focused","as","label","icon","onChange","onFocus","required","prepend","Button","display","onClick","handleSubmitPayment","paddingLeft","borderRight","toFixed","paddingTop","Footer","showModalHandle","React","Component","PicCarousel","loopCarouselItem","pic","map","selectedPic","index","Carousel","Item","key","valueURL","alt","valueFileName","Caption","backgroundColor","valueTitle","color","fontSize","fontWeight","valueDescription","marginLeft","fontFamily","handleModal","background","useStyles","makeStyles","table","minWidth","ccyFormat","num","desc","qty","rows","price","invoiceSubtotal","reduce","sum","i","invoiceTaxes","invoiceTotal","Paymenthistory","caseDetails","classes","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","colSpan","TableBody","row","rowSpan","phy_name","pat_name","record_ass_id","requestOptions","then","response","json","GetCreditCardNumber","assessment","toUpperCase","FullViewCase","showPaymentModal","completeValue","awaitPayValue","pendingValue","cancelValue","caseStatus","caseInfo","left","textAlign","float","patientSex","pat_sex","borderSize","patientImg","marginTop","marginBottom","pat_age","primaryImg","ShowPaymentModalHandler","comment","pat_medical_history","GetPaymentModal","PageTitleBlock","PatientInfoBlock","PrimaryProviderBlock","PictureButton","SecondaryDiagnosisBlock","PrimaryDiagnosisBlock","DrWritesSecondOpinion","showDrEditView","SelectTitle","Label","parsedJSON","email","record_id","type","secondDiagnosisMessage","cols","correctCase","allCaseInfo","showAssessmentPageModal","recordID","text","reload_tables","dialogClassName","role","ShowAssessmentPageModalHandle","SearchBar","Search","GenerateSortableTable","parsedJSONObj","error","showModal","showFullCasePageModal","caseDetailForFullView","isPaymentFormRendering","paymentFormDetail","bind","status","LoadTables","CloseModalHandle","CaseCancellationHandle","details","incomingData","URL_for_Fetch","res","result","l","viewFullCaseButton","ShowFullCaseHandle","userInfo","cancelButton","acceptButton","alert","createAssessmentButton","payButton","data","GetFullCaseView","ConfirmCancelButtonHandle","keyField","columns","defaultSorted","columnToggle","search","searchProps","baseProps","SlidePageTransitionAnimation","tableSettings","useState","set","transitions","useCallback","useTransition","p","from","opacity","transform","enter","leave","pages","div","item","Page","ClientTable_OnGoing","is_patient","dataField","order","sort","ClientCaseManagement","modeID","userID","zIndex","position","DrCaseManagement","incomingFunction","angle","eA","eB","eC","fA","fB","fC","Contact","action","encType","Group","controlId","Control","placeholder","borderLeft","DrEdit","setDefaultHospital","indxCurrentHospital","currHospitalName","currentHospital","hospitalNameArr","hospitalName","defaultValue","preventDefault","age","userMode","passwordAuthorization","password","username","sex","bio","npi","phy_addr","speciality","hospital_id","EditPageBody","isLoading","paddingBottom","DropdownButton","ButtonGroup","title","Dropdown","SelectSexHandle","ref","oldBio","repassword","picture","showOldBio","assignJSON","isUploaded","phy_bio","phy_qual","inputs","document","getElementById","elements","to_send","element","showOldBioNew","selectedSex","FakeMessage","ContactUs_HomePage","twitter_icon","facebook_icon","linkin_icon","Testimonial_Slider","pat_pic_1","pat_pic_2","pat_pic_3","pat_pic_4","pat_pic_5","pat_pic_6","pat_pic_7","pat_pic_8","pat_pic_9","pat_pic_10","pat_pic_11","pat_pic_12","pat_pic_13","pat_pic_14","pat_pic_15","pat_pic_16","pat_pic_17","alignContent","LoopCarouselItem","Container_IntroTitle","blur","min","max","bgImageAlt","strength","Container_OurStory","marginRight","Container_SelectDoctorTitle","Container_Testimonial","bgImage","require","Container_QualificationTitle","Container_Copyright","Homepage","Pricing","objectFit","majorCreditCardImg","FrontCard","id","class","user","doctorName","location","specialty","image","BackCard","about","cardPosition","isBack","X","Y","top","window","innerHeight","innerWidth","showCardClass","cardContainer","card_list","user_data","val","mainScroll","scroll","push","show_status","HammerArea","onDragStart","center","x","y","onDragEnd","deltaX","func_like","onPan","onTap","func_show_info","onPanEnd","card_data","isLike","ans","cntIndexCard","numElements","hadChosen","userData","selectDr","sessionStorage","setItem","is_moving","setTimeout","shift","createDataList","isShowBackToggle","dataList","drInfo","helpUserIsShown","is_like","disabled","href","helpUserInfo","ShowContentsOfBody","RunModalPhysician","Caller_SwipeCardAnimation","FromList","list","fetchUserData","randomlyOneOfList","people1","avatar","Math","floor","random","cnt","peopleArray","rating","drId","loading","drList","PatientSlidePanel","isPaneOpen","pat_bio","pat_height","pat_weight","RightPaneHandle","backgroundImage","patient_Me","overlayClassName","isOpen","onRequestClose","subtitle","Image","thumbnail","GetSlidingPanel","CaseCreation","pageTitleUserDisplay","patModeID","categoryTitleUserDisplay","viewOrAddPicMode","descriptionTitleUserDisplay","pat_notes","drCaseCreationComponents","pat_data","is_rec_loading","patientRecords","GetDrInfoForBackend","submitButtonClicked","selectedDr","parse","getItem","requestMethods","physician_id","ResPendingRec","s","responsestatus","patientSelectedCategory","pics","prim_case_description","drModeID","d","HoverImgBlkWhite","overlayText","hover","imgSource","picHeight","picWidth","overlay","overlayColor","DropDownMenu","selectedBirthElement","dataArr","DropDownMenu_Hosp","hospital_name","DrAttritube","GetTitle","ShowRegistrationForm","outerProps","firstName","lastName","date","day","hospital","RegFunctionalComponent","Login","showLogin","handleLoginSubmit","loginInfoFromBackend","userDataBackend","handleUserLoginFromNavBar","catch","LoginRegisterDisplay","selectedFile","getDaysInMonth","Date","getDate","setCurrentYear","currentYear","getFullYear","cntDay","iter_over_items","calculatedAge","GetAge","isOverflowedDayOfMonth","catOfMonthYear","checkSelectedDayOfMonth","SelectLoginRegisterHandle","choice","isLogin","choseReturn","monthName","numericalBirthMonth","GetNumericalMonth","selectedBirthMonth","convertedBirthdate","selectedBirthYear","selectedBirthDay","getTime","abs","getUTCFullYear","DoctorPatientSelect","GetShowDoctorPatientPicLoginSelect","showIt_bool","showPic","handleDoctorPic","toggleShowPic","handlePatientPic","selectedUserMode","changeShowPic","selectedMode","doctor_left","patient_right","DisplaySelectionPics","SwitchToAccessPage","NavbarClass","Navbar","sticky","Nav","responsive","navbarLogo","borderTop","to","exact","path","reload","PatientNavBar","DoctorNavBar","NewUserNavBar","NavbarModes","App","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.26a3c2d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/navbar_logo.3e4dd4d1.png\";","module.exports = __webpack_public_path__ + \"static/media/patient_Me.799c0eb4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.d1075aa1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/twitter.a14d80a1.PNG\";","module.exports = __webpack_public_path__ + \"static/media/linkin.14c41c78.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pat_avatar_2.60a43f6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pat_avatar_3.a2307f98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pat_avatar_4.98511ee9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pat_avatar_5.1795d0c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bearded_male.e573292c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/elder_woman_3.0ad6e05b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/elderly_man.88f5911f.PNG\";","module.exports = __webpack_public_path__ + \"static/media/guy_glasses_2.2ad19091.PNG\";","module.exports = __webpack_public_path__ + \"static/media/guy_glasses.17e563c3.PNG\";","module.exports = __webpack_public_path__ + \"static/media/lady_1.3cc808a5.PNG\";","module.exports = __webpack_public_path__ + \"static/media/old_lady_1.af7ffd95.PNG\";","module.exports = __webpack_public_path__ + \"static/media/old_lady_2.1a1c1cb4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/old_lady_4.3350af57.PNG\";","module.exports = __webpack_public_path__ + \"static/media/old_lady_5.743870fd.PNG\";","module.exports = __webpack_public_path__ + \"static/media/pat_avatar_6.34c447d9.png\";","module.exports = __webpack_public_path__ + \"static/media/left_doctor.70544c40.png\";","module.exports = __webpack_public_path__ + \"static/media/right_patient.43a233be.png\";","module.exports = __webpack_public_path__ + \"static/media/testimonial_slider_background_black-texture.a8d54ca9.jpg\";","import React, { useRef } from 'react';\nimport {MDBInput} from 'mdbreact';\nimport {Button, Form, Modal, Container, Row, Col} from 'react-bootstrap';\nimport {MultiBrowsePic} from '../multiBrowsePic';\nimport Cards from 'react-credit-cards';\nimport 'mdbreact/dist/css/mdb.css';\nimport 'mdbreact/dist/css/style.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport 'react-credit-cards/lib/styles.scss';\nimport major_credit_card_pics from './payment_pics/major_credit_cards_pic.png';\n\n\n\n//Generates a payment form for the user to enter in their payment information via credit card\nexport class Payment_Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShown: true,\n            name_on_card: '',\n            credit_card_num: '',\n            exp_date: '',\n            cv_code: '',\n            focus: ''\n        };\n\n        this.subtotal = 150.00;\n        this.taxRate = 0.08;\n        this.total = this.subtotal + this.subtotal*this.taxRate;\n    }\n    async componentDidMount() {\n        //Getting record_id from props from generateSortableTable.js\n        let caseDetail = this.props.caseDetail;\n\n        console.log(caseDetail);\n\n        // Insert API into here\n        // paymententry\n        // fields\n        // pat_id, number, month, year, csv, company, record_assessment_id, total, phy_id\n        // fetch(\"http://52.247.220.137/paymententry\",\n        //     {\n        //         method: 'PUT',\n        //         headers: {'Content-Type': 'application/json'},\n        //         body: {\"record_assessment_id\": caseDetail.record_assessment_id, month: this.state.exp_date.substring(2),\n        //             year:20 + this.state.exp_date.substring(this.state.exp_date.length-2),\n        //             number: this.state.credit_card_num, csc: this.state.cv_code, company: 'N/A', total: '150.00',\n        //             phy_id: caseDetail.phy_id}\n        //     });\n\n        // let results = await fetch(\"http://52.247.220.137/get_payment_patid\",\n        //     {\n        //         method: 'POST',\n        //         headers: {'Content-Type': 'application/json'},\n        //         body: JSON.stringify({pat_id: \"1\"})\n        //     }\n        //     )\n        // console.log(\"2020\");\n        // results = await results.json();\n        // console.log(results);\n\n\n\n    }\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            })\n\n        console.log(this.state);\n\n\n\n    }\n\n    handleSubmitPayment()\n    {\n        let caseDetail = this.props.caseDetail;\n\n        fetch(\"http://52.247.220.137/paymententry\",\n            {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\"record_assessment_id\": caseDetail.record_assessment_id, month: this.state.exp_date.substring(2),\n                    year:20 + this.state.exp_date.substring(this.state.exp_date.length-2),\n                    number: this.state.credit_card_num, csc: this.state.cv_code, company: 'N/A', total: '150.00',\n                    phy_id: caseDetail.phy_id, pat_id: caseDetail.pat_id})\n            });\n\n    }\n\n    showModalHandle()\n    {\n\n        this.setState(\n            {\n                isShown: !this.state.isShown\n            }\n        )\n        console.log(\"aaa \"+ this.state.isShown);\n    }\n\n    handleInputFocus = (e) => {\n        this.setState({ focus: e.target.name });\n    }\n\n\n\n\n    render()\n    {\n        return(\n            <div>\n\n\n                <Modal show = {this.state.isShown}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        <h4>Enter Payment Info</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n\n                        <Row>\n                            <Col>\n                                <Container style={{width: \"100%\", padding: \"0px\", margin: \"0px\", border:\"1px\", borderColor: \"black\", borderStyle: \"solid\"}}>\n                                <Row>\n                                    <img style={{height: \"auto\", width: \"100-px\", margin:\"auto\"}} src={major_credit_card_pics} />\n                                </Row>\n                                    <Form className={'paymentForm'} onSubmit={this.handleSubmit} style={{width: \"50%\", margin: \"auto\"}}>\n                                        <Container style={{margin: \"auto\", width: \"100%\"}}>\n                                            <Row style={{width: \"100%\", margin: \"auto\"}}>\n                                                <Row>\n                                                    <Col style={{paddingRight: \"0px\", margin:\"auto\", border:\"0px\"}}>\n                                                    </Col>\n                                                    <Cards\n                                                        cvc={this.state.cv_code}\n                                                        expiry={this.state.exp_date}\n                                                        focused={this.state.focus}\n                                                        name={this.state.name_on_card}\n                                                        number={this.state.credit_card_num}\n                                                    />\n                                                    <Col>\n                                                        <MDBInput as={\"input\"}\n                                                                  label={\"Name on Card\"}\n                                                                  name=\"name_on_card\"\n                                                                  icon={\"fas fa-user\"}\n                                                                  onChange={this.handleInputChange}\n                                                                  onFocus={this.handleInputFocus}\n                                                                  required/>\n\n                                                        <MDBInput as={\"input\"}\n                                                                  className=\"far fa-credit-card\"\n                                                                  label={\"Card Number\"}\n                                                                  name=\"credit_card_num\"\n                                                                  icon = \"far fa-credit-card\"\n                                                                  onChange={this.handleInputChange}\n                                                                  onFocus={this.handleInputFocus}\n                                                                  required/>\n\n                                                        <MDBInput as={\"input\"}\n                                                                  label={\"Expiration Date\"}\n                                                                  name=\"exp_date\"\n                                                                  prepend = \"credit-card\"\n                                                                  onChange={this.handleInputChange}\n                                                                  onFocus={this.handleInputFocus}\n                                                                  required/>\n\n                                                        <MDBInput as={\"input\"}\n                                                                  label={\"CV Code\"}\n                                                                  name=\"cv_code\"\n                                                                  prepend = \"credit-card\"\n                                                                  onChange={this.handleInputChange}\n                                                                  onFocus={this.handleInputFocus}\n                                                                  required/>\n                                                    </Col>\n                                                </Row>\n                                            </Row>\n\n\n                                            <Button name=\"submit\" style={{display:\"inline\"}} onClick={()=>this.handleSubmitPayment()}>Submit</Button>\n                                        </Container>\n\n\n                                        </Form>\n                                    </Container>\n                                </Col>\n                                <Col>\n                                    <Container style={{padding: \"0px\", margin: \"0px\", border:\"1px\", width:\"500px\", borderColor: \"black\", borderStyle: \"solid\"}}>\n\n\n                                        <h4 style={{paddingLeft: '10px'}}>Description:</h4>\n\n                                        <Row style={{paddingRight:'0px', margin: 'auto', borderRight:'0px'}}>\n                                            <Col>\n                                                <h6 style={{paddingLeft: '30px'}}>Diagnosis Fee</h6>\n                                            </Col>\n                                            <Col>\n                                                ${this.subtotal.toFixed(2)}\n                                            </Col>\n                                            <Col style={{paddingTop: \"400px\"}}>\n                                                <h6>Subtotal: ${this.subtotal.toFixed(2)}</h6>\n                                                <h6>Tax: ${(this.taxRate * this.subtotal).toFixed(2)}</h6>\n                                                <h5>Total: ${this.total.toFixed(2)}</h5>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Col>\n                            </Row>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={()=>{this.showModalHandle()}}>\n                            Cancel Payment\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n\n\n\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Carousel, Button,Modal} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Pelvis pic https://post.healthline.com/wp-content/uploads/2020/08/pelvis-x-ray_thumb-1-732x549.jpg\n\n//carousel slide for all medical images\nexport class PicCarousel extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                show: false,\n\n                pic:[\n                    {\n                        label: 'pic_1',\n                        valueTitle: 'X-Ray Pevis',\n                        valueURL: 'https://post.healthline.com/wp-content/uploads/2020/08/pelvis-x-ray_thumb-1-732x549.jpg',\n                        valueFileName: 'pelvis-x-ray_thumb-1-732x549.jpg',\n                        valueDescription:'Patient has fracture, joint dislocation and effusion, and several pediatric pathologies involving the pelvic girdle'\n                    },\n                    {\n                        label: 'pic_2',\n                        valueTitle: 'X-Ray Chest',\n                        valueURL: 'https://4rai.com/images/easyblog_articles/155/chest-xray.jpg',\n                        valueFileName: 'chest-xray.jpg',\n                        valueDescription: 'It\\'s evident patient has conditions such as pneumonia, heart failure, lung cancer, tuberculosis, sarcoidosis, and lung tissue scarring.'\n                    },\n                    {\n                        label: 'pic_3',\n                        valueTitle: 'X-Ray Hands',\n                        valueURL: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRJCJwq-te73EiuwrkdMiohyK60YY3ofiP7rw&usqp=CAU',\n                        valueFileName: 'hand-xray.jpg',\n                        valueDescription: 'Examined the radiocarpal and distal radioulnar joints, the carpals, metacarpals, and phalanges.'\n                    }\n                ]\n\n\n\n            };\n    }\n\n    loopCarouselItem = () =>\n    {\n\n        return(\n            this.state.pic.map(function(selectedPic,index) {\n                return (\n\n                    <Carousel.Item>\n                        <div style={{width: \"70%\", margin: \"auto\"}}>\n                        <img\n                            style={{height:\"1080px\", width:\"1920px\"}}\n                            key={index}\n                            className=\"d-block w-100\"\n                            src={selectedPic.valueURL}\n                            alt={selectedPic.valueFileName}\n                        />\n                        </div>\n                        <Carousel.Caption>\n                            <table style={{backgroundColor: 'rgba(23,32,42, 0.55)'}}>\n                                <h3>{selectedPic.valueTitle}</h3>\n                                <p style={{color: '#58D68D', fontSize: '30px', fontWeight: 'bold'}}>{selectedPic.valueDescription}</p>\n                            </table>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                );\n            })\n        );\n    }\n    handleModal()\n    {\n        this.setState({show:!this.state.show})\n    }\n\n    render() {\n        return(\n            <div>\n\n                <Button className={\"ShowMedicalImgButton\"} style={{marginLeft: \"25%\", color:\"white\",\n                    fontFamily: \"Times New Roman\"}} onClick={()=>{this.handleModal()}}>Show Medical Images</Button>\n\n                <Modal show = {this.state.show}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        <h2>Case Pictures</h2>\n                        <Button onClick={()=>{this.handleModal()}}>\n                            Close\n                        </Button>\n                    </Modal.Header>\n                    <Modal.Body style={{background:`rgba(0, 0, 0, 0.7)`}}>\n\n                        <Carousel>\n                            {this.loopCarouselItem()}\n                        </Carousel>\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n\n                <br />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst TAX_RATE = 0.08;\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 700,\n    },\n});\n\n//Generates a window with the receipt of any one case\nfunction GetCreditCardNumber(record_ass_id)\n{\n    let backEndData = null;\n\n    console.log(\"rec_ass_id = \" + record_ass_id);\n    let lastDigits = \" ****\";\n\n    const requestOptions ={\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json'},\n        body: JSON.stringify( {\"record_assessment_id\": record_ass_id} )\n    };\n\n    fetch(\"http://52.247.220.137/get_payment\", requestOptions)\n        .then(response => response.json())\n        .then(response => {console.log(response)});\n\n\n    return lastDigits;\n}\n\n// fixes numbers to only 2 decimal places\nfunction ccyFormat(num) {\n    return `${num.toFixed(2)}`;\n}\n// shows how many of a quantity\nfunction priceRow(qty) {\n    return qty;\n}\n// formats the rows to display information\nfunction createRow(desc, qty) {\n    const price = priceRow(qty);\n    return {desc, qty, price};\n}\n// shows subtotal\nfunction subtotal(items) {\n    return items.map(({price}) => price).reduce((sum, i) => sum + i, 0);\n}\n\n\nconst rows = [\n    //here is where one of the inputs will be pulled into the table\n    // under description is what kind of service theyre getting\n    createRow('Description ID', 150.00),\n];\n//these functions do math to add up the total.\n//Not sure if you'll need them since its going to be backend data\nconst invoiceSubtotal = subtotal(rows);\nconst invoiceTaxes = TAX_RATE * invoiceSubtotal;\nconst invoiceTotal = invoiceTaxes + invoiceSubtotal;\n\nexport function Paymenthistory(caseDetails) {\n    const classes = useStyles();\n\n    console.log(\"caseDetails for payment right hurr\")\n    console.log(caseDetails);\n\n    return (\n    // this is were the table starts\n        // line 94 is where the header starts\n        // line 135,137 is where the doctor id and card number\n        <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"spanning table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"center\" colSpan={3}>\n                            <h1 style={{marginLeft: \"25%\"}}>\n                                Payment History\n                            </h1>\n                        </TableCell>\n                        <TableCell align=\"right\"> </TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell>Description:</TableCell>\n                        <TableCell align=\"right\">Price (USD):</TableCell>\n                        <TableCell align=\"right\"> </TableCell>\n                        <TableCell align=\"right\">Sum (USD):</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.desc}>\n                            <TableCell>{row.desc}</TableCell>\n                            <TableCell align=\"right\">{row.qty}</TableCell>\n                            <TableCell align=\"right\"></TableCell>\n                            <TableCell align=\"right\">{ccyFormat(row.price)}</TableCell>\n                        </TableRow>\n                    ))}\n\n                    <TableRow>\n                        <TableCell rowSpan={3}/>\n                        <TableCell colSpan={2}> Subtotal: </TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceSubtotal)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell>Tax: </TableCell>\n                        <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceTaxes)}</TableCell>\n                    </TableRow>\n\n                    <TableRow>\n                        <TableCell colSpan={2}> Total: </TableCell>\n                        <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">Secondary Physician: {caseDetails.caseDetails.phy_name} </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell align=\"left\">Patient: {caseDetails.caseDetails.pat_name} </TableCell>\n                    </TableRow>\n                        <TableCell align=\"left\">Card Number: **** **** ****\n                            {GetCreditCardNumber(caseDetails.caseDetails.record_assessment_id)}\n                        </TableCell>\n                    <TableRow>\n                        <TableCell align=\"left\">Status: {caseDetails.caseDetails.assessment.toUpperCase()} </TableCell>\n                    </TableRow>\n                </TableBody>\n\n            </Table>\n        </TableContainer>\n    );\n}\n\n\n","import React from 'react';\nimport {Container, Row, Col, Button, Modal} from 'react-bootstrap';\nimport {PicCarousel} from '../picCarousel';\nimport {Paymenthistory} from '../payment/paymenthistory';\nimport patientImg from '../../pictures/patient_avatar/pat_avatar_1.jpg';\nimport primaryImg from '../../pictures/patient_avatar/male_tux.PNG';\n\nimport './fullView/fullViewCase.css';\n\n//Displays a window with more details pertaining to a case\nexport class FullViewCase extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                show: true,\n                showPaymentModal: false,\n                caseDetail: null\n            }\n        // Status: Pending, Diagnosing, Cancelled, Complete\n        this.completeValue = \"Complete\";\n        this.awaitPayValue = \"awaiting payment\";\n        this.pendingValue = \"pending\";\n        this.cancelValue = \"canceled\";\n        this.caseStatus = \"canceled\";\n    }\n\n    componentDidMount() {\n\n    }\n\n    ShowPaymentModalHandler(caseInfo)\n    {\n        this.setState(\n            {\n                showPaymentModal: !this.state.showPaymentModal,\n                caseDetail: caseInfo\n            }\n        )\n    }\n\n    GetPaymentModal()\n    {\n        return(\n            <div>\n                <Modal show = {this.state.showPaymentModal}\n                       size = {'xl'}\n                >\n\n                    <Modal.Header>\n                        <h1>Full Case View</h1>\n                        <Button style={{left: 0}}onClick={()=>{this.setState({showPaymentModal: !this.state.showPaymentModal})}}>\n                            Close\n                        </Button>\n                    </Modal.Header>\n                    <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto'}}>\n                        <Container >\n                            <Paymenthistory caseDetails={this.state.caseDetail} />\n                        </Container>\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n    }\n\n    PageTitleBlock()\n    {\n        console.log(this.props.caseDetails.assessment);\n        return(\n            <div>\n                <div style={{height:\"10px\"}} />\n                <Row>\n                    <Container className={\"CaseTitleBlock\"}>\n                        <h1 style={{color:\"white\"}}>Case ID: {this.props.caseDetails.record_assessment_id}</h1>\n                        <h1 style={{color:\"white\"}}>Status:\n                            {\n\n                                (this.props.caseDetails.assessment == this.completeValue) &&\n                                    <div>\n                                        <h2 style={{textAlign:\"left\", float:\"left\",color:\"#4BFF23\",fontWeight:\"bold\"}}> Completed</h2>\n\n                                    </div>\n\n                            }\n\n                            {\n\n                                (this.props.caseDetails.assessment) && <h2 style={{display: \"inline\", color:\"#FFFF00\",\n                                    fontWeight:\"bold\"}}> {this.props.caseDetails.assessment.toUpperCase()}</h2>\n\n                            }\n\n                        </h1>\n                    </Container>\n                </Row>\n            </div>\n\n        );\n    }\n\n    PatientInfoBlock()\n    {\n        let patientSex = 'Male';\n\n        if(this.props.caseDetails.pat_sex != 'm')\n        {\n            patientSex = 'Female';\n        }\n        else\n        {\n            patientSex = 'Male';\n        }\n\n        return(\n            <Container className={\"IndividualBlock\"}>\n\n                <Row style={{borderColor:\"black\", borderStyle:\"solid\", borderSize:\"1px\"}}>\n                    <Col>\n                        <img style={{padding:\"1px\", border: \"1px solid black\"}} src={patientImg}/>\n                    </Col>\n                    <Col style={{marginTop: \"20px\", color:\"white\", fontFamily: \"Times New Roman\"}}>\n                        <h5><u>Patient Details:</u></h5>\n                        <h4 style={{marginLeft: \"15px\", marginBottom: \"15px\"}}>Patient's Name: {this.props.caseDetails.pat_name}</h4>\n                        <h4 style={{marginLeft: \"15px\", marginBottom: \"15px\"}}>Patient's Age: {this.props.caseDetails.pat_age}</h4>\n                        <h4 style={{marginLeft: \"15px\", marginBottom: \"15px\"}}>Patient's Sex: {patientSex}</h4>\n                    </Col>\n                </Row>\n\n\n            </Container>\n        );\n    }\n\n    PrimaryProviderBlock()\n    {\n        return(\n            <Container  className={\"IndividualBlock\"}>\n\n                <Row>\n                    <Col style={{marginTop: \"15px\"}}>\n                        <h5 style={{color:\"white\", fontFamily: \"Times New Roman\"}}><u>Primary Health Provider Details:</u></h5>\n                        <h4 style={{marginLeft: \"15px\", marginBottom: \"15px\", color:\"white\", fontFamily: \"Times New Roman\"}}>\n                            Name: {this.props.caseDetails.phy_name}\n                        </h4>\n                        <h4 style={{marginLeft: \"15px\", marginBottom: \"15px\", color:\"white\", fontFamily: \"Times New Roman\"}}>\n                            NPI: {this.props.caseDetails.phy_id}\n                        </h4>\n                    </Col>\n                    <Col>\n                        <img src={primaryImg} style={{padding:\"2px\", border: \"1px solid black\", marginLeft:\"210px\"}}/>\n                    </Col>\n                </Row>\n\n            </Container>\n        );\n    }\n\n    PictureButton()\n    {\n        return(\n            <Row>\n                <Col>\n                    <Button className={\"ShowMedicalImgButton\"} style={{marginLeft: \"25%\", color:\"white\",\n                        fontFamily: \"Times New Roman\"}}\n                            onClick={()=>this.ShowPaymentModalHandler(this.props.caseDetails)}>View Payment</Button>\n                </Col>\n                <Col>\n                    <PicCarousel />\n                </Col>\n            </Row>\n\n        )\n    }\n\n    SecondaryDiagnosisBlock()\n    {\n        return(\n            <Container className={\"IndividualBlock\"}>\n\n                <Row style={{marginLeft: \"10px\"}}>\n                    <h3 style={{color:\"white\", fontFamily: \"Times New Roman\"}}><u>Primary Diagnosis:</u></h3>\n                </Row>\n                <Row style={{marginLeft: \"50px\", color:\"white\", fontFamily: \"Times New Roman\"}}>\n                    <div style={{height:\"85px\"}} />\n                    <h5>{this.props.caseDetails.comment}</h5>\n                </Row>\n\n            </Container>\n        );\n    }\n\n    PrimaryDiagnosisBlock()\n    {\n        return(\n            <Container className={\"IndividualBlock\"} style={{color:\"white\", fontFamily: \"Times New Roman\"}}>\n                <Row>\n                    <h3 style={{color:\"white\", fontFamily: \"Times New Roman\"}}><u>Patient Bio:</u></h3>\n                </Row>\n                <div style={{height:\"10px\"}} />\n                <Row  style={{marginLeft: \"50px\", color:\"white\", fontFamily: \"Times New Roman\"}}>\n                    <h5 style={{color: \"white\"}}>{this.props.caseDetails.pat_medical_history}</h5>\n                </Row>\n\n            </Container>\n        );\n    }\n\n\nrender() {\n        console.log(\"hello\");\n    return(\n        <div>\n            {this.GetPaymentModal()}\n            {this.PageTitleBlock()}\n            <div style={{height:\"30px\"}}/>\n            {this.PatientInfoBlock()}\n\n\n            <div style={{height:\"30px\"}}/>\n\n            {this.PrimaryProviderBlock()}\n\n            <div style={{height:\"30px\"}}/>\n\n            {this.PictureButton()}\n\n            <div style={{height:\"30px\"}}/>\n            {this.SecondaryDiagnosisBlock()}\n\n            <div style={{height:\"30px\"}}/>\n            {this.PrimaryDiagnosisBlock()}\n        </div>\n    )\n}\n\n\n}\n\n","import React from 'react';\nimport {Button, Form, Container, Row, Col, Modal} from 'react-bootstrap';\nimport {MDBInput} from 'mdbreact';\nimport '../../css/modalLarge.css';\nimport './drWritesSecondOpinion.css';\n\n//Generates UI for secondary physicians to insert their medical opinion for a case\nexport class DrWritesSecondOpinion extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                secondDiagnosisMessage: '',\n                parsedJSON: [],\n                show: true\n\n            };\n\n        this.correctCase = [];\n\n    }\n\n    componentDidMount() {\n\n        let allCaseInfo = [];\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": this.props.phy_id})\n        };\n\n        fetch(\"http://52.247.220.137:80/get_all_physician_records\",requestOptions)\n            .then(response => response.json())\n            .then(json => {\n                for(let i = 0; i < json.length; i++)\n                {\n\n                    if(this.props.phy_id == json[i].phy_id)\n                    {\n                        allCaseInfo = json[i];\n                        i = json.length;\n                    }\n                }\n                this.setState(\n                    {\n                        parsedJSON: allCaseInfo\n                    }\n                )\n            });\n    }\n\n    OpenCloseModalHandler()\n    {\n        this.setState(\n            {\n                show: this.props.showAssessmentPageModal\n            }\n        )\n    }\n\n\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n\n    }\n\n    SelectTitle()\n    {\n        /*\n        if(this.props.data.userMode === 'Doctor')\n        {\n            return(<Form.Label><u className={\"display-4\"}>Case Diagnosis</u></Form.Label>);\n        }\n        else\n        {\n            return(<Form.Label><u className={\"display-4\"}>Case Review</u></Form.Label>);\n        }\n        */\n\n    }\n\n\n\n\n    showDrEditView = () =>\n    {\n        return(\n            <Container style={{width:\"75%\", margin:\"auto\"}}>\n                <Form className={'loginForm'} onSubmit={this.handleSubmit}>\n                    {this.SelectTitle()}\n                    <br />\n\n                    <Container style={{width: \"50%\", margin:\"auto\"}}>\n                        <Form.Label>\n                            <Row>\n                                <Col  style={{width: \"50%\", margin:\"auto\", border: \"1px\", padding:\"25px\",\n                                    borderStyle: \"solid\", borderColor: \"black\"}}>\n                                    <h3 style={{padding: \"2px\", background: `rgba(0,0,0, 1)`, color:\"white\",\n                                        fontWeight: \"bold\", fontSize:\"30px\", width:\"100%\"}}>\n                                        <div style={{marginLeft: \"10%\"}}>Fill in the Second</div>\n                                        <div style={{marginLeft: \"25%\"}}>Diagnosis</div></h3>\n                                    <Row>\n                                        <div className={\"SecondOpinionSubHeaderFont\"}>\n                                            Patient Name:\n                                        </div>\n                                        <div className={\"SecondOpinionInfoFont\"}>\n                                            {this.state.parsedJSON.pat_name}\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className={\"SecondOpinionSubHeaderFont\"}>\n                                            Patient Sex:\n                                        </div>\n                                        <div className={\"SecondOpinionInfoFont\"}>\n                                            {this.state.parsedJSON.pat_sex}\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className={\"SecondOpinionSubHeaderFont\"}>\n                                            Patient Age:\n                                        </div>\n                                        <div className={\"SecondOpinionInfoFont\"}>\n                                            {this.state.parsedJSON.pat_age}\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className={\"SecondOpinionSubHeaderFont\"}>\n                                            Patient Email:\n                                        </div>\n\n                                        <div className={\"SecondOpinionInfoFont\"}>\n                                            {this.state.parsedJSON.email}\n                                        </div>\n                                    </Row>\n                                    <Row>\n                                        <div className={\"SecondOpinionSubHeaderFont\"}>\n                                            Record ID:\n                                        </div>\n\n                                        <div className={\"SecondOpinionInfoFont\"}>\n                                            {this.state.parsedJSON.record_id}\n                                        </div>\n                                    </Row>\n                                    <br />\n                                    <div className={\"SecondOpinionSubHeaderFont\"}>\n                                        Patient Medical History:\n                                    </div>\n\n                                    <Container>\n                                        <Row style={{border: \"2px\", padding:\"25px\", borderStyle: \"solid\", borderColor: \"black\"}}>\n                                            {this.state.parsedJSON.pat_medical_history}</Row>\n                                    </Container>\n                                    <br />\n                                    Primary Diagnosis:\n                                    <Container>\n                                        <Row style={{border: \"2px\", padding:\"25px\", borderStyle: \"solid\", borderColor: \"black\"}}>\n                                            {this.state.parsedJSON.comment}</Row>\n                                    </Container>\n                                </Col>\n                            </Row>\n                        </Form.Label>\n                    </Container>\n\n                    <MDBInput  type={\"textarea\"}\n                               name=\"secondDiagnosisMessage\"\n                               label={\"Enter Second Diagnosis Here\"}\n                               value={this.state.secondDiagnosisMessage}\n                               onChange={this.handleInputChange}\n                               rows={10}\n                               cols={100}\n                               required/>\n\n\n                    <br />\n\n\n                    <Button type=\"button\" onClick={()=>this.handleSubmit()}>Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n\n\n    handleSubmit()\n    {\n\n        //Submit to the backend the assessment and mark status as complete\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"record_assessment_id\": this.props.recordID, \"assessment\": this.state.secondDiagnosisMessage,\n                \"status\": \"Complete\"})\n        };\n\n        fetch(\"http://52.247.220.137:80/update_pending_records\", requestOptions)\n            .then(response=>response.text()).then(text => console.log(text))\n            .then(() => this.props.reload_tables());\n\n\n    }\n\n    render() {\n\n        return(\n            <div>\n\n                <Modal show ={this.state.show}  dialogClassName=\"modal-xl\" role=\"document\"\n                >\n                    <Modal.Header>Case Assessment</Modal.Header>\n                    <Modal.Body>\n\n                        {this.showDrEditView()}\n\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.props.ShowAssessmentPageModalHandle}>\n                            Close\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n\n        );\n    }\n\n}","import React from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\nimport {Payment_Form} from './payment/payment_form';\nimport {Button, Container, Modal} from 'react-bootstrap';\nimport {FullViewCase} from \"./case_related/fullViewCase\";\nimport {DrWritesSecondOpinion} from './case_related/drWritesSecondOpinion';\nimport 'bootstrap/dist/css/bootstrap.css';\nconst {SearchBar} = Search;\n\n//Generates the layout for each type of case management table for user\nexport class GenerateSortableTable extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            parsedJSONObj: [], //this array will have everything parsedJSONObj and will include a url to caseID and cancel buttons\n            error: null,\n            showModal: false,\n            record_assessment_id: null,\n            showAssessmentPageModal: false,\n            showFullCasePageModal: false,\n            caseDetailForFullView: null,\n            isPaymentFormRendering: null,\n            paymentFormDetail: null\n        };\n\n        this.recordID = null;\n        this.ShowAssessmentPageModalHandle = this.ShowAssessmentPageModalHandle.bind(this);\n    }\n\n    componentDidMount()\n    {\n\n    }\n\n    handleModal(status, record_assessment_id)\n    {\n\n\n        this.setState({\n            showModal: status,\n            record_assessment_id: record_assessment_id\n        })\n\n    }\n\n    CloseModalHandle()\n    {\n        //Closes the modal\n        this.handleModal(false, null);\n        //Refreshes Page\n        //window.location.reload(false);\n        this.LoadTables();\n\n    }\n\n    CaseCancellationHandle(record_assessment_id)\n    {\n\n\n        //send to backend this.state.parsedJSONObj.record_id for deletion\n\n        //Call in fetch to delete case with id\n\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\"record_assessment_id\": record_assessment_id,\n                                        \"assessment\": \"\", \"status\": \"Cancelled\"})\n        };\n\n        fetch(\"http://52.247.220.137:80/update_pending_records\", requestOptions)\n            .then(response=>response.text())\n            .then(text => {\n                this.LoadTables();\n                console.log(text)});\n        //Close Modal\n        this.CloseModalHandle();\n        //Refreshes page\n        //window.location.reload(false);\n        this.LoadTables();\n\n\n    }\n\n\n    ConfirmCancelButtonHandle(record_assessment_id)\n    {\n        //Ask user to confirm\n        return(\n            <div>\n\n                <Modal show = {this.state.showModal}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        Are you sure you want to delete this case?\n\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Button onClick={()=>{this.CaseCancellationHandle(record_assessment_id)}}>Yes</Button>\n                        <Button onClick={()=>{this.CloseModalHandle()}}>No</Button>\n\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        )\n\n    }\n\n    componentDidMount() {\n\n        this.LoadTables();\n    }\n\n    ShowFullCaseHandle(details)\n    {\n        this.setState(\n            {\n                showFullCasePageModal: !this.state.showFullCasePageModal,\n                caseDetailForFullView: details\n            }\n        )\n    }\n\n    GetFullCaseView(details){\n        console.log(details);\n        return(<div>\n\n            <Modal show = {this.state.showFullCasePageModal}\n                   size = {'xl'}\n            >\n\n                <Modal.Header>\n                    <h1>Full Case View</h1>\n                    <Button style={{left: 0}}onClick={()=>{this.setState({showFullCasePageModal: !this.state.showFullCasePageModal})}}>\n                        Close\n                    </Button>\n                </Modal.Header>\n                <Modal.Body style={{'max-height': 'calc(100vh - 210px)', 'overflow-y': 'auto'}}>\n                    <Container >\n                        <FullViewCase caseDetails={this.state.caseDetailForFullView} />\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer>\n\n                </Modal.Footer>\n            </Modal>\n\n        </div>);\n        console.log(\"bye\");\n    }\n\n    LoadTables()\n    {\n        fetch(this.props.incomingData.URL_for_Fetch, this.props.incomingData.requestOptions)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let l = result.length;\n                    for (let i = 0; i < l; i++) {\n                        result[i].viewFullCaseButton = <Button onClick={\n\n                            ()=>{this.ShowFullCaseHandle(result[i], true)}\n                        }>View Case</Button>\n\n                        if (result[i].status == \"pending\" && !this.props.userInfo.phy_id) {\n                            result[i].cancelButton = <Button onClick={() => {\n\n                                this.handleModal(true, result[i].record_assessment_id)\n\n                            }}>Cancel</Button>\n\n                            result[i].payButton = <Button onClick={() => this.setState({\n                                isPaymentFormRendering: !this.state.isPaymentFormRendering,\n                                paymentFormDetail: result[i]\n                            })\n\n\n                            }>Pay</Button>\n                        }\n                        else if (result[i].status == \"pending\" && this.props.userInfo.phy_id){\n                            result[i].cancelButton = <Button onClick={() => {\n                                this.handleModal(true, result[i].record_assessment_id)\n\n                            }}>Cancel</Button>\n                            result[i].acceptButton = <Button onClick={() => {\n                                fetch(\"http://52.247.220.137/accept_pending_record\",\n                                    {\n                                        method: 'PUT',\n                                        headers: {'Content-Type': 'application/json'},\n                                        body: JSON.stringify({\"record_assessment_id\": result[i].record_assessment_id})\n                                    }).then(() => alert(\"accepted!\"))\n                                    .then(() => {\n                                        this.LoadTables();\n                                    });\n                            }}>Accept</Button>\n\n                        }\n                        else if(result[i].status == \"Awaiting Payment\" && !this.props.userInfo.phy_id)\n                        {\n                            result[i].payButton = <Button onClick={() => this.setState({\n                                    isPaymentFormRendering: !this.state.isPaymentFormRendering,\n                                    paymentFormDetail: result[i]\n                                })\n\n\n                            }>Pay</Button>\n\n                        }\n                        else if(result[i].status == \"Diagnosing\" && this.props.userInfo.phy_id) {\n\n                            result[i].createAssessmentButton = <Button onClick={() => {\n                                this.recordID = result[i].record_assessment_id;\n                                this.setState(\n                                    {\n                                        showAssessmentPageModal: true\n                                    }\n                                )\n                            }\n                            }>Create Assessment</Button>\n                        }\n\n                    }\n                    this.setState({\n                        parsedJSONObj: result\n                    })\n                },\n\n                (error) => {\n                    console.log(\"Error with JSON retrieval for Client Ongoing Case Table.\");\n                    console.log(error.data);\n\n                }\n            );\n    }\n\n    ShowAssessmentPageModalHandle()\n    {\n        this.setState(\n            {\n                showAssessmentPageModal: !this.state.showAssessmentPageModal\n            }\n        )\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.state.isPaymentFormRendering && <Payment_Form caseDetail={this.state.paymentFormDetail}/>}\n                {this.state.showFullCasePageModal && this.GetFullCaseView()}\n\n                {this.ConfirmCancelButtonHandle(this.state.record_assessment_id)}\n                <Container style={{background: `rgba(255, 255, 255, 0.9)`}}>\n                    { this.state.showAssessmentPageModal &&\n                        <DrWritesSecondOpinion recordID={this.recordID}\n                                               phy_id={this.props.userInfo.phy_id}\n                                               showAssessmentPageModal={this.state.showAssessmentPageModal}\n                                               ShowAssessmentPageModalHandle = {this.ShowAssessmentPageModalHandle}\n                                               reload_tables={() => this.LoadTables()}\n                                                                    />\n                    }\n                    <ToolkitProvider\n                        keyField=\"id\"\n                        data={ this.state.parsedJSONObj }\n                        columns={ this.props.incomingData.columns }\n                        defaultSorted={ this.props.incomingData.defaultSorted }\n                        columnToggle\n                        search\n                    >\n                        {\n                            props => (\n                                <div>\n                                    <h3>Search:</h3>\n                                    <SearchBar { ...props.searchProps } />\n                                    <hr />\n                                    <BootstrapTable\n                                        { ...props.baseProps }\n                                    />\n                                </div>\n                            )\n                        }\n                    </ToolkitProvider>\n                </Container>\n\n            </div>\n        );\n    }\n}","import React, { useState, useCallback } from 'react'\nimport { useTransition, animated } from 'react-spring'\nimport '../../css/animatedBackground.scss';\nimport {GenerateSortableTable} from '../generateSortableTable';\n\n//Animates a chosen case management table when pages loads\n//parameter is the case management that will be animated\nexport function SlidePageTransitionAnimation(tableSettings) {\n\n    const [index, set] = useState(0)\n    const onClick = useCallback(() => set(state => (state + 1) % 2), [])\n    const transitions = useTransition(index, p => p, {\n        from: { opacity: 0, transform: 'translate3d(100%,0,0)' },\n        enter: { opacity: 1, transform: 'translate3d(0%,0,0)' },\n        leave: { opacity: 0, transform: 'translate3d(-50%,0,0)' },\n    })\n\n    let pages = [\n        ({ style }) => <animated.div style={{ ...style}}><GenerateSortableTable userInfo = {tableSettings.userInfo} incomingData={tableSettings.incomingData} /></animated.div>,\n        ({ style }) => <animated.div style={{ ...style}}><GenerateSortableTable  userInfo = {tableSettings.userInfo} incomingData={tableSettings.incomingData} /></animated.div>,\n\n    ]\n\n    return (\n        <div className=\"simple-trans-main\">\n            {transitions.map(({ item, props, key }) => {\n                const Page = pages[item]\n                return <Page key={key} style={props} />\n            })}\n\n        </div>\n    )\n}\n\n","import React from 'react';\nimport {SlidePageTransitionAnimation} from '../animations/ani_reload_mgmt_table';\nimport './caseManagement/caseManagement.css';\n\n//Generates a case management table for a clients so they can interact with the cases belonging to them\nexport class ClientTable_OnGoing extends React.Component\n{\n\n    constructor(props) {\n        super(props);\n        console.log(\"GET DEEZ PROPS for Patient\");\n        console.log(props);\n        this.data={\n            is_patient: true\n        };\n\n        this.data.defaultSorted = [{\n            dataField: 'id',\n            order: 'desc'\n        }];\n\n        this.data.columns = [{\n            dataField: 'phy_name',\n            text: 'Doctor',\n            sort: true\n        }, {\n            dataField: 'comment',\n            text: 'Original Diagnosis',\n            sort: true\n        }, {\n            dataField: 'assessment',\n            text: 'Secondary Diagnosis',\n            sort: true\n        }, {\n            dataField: 'completion_dt',\n            text: 'Date Completed',\n            sort: true\n        }, {\n            dataField: 'create_dt',\n            text: 'Date Created',\n            sort: true\n        }, {\n            dataField: 'status',\n            text: 'Case Status',\n            sort: true\n        }, {\n            dataField: 'cancelButton',\n            text: 'Cancel',\n            sort: false\n        },{\n            dataField: 'payButton',\n            text: 'Payment',\n            sort: false\n        }, {\n            dataField: 'viewFullCaseButton',\n            text: 'View Case',\n            sort: false\n        }];\n\n        this.data.requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"pat_id\": this.props.userInfo.pat_id})\n        };\n        this.data.URL_for_Fetch = \"http://52.247.220.137/get_all_patient_records\";\n        this.data.userInfo = this.props.userInfo;\n    }\n\n    render() {\n        console.log(\"AAAAdata from client_ongoing\");\n        console.log(this.data);\n        console.log('THIS IS PROPS');\n        console.log(this.props.userInfo.pat_id);\n        return (\n            <div>\n                <div className={\"CaseMgmtFixedBackgroundImg\"} />\n                <SlidePageTransitionAnimation userInfo = {this.props.userInfo} incomingData={this.data} />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport {ClientTable_OnGoing} from './clientTable_OnGoing';\n\n//Renders the UI for client case management table\nexport class ClientCaseManagement extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n\n    }\n\n\n\n    render() {\n      console.log(\"from Client Case Management modeID = \" + this.props.userInfo.modeID);\n      console.log(\"from Client Case Management userID = \" + this.props.userInfo.userID);\n\n\n      return(\n          <div>\n              <div className={\"CaseMgmtFixedBackgroundImg\"} />\n              <h2 style={{zIndex: \"50\", width:\"100%\", position: \"fixed\", marginBottom:\"10%\",\n                  color: \"white\", textAlign: 'center',\n                  background: `rgba(0,0,0,0.9)`}}><u>Patient Case Management</u></h2>\n              <div style={{height:\"40px\"}}/>\n              <ClientTable_OnGoing userInfo = {this.props.userInfo}/>\n\n          </div>\n      );\n  }\n};\n\n//   <ClientTable_Completed userInfo = {this.props.userInfo}/>","import React from 'react';\nimport './caseManagement/caseManagement.css';\n\nimport {GenerateSortableTable} from '../generateSortableTable';\n\n//Generates a case management table where physicians can view cases involving them\nexport class DrCaseManagement extends React.Component\n{\n\n    constructor(props) {\n        super(props);\n        console.log(\"PROPS FOR DR CASE MANAGEMENT\");\n        console.log(props);\n        this.data = {\n            is_patient: false\n        };\n\n        this.data.defaultSorted = [{\n            dataField: 'id',\n            order: 'desc'\n        }];\n\n        this.data.columns = [{\n            dataField: 'id',\n            text: 'Case ID',\n            sort: true\n        }, {\n            dataField: 'pat_name',\n            text: 'Patient Name',\n            sort: true\n        }, {\n            dataField: 'comment',\n            text: 'Original Diagnosis',\n            sort: true\n        }, {\n            dataField: 'assessment',\n            text: 'Secondary Diagnosis',\n            sort: true\n        }, {\n            dataField: 'completion_dt',\n            text: 'Date Completed',\n            sort: true\n        }, {\n            dataField: 'create_dt',\n            text: 'Date Created',\n            sort: true\n        }, {\n            dataField: 'status',\n            text: 'Case Status',\n            sort: true\n        }, {\n            dataField: 'cancelButton',\n            text: 'Cancel',\n            sort: false\n        }, {\n            dataField: 'acceptButton',\n            text: 'Accept',\n            sort: false\n        }, {\n            dataField: 'createAssessmentButton',\n            text: 'Assessment',\n            sort: false\n        },{\n            dataField: 'viewFullCaseButton',\n            text: 'View Case',\n            sort: false\n        }\n        ];\n\n        this.data.requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": this.props.userInfo.phy_id})\n        };\n        this.data.URL_for_Fetch = \"http://52.247.220.137/get_all_physician_records\";\n        this.data.userInfo = this.props.userInfo;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={\"CaseMgmtFixedBackgroundImg\"} />\n                <GenerateSortableTable incomingData = {this.data} userInfo={this.props.userInfo}/>\n            </div>\n        );\n    }\n}","import React, { useState, useCallback } from 'react'\nimport { useTransition, animated } from 'react-spring'\nimport '../../css/animatedBackground.scss';\n\n//Have an object slide in from a side of the screen\n//incomingFuction -> parameters for the functional components that will be animated\n//angle -> the side of which the functional component will slide in\nexport function SlidePageTransitionAnimation(incomingFunction, angle) {\n\n    const [index, set] = useState(0)\n    const onClick = useCallback(() => set(state => (state + 1) % 1), []);\n    let eA = \"100%\", eB = \"0%\", eC = \"0\";\n    let fA = \"0%\", fB = \"0\", fC = \"0\";\n\n    if(angle == \"right\")\n    {\n\n        eA = \"-100%\";\n        eB = \"0%\";\n        eC = \"0\";\n\n        fA = \"0%\";\n        fB = \"0\";\n        fC = \"0\";\n\n    }\n    else if(angle == \"up\")\n    {\n        eA = \"0%\";\n        eB = \"100%\";\n        eC = \"0\";\n\n        fA = \"0%\";\n        fB = \"0\";\n        fC = \"0\";\n\n    }\n    else if(angle == \"down\")\n    {\n        eA = \"0%\";\n        eB = \"-100%\";\n        eC = \"0\"\n\n        fA = \"0%\";\n        fB = \"0\";\n        fC = \"0\";\n    }\n\n    let transitions = useTransition(index, p => p, {\n        from: { opacity: 0, transform: `translate3d(${eA},${eB},${eC})` },\n        enter: { opacity: 1, transform: `translate3d(${fA},${fB},${fC})` },\n        leave: { opacity: 0, transform: 'translate3d(0%,0%,0)' },\n    })\n\n    let pages = [\n        ({ style }) => <animated.div style={{ ...style,background: `rgba(0, 0, 0, 0)` }}>{incomingFunction()}</animated.div>\n\n    ]\n\n    return (\n        <div className=\"simple-trans-main\">\n            {transitions.map(({ item, props, key }) => {\n                const Page = pages[item]\n                return <Page key={key} style={props} />\n            })}\n\n        </div>\n    )\n}\n\n","import React from 'react';\nimport {Container, Col, Row, Form, Button} from 'react-bootstrap';\nimport {SlidePageTransitionAnimation} from './animations/ani_slideIn';\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './user_related/userRelatedCSS/contactus.css';\n\n//A contact technical support page where you can email the techsupport\nexport function Contact()\n{\n\n    const techsupport_email = 'secondchance_secondchance@engineer.com';\n\n\n    function ContactUsForm(){\n        return(\n            <div className={\"ContactUs_Form\"}>\n                <div style={{height: \"75px\"}} />\n                <h1  style={{textAlign: 'center'}}>Contact Us for Tech Support</h1>\n                <Container className=\"col-md-9 mb-md-0 mb-5\"  style={{width:\"500px\", margin:\"auto\"}}>\n\n                    <Form action = { `mailto:${techsupport_email}`} method={ \"post\"}\n                          encType={ \"text/plain\" } style ={{border:\"0px\"}}>\n                        <div style={{height:\"30px\"}}/>\n\n                        <Row>\n                            <Form.Group controlId={\"emailContact\"} style={{paddingLeft:\"10%\"}}>\n                                <Form.Label style={{color:\"white\"}}>Email</Form.Label>\n                                <Form.Control as={\"input\"} name={  \"Recipient's Email \" }\n                                              className={  \"form-control\" } placeholder={\"name@example.com\"} style={{width:\"150%\"}} required/>\n                            </Form.Group>\n                        </Row>\n                        <Row>\n                            <Form.Group controlId={\"nameContact\"} style={{paddingLeft:\"10%\"}}>\n                                <Form.Label style={{color:\"white\"}}>Name</Form.Label>\n                                <Form.Control as={\"input\"} type={ \"text\" } name={ \"From \"} className={ \"form-control\"}\n                                              placeholder={\"Your fullname\"} style={{width:\"150%\"}} required/>\n                            </Form.Group>\n                        </Row>\n\n                        <Row>\n                            <Form.Group controlId={\"messageContact\"} style={{paddingLeft:\"10%\"}}>\n                                <Form.Label style={{color:\"white\"}}>Message</Form.Label>\n\n                                <Form.Control name={\"Message\"} as={\"textarea\"} rows={5} cols={100}\n                                              placeholder={\"Your message...\"} required/>\n                            </Form.Group>\n\n                        </Row>\n\n\n                        <Button style={{borderLeft:\"10%\", marginLeft:\"9%\", paddingLeft:\"-10%\"}} as={\"input\"} type={  \"submit\"} name = { \"\" } />\n\n                    </Form>\n\n\n                </Container>\n            </div>\n        );\n    }\n\n    function showBackgroundImage()\n    {\n        return (<div className={\"ContactUsFixedBackgroundImg\"} />);\n    }\n\n    return(\n        <div>\n\n            {SlidePageTransitionAnimation(showBackgroundImage, \"left\")}\n            {SlidePageTransitionAnimation(ContactUsForm, \"right\")}\n\n        </div>\n    );\n\n};\n\n","import React from 'react';\nimport {Button, Form, Col, Row, Container, Collapse, DropdownButton, ButtonGroup, Dropdown} from 'react-bootstrap';\nimport '../../css/hoverForText.css';\nimport {MDBInput} from 'mdbreact';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './userRelatedCSS/edit.css';\n\n//Generates an edit profile page for a user to change their private information\nexport class DrEdit extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.data = {};\n        this.data.oldBio = this.props.pat_medical_history;\n\n\n        this.state =\n            {\n                bio: '',\n                email: '',\n                password: '',\n                repassword: '',\n                age: '',\n                name: '',\n                npi: '',\n                sex: '',\n                picture: '',\n                speciality: '',\n                hospitalNameArr: [\n                    {label:\"Cleveland Clinic\", value:\"Cleveland Clinic\"},\n                    {label: \"Johns Hopkins Hospital\", value: \"Johns Hopkins Hospital\"},\n                    {label: \"Mayo Clinic\", value: \"Mayo Clinic\"},\n                    {label: \"UCLA Medical Center\", value: \"UCLA Medical Center\"}\n                ],\n                currentHospital: 'Johns Hopkins Hospital',\n                passwordAuthorization: '',\n                showOldBio: false,\n                assignJSON: [],\n                isLoading: false,\n                isUploaded: false\n            };\n\n\n\n\n\n    }\n\n    componentDidMount() {\n        console.log(\"this from drEdit.js\");\n        console.log(this.props);\n\n        if(this.props.userMode == \"patient\") {\n            this.data.oldBio = this.props.pat_medical_history;\n\n            this.setState(\n                {\n                    bio: this.props.userInfo.pat_medical_history,\n                    email: this.props.userInfo.email,\n                    password: this.props.userInfo.password,\n                    repassword: this.props.userInfo.password,\n                    name: this.props.userInfo.pat_name,\n\n                    picture: '',\n\n                    currentHospital: 'Johns Hopkins Hospital',\n                    passwordAuthorization: '',\n                    assignJSON: [],\n                    isLoading: false,\n                    sex: 'm'\n                }\n            )\n        }\n        //Handles multiple namings\n        else if(this.props.userMode == \"physician\" || this.props.userMode == \"doctor\" )\n        {\n\n            this.data.oldBio = this.props.pat_medical_history;\n\n            this.setState(\n                {\n                    bio: this.props.userInfo.phy_bio,\n                    email: this.props.userInfo.email,\n                    password: this.props.userInfo.password,\n                    repassword: this.props.userInfo.password,\n                    name: this.props.userInfo.phy_name,\n                    npi: this.props.userInfo.npi,\n                    picture: '',\n                    speciality: this.props.userInfo.phy_qual,\n                    currentHospital: 'Johns Hopkins Hospital',\n                    passwordAuthorization: '',\n                    assignJSON: [],\n                    isLoading: false,\n                    sex: 'm'\n                }\n            )\n\n\n        }\n\n        //Insert endpoint for gathering user info here in Phase II for updated information\n    }\n\n\n\n    iter_over_items(){\n        let inputs = document.getElementById(\"myForm\").elements;\n\n        let to_send = {};\n\n        for (var i = 0; i < inputs.length; i++) {\n            let element = inputs[i];\n\n            to_send[element.name] = element.value;\n\n\n        }\n\n\n        return to_send;\n    }\n\n    setDefaultHospital = (event) =>\n    {\n        let indxCurrentHospital = 0;\n        const currHospitalName = this.state.currentHospital;\n\n        //Checks for the index of current hospital for default value of select menu right below\n        {this.state.hospitalNameArr.map(function(hospitalName, index){\n            if(currHospitalName === hospitalName.value)\n            {\n                indxCurrentHospital = index;\n            }\n        })}\n\n        return(\n            <Form.Label style={{color: \"white\"}}>\n                Select Clinic:\n\n                <br/>\n\n                <Form.Control as={\"select\"} name = \"selectedHospitalName\"\n                              defaultValue={this.state.hospitalNameArr[indxCurrentHospital].value}\n                              onChange={this.handleInputChange}>\n                    {this.state.hospitalNameArr.map(function(hospitalName, index){\n                        return <option key={index} value={hospitalName.value}>{hospitalName.value}</option>\n                    })}\n\n\n                </Form.Control>\n\n\n            </Form.Label>\n        );\n\n    }\n\n    handleShowOldBio(showOldBioNew)\n    {\n        console.log(\"Before \"+ this.state.showOldBio)\n\n        this.setState({\n            showOldBio: !showOldBioNew\n        });\n\n        console.log(\"After \"+ this.state.showOldBio)\n    }\n\n    handleInputChange = (event) => {\n\n        this.setState(\n            {\n\n                [event.target.name]:event.target.value\n\n            })\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if(this.state.age < 0)\n        {\n            alert(\"Age cannot be \" + this.state.age);\n        }\n        else {\n            console.log(\"I am in handleSubmit(event) for from here is \" + this.props.userMode)\n\n            if (this.state.passwordAuthorization == this.props.userInfo.password) {\n                let reloadedData = null;\n                if (this.props.userMode == \"patient\") {\n\n                    //Run endpoint for submitting changes to backend\n                    //\"username\", \"age\", \"sex\", \"medical_history\", \"email\", \"password\", \"pat_id\", \"name\"\n                    console.log(\"DUUUUUE NOTGETTING PAT AGE!!\");\n                    console.log(this.state);\n                    console.log(\"thiiiss props\");\n                    console.log(this.props);\n                    const requestOptions = {\n                        method: 'PUT',\n                        headers: {'Content-Type': 'application/json'},\n                        body: JSON.stringify({\n                            \"username\": this.props.userInfo.username,\n                            \"pat_name\": this.state.name,\n                            \"pat_age\": this.state.age,\n                            \"pat_sex\": this.state.sex,\n                            \"pat_medical_history\": this.state.bio,\n                            \"email\": this.state.email,\n                            \"password\": this.props.userInfo.password,\n                            \"pat_id\": this.props.userInfo.pat_id\n                        })\n                    };\n\n                    fetch(\"http://52.247.220.137:80/client\", requestOptions)\n                        .then(response => response.json())\n                        .then(response => {\n                            console.log(response);\n\n                        })\n\n\n\n\n\n                }\n                //Handles multiple namings\n                else if (this.props.userMode == \"physician\" || this.props.userMode == \"doctor\") {\n\n                    console.log(\"Testing_physician PUT\");\n\n                    const requestOptions = {\n                        method: 'PUT',\n                        headers: {'Content-Type': 'application/json'},\n                        body: JSON.stringify({\n                            \"npi\": this.props.userInfo.npi,\n                            \"username\": this.props.userInfo.username,\n                            \"phy_name\": this.state.name,\n                            \"phy_bio\": this.state.bio,\n                            \"phy_addr\": this.props.userInfo.phy_addr,\n                            \"phy_qual\": this.state.speciality,\n                            \"reviewCnt\": 0,\n                            \"email\": this.props.userInfo.email,\n                            \"password\": this.props.userInfo.password,\n                            \"phy_id\": this.props.userInfo.phy_id,\n                            \"hospital_id\": this.props.userInfo.hospital_id\n                        })\n                    };\n\n                    fetch(\"http://52.247.220.137:80/physician\", requestOptions)\n                        .then(response => console.log(response));\n\n\n                }\n\n\n                console.log(\"Look for state\");\n                console.log(this);\n                alert(\"Changes have been submitted.\");\n            } else {\n                alert(\"Confirmation password does not match. Test Mode: Try \" + this.props.userInfo.password);\n            }\n\n        }\n    }\n\n    SelectSexHandle(selectedSex)\n    {\n        this.setState(\n            {\n                sex: selectedSex\n            }\n        )\n        console.log(this.state.sex);\n    }\n\n    EditPageBody = () =>\n    {\n        return(\n            <div>\n                <div style={{zIndex:\"-1\"}} className={\"FixedBackgroundImgEdit\"} />\n                <h2 style={{zIndex: \"50\", width:\"100%\", position: \"fixed\", marginBottom:\"10%\",\n                    color: \"white\", textAlign: 'center',\n                    background: `rgba(0,0,0,0.9)`}}><u>Edit Personal Info</u></h2>\n                {\n                    !this.state.isLoading &&\n                    <Container style={{background: `rgba(0,0,0,0.8)`, paddingTop:\"0%\", paddingBottom:\"5%\",\n                        paddingLeft:\"5%\", paddingRight:\"5%\"}}>\n\n                        <Form onSubmit={this.handleSubmit} style={{fontSize:\"30px\", fontWeight:\"bold\"}}>\n                            <br/>\n                            <Form.Label style={{color: \"white\"}}>\n                                Email:\n                                <Form.Control as={\"input\"}\n                                              name=\"email\"\n                                              type=\"text\"\n                                              onChange={this.handleInputChange}\n                                              placeholder={this.state.email}\n\n\n                                />\n                            </Form.Label>\n\n\n                            <br/>\n                            <Form.Label style={{color: \"white\"}}>\n                                Full Name:\n                                <Form.Control as={\"input\"}\n                                              name=\"name\"\n                                              type=\"text\"\n                                              placeholder={this.state.name}\n                                              onChange={this.handleInputChange}\n\n                                />\n                            </Form.Label>\n\n                            <br />\n\n                            <Form.Label style={{color: \"white\"}}>\n                                Age:\n                                <Form.Control as={\"input\"}\n                                              name=\"age\"\n                                              type=\"number\"\n                                              placeholder={this.state.age}\n                                              onChange={this.handleInputChange}\n\n                                />\n                            </Form.Label>\n\n\n                            <br/>\n\n\n                            {this.setDefaultHospital()}\n\n\n\n\n                            <div>\n                                {\n                                    <DropdownButton\n                                        as={ButtonGroup}\n                                        name={\"selectSex\"}\n                                        title={\"Choose Gender\"}\n                                    >\n                                        <Dropdown.Item onClick={()=>this.SelectSexHandle(\"m\")}>Male</Dropdown.Item>\n                                        <Dropdown.Item onClick={()=>this.SelectSexHandle(\"f\")}>Female</Dropdown.Item>\n                                    </DropdownButton>\n                                }\n                            </div>\n\n\n                            { ( (this.props.userMode == 'physician') || (this.props.userMode == 'doctor') &&\n                                <Form.Label  style={{color: \"white\"}}>\n                                    Specialty:\n                                    <Form.Control as={\"input\"}\n                                                  name=\"speciality\"\n                                                  type=\"text\"\n                                                  placeholder={this.state.speciality}\n                                                  onChange={this.handleInputChange}\n\n                                    />\n                                </Form.Label>\n                            )}\n\n                            <br/>\n                            <Form.Label style={{color: \"white\"}}>Bio:</Form.Label>\n                            <Form.Control as=\"textarea\" name=\"bio\" value={this.state.bio} ref=\"newText\"\n                                          style={{rows: \"10\", cols: \"10\"}} onChange={this.handleInputChange}></Form.Control>\n\n\n                            <br/>\n                            <Form.Label>\n                                <MDBInput as={\"input\"}\n                                          name=\"passwordAuthorization\"\n                                          label={\"Enter Password to submit changes:\"}\n                                          type=\"password\"\n                                          placeholder={this.state.passwordAuthorization}\n                                          onChange={this.handleInputChange}\n                                          style={{\n                                              width: \"100%\", padding: \"12px 40px\",\n                                              margin: \"auto\"\n                                          }}\n\n                                          required/>\n                            </Form.Label>\n                            <br/>\n                            <Button type=\"submit\" value={this.state.value}>Submit</Button>\n                        </Form>\n                    </Container>\n\n                }\n\n            </div>\n        )\n    }\n\n\n    render() {\n\n        return (\n\n            <div>\n                {this.state.isUploaded && this.EditPageBody()}\n                {!this.state.isUploaded && this.EditPageBody()}\n            </div>\n\n        );\n    }\n}","import React from 'react';\nimport {Row, Col, Container} from 'react-bootstrap';\n\nimport facebook_icon from './social_media_icons/facebook.PNG';\nimport twitter_icon from './social_media_icons/twitter.PNG';\nimport linkin_icon from './social_media_icons/linkin.PNG';\n\n//A message alert of when you click on a social media icon within this component\nfunction FakeMessage()\n{\n    return(alert(\"This is a FAKE company Silly!\"));\n}\n\n//Generates a block of information of our fake company SecondChance for the homepage\nexport function ContactUs_HomePage()\n{\n    const widthHeightIcon = \"55px\";\n    return(\n      <Container>\n          <h3>Contact Us</h3>\n          <Row>\n\n\n              <p>\n                  55555 University Pkwy,\n                  <br />\n                  San Bernardino, CA 92407\n                  <br />\n                  (555) 555-5555\n              </p>\n\n          </Row>\n\n          <Row style={{height: widthHeightIcon, width:200}}>\n\n              <Col style={{paddingLeft: \"0px\", marginLeft: \"-10px\",height:widthHeightIcon, width:widthHeightIcon}}>\n                  <img src={twitter_icon} style={{height:widthHeightIcon, width:widthHeightIcon}} onClick={()=>FakeMessage()}/>\n              </Col>\n              <Col style={{height:widthHeightIcon, width:widthHeightIcon}}>\n                  <img src={facebook_icon} style={{height:widthHeightIcon, width:widthHeightIcon}} onClick={()=>FakeMessage()}/>\n              </Col>\n              <Col style={{height:widthHeightIcon, width:widthHeightIcon}}>\n                  <img src={linkin_icon} style={{height:widthHeightIcon, width:widthHeightIcon}} onClick={()=>FakeMessage()}/>\n              </Col>\n          </Row>\n\n\n      </Container>\n    );\n\n}","import React from 'react';\nimport {Carousel, Container, Row, Col} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/carousel.css';\n\nimport pat_pic_1 from '../pictures/patient_avatar/pat_avatar_1.jpg';\nimport pat_pic_2 from '../pictures/patient_avatar/pat_avatar_2.jpg';\nimport pat_pic_3 from '../pictures/patient_avatar/pat_avatar_3.jpg';\nimport pat_pic_4 from '../pictures/patient_avatar/pat_avatar_4.jpg';\nimport pat_pic_5 from '../pictures/patient_avatar/pat_avatar_5.jpg';\nimport pat_pic_6 from '../pictures/patient_avatar/bearded_male.PNG';\nimport pat_pic_7 from '../pictures/patient_avatar/elder_woman_3.PNG';\nimport pat_pic_8 from '../pictures/patient_avatar/elderly_man.PNG';\nimport pat_pic_9 from '../pictures/patient_avatar/guy_glasses_2.PNG';\nimport pat_pic_10 from '../pictures/patient_avatar/guy_glasses.PNG';\nimport pat_pic_11 from '../pictures/patient_avatar/lady_1.PNG';\nimport pat_pic_12 from '../pictures/patient_avatar/male_tux.PNG';\nimport pat_pic_13 from '../pictures/patient_avatar/old_lady_1.PNG';\nimport pat_pic_14 from '../pictures/patient_avatar/old_lady_2.PNG';\nimport pat_pic_15 from '../pictures/patient_avatar/old_lady_4.PNG';\nimport pat_pic_16 from '../pictures/patient_avatar/old_lady_5.PNG';\nimport pat_pic_17 from '../pictures/patient_avatar/pat_avatar_6.png';\n\n\n/*\n    Img_links:\n        https://i.ibb.co/wM6twyZ/bg-slide-1.png - https://ibb.co/72yhRvx\n        https://i.ibb.co/Kb6swg6/bg-slide-2.png - https://ibb.co/ckJ8L9J\n        https://i.ibb.co/9qJFqwf/bg-slide-3.jpg - https://ibb.co/wKT9KJb\n        https://i.ibb.co/BKYZhjF/bg-slide-4.png - https://ibb.co/3YPNxWQ\n        https://cdn.technadu.com/wp-content/uploads/2018/07/VPN-Encryption-Featured-1536x864.jpg\n */\n\n//Reviews from current and former users of SecondChance to be displayed on the homepage\nexport class Testimonial_Slider extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                show: false,\n\n            };\n\n        this.pic=[\n            {\n                label: 'pic_1',\n                valueTitle: 'Machiavelli Dicaprio',\n                valueURL: pat_pic_1,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'No one was able to pinpoint why I can\\'t be a nice person so I had Dr. '\n                    +'Fabien take a look at my CTs. Turns out I\\'m just an imbecile.'\n            },\n            {\n                label: 'pic_2',\n                valueTitle: 'Eva Campbell',\n                valueURL: pat_pic_2,\n                valueFileName: 'pelvis-x-ray_thumb-1-732x549.jpg',\n                valueDescription:'Absolutely INCREDIBLE! Dr. Jacobs saw my PET scan and directed me to find the proper treatment!'\n            },\n            {\n                label: 'pic_3',\n                valueTitle: 'Marc Jacobs',\n                valueURL: pat_pic_3,\n                valueFileName: 'chest-xray.jpg',\n                valueDescription: 'AMAZING! She was able to determine from my chest X-rays that I have lung cancer '\n                    + ' from working in the mines and not cigarettes! Now I can retire happy smoking!'\n            },\n            {\n                label: 'pic_4',\n                valueTitle: 'Jim Jones',\n                valueURL: pat_pic_4,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'This doc looked at my MRIs and clinically confirmed that I was a sociopath. '\n                    + 'I am going to pay him a visit in-person to give him another review. Not sure '\n                    + 'how he\\'d feel about that.'\n            },\n            {\n                label: 'pic_5',\n                valueTitle: 'Katsumi Naomi',\n                valueURL: pat_pic_5,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'I come from a small village. My doctor is also my mechanic and garbage collector. '\n                    +'He does the medical imagings and Second Chance does the diagnosing. It\\'s just healthier for me '\n                    +'this way.'\n            },\n            {\n                label: 'pic_6',\n                valueTitle: 'Jean Pierre',\n                valueURL: pat_pic_6,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'I am very active and with that has come my share of mishaps. Dr. Loyd '\n                    + 'explains exactly what is wrong and recommended what my physician should do. I sincerely trust him, '\n                    + 'his medical knowledge and his judgment.'\n            },\n            {\n                label: 'pic_7',\n                valueTitle: 'Barbara Lee',\n                valueURL: pat_pic_7,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'I absolutely love this Doctor! He is always friendly, Dr. Kim couldn\\'t be more caring.'\n            },\n            {\n                label: 'pic_8',\n                valueTitle: 'Escobar Gustavo',\n                valueURL: pat_pic_8,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'Doctor Jay had the speed of Hermes. My local doctor office is close so I '\n                    + 'decided to use Second Chance and he replied back to be within minutes! Will be using this'\n                    + ' service again.'\n            },\n            {\n                label: 'pic_9',\n                valueTitle: 'Henry Stein',\n                valueURL: pat_pic_9,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'Second Chance was quick and easy to use. My doctor insisted that my toe was '\n                    + 'not broken based on his diagnose of my X-rays. I showed it to Dr. Kent from Second Chance '\n                    + 'and he immediately advised me to head to the ER so that I would not fractured it anymore.'\n            },\n            {\n                label: 'pic_10',\n                valueTitle: 'Hans Lichtenberg',\n                valueURL: pat_pic_10,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'My English is not great. Second Chance allows me to find German speaking doctors easily.'\n            },\n            {\n                label: 'pic_11',\n                valueTitle: 'Marisol Espinoza',\n                valueURL: pat_pic_11,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'I was able to find my previous doctor that moved out of state.'\n            },\n            {\n                label: 'pic_12',\n                valueTitle: 'Tyler Gomez',\n                valueURL: pat_pic_12,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'Fantastic experience! Quick, easy to read diagnosis.'\n            },\n            {\n                label: 'pic_13',\n                valueTitle: 'Janet Meads',\n                valueURL: pat_pic_13,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'Great for avoiding the long commute.'\n            },\n            {\n                label: 'pic_13',\n                valueTitle: 'Elizabeth Parker',\n                valueURL: pat_pic_14,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'I was misdiagnosed twice by my doctors in town. Thanks to Dr. Jacobs I do not have '\n                +'to go through chemo.'\n            },\n            {\n                label: 'pic_13',\n                valueTitle: 'Rosemarie Jenkins',\n                valueURL: pat_pic_15,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'A fellow sister from my sorority recommended Second Chance! Dr. Bach was incredible!'\n            },\n            {\n                label: 'pic_16',\n                valueTitle: 'Maria Delarosa',\n                valueURL: pat_pic_16,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'Due to my condition, it\\'s very hard for me to commute. Gracias Second Chance!'\n            },\n            {\n                label: 'pic_17',\n                valueTitle: 'Terry Marcus',\n                valueURL: pat_pic_17,\n                valueFileName: 'hand-xray.jpg',\n                valueDescription: 'It took me seven tries but I can finally find a doctor that I can tolerate.'\n            },\n        ]\n    }\n\n    LoopCarouselItem()\n    {\n        const widthSz  = '1920px';\n        const heightSz = '350px';\n        const imgWidth = '50px';\n        const imgHeight = '200px';\n\n\n        return(\n            this.pic.map(function(selectedPic,index) {\n                return (\n\n                        <Carousel.Item style={{\n                            position: 'absolute',\n                            background: `rgba(0, 0, 0, ${0 * 1})`, backgroundColor: `rgba(0, 0, 0, ${0 * 1})`\n                        }}>\n                            <img\n                                className ={\"_carouselImgSize\"}\n                                key={index}\n                                src={selectedPic.valueURL}\n                                alt={selectedPic.valueFileName}\n                                style={{background: `rgba(0, 0, 0, ${0 * 1})`, backgroundColor: `rgba(0, 0, 0, ${0 * 1})`, opacity: 1}}\n                            />\n\n                            <Carousel.Caption className={\"_carouselCaption\"} style={{alignContent: 'left',\n                                position: 'absolute'\n                            }}>\n\n                                <div style={{width: '400px'}} >\n                                    <h3 style={{color:\"black\", textAlign:\"center\", width:\"600px\", paddingLeft:\"100px\"}}>{selectedPic.valueTitle}</h3>\n                                    <p className={\"ReviewMessageSize\"}>{selectedPic.valueDescription}</p>\n                                    <div style={{height: '10px'}} />\n                                </div>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n\n                );\n            })\n        );\n    }\n\n    render() {\n        return(\n            <div>\n                <table>\n                    <tr>\n                        <td>\n                            <Carousel className={\"_carouselSize\"} className={\"_carouselBackgroundColor\"} >\n                                {this.LoopCarouselItem()}\n                            </Carousel>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport {ContactUs_HomePage} from './homepage_sections/contact_us/contactus';\nimport { Parallax, Background } from 'react-parallax';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport {Testimonial_Slider} from \"./testimonial_slider\";\nimport './homepage_sections/homepage_css/fixedBackgroundImg.css';\n\n//Generates the layout for the homepage\nconst Container_IntroTitle = () => (\n    <Parallax\n        blur={{ min: -15, max: 15 }}\n        bgImageAlt=\"penn-1\"\n        strength={-200}\n        style={{\n            position: 'absolute',\n            background: `rgba(0, 0, 0, 0)`,\n        }}\n\n    >\n\n\n        <div style={{ height: '50px' }} />\n        <div style={{ backgroundColor:`rgba(0, 0, 0, 0.65)`, display: \"inline\",\n            paddingLeft:\"30px\",fontSize: 150, color:\"white\", fontWeight: 100, fontFamily:\"Arial, Helvetica, sans-serif\"}}>Second Chance. </div>\n\n        <div style={{\n            backgroundColor:`rgba(0, 0, 0, 0.65)`,\n            width:\"1000px\",\n            paddingLeft:\"30px\",fontSize: 75, color:\"white\",\n            fontWeight: 100, fontFamily:\"Arial, Helvetica, sans-serif\"}}>Physicians at your fingertips.</div>\n\n    </Parallax>\n\n);\n\nconst Container_OurStory = () => (\n\n    <Parallax\n        blur={{ min: -15, max: 15 }}\n        bgImageAlt=\"penn-1\"\n        strength={-200}\n    >\n\n        <div style={{\n            backgroundColor:`rgba(0, 0, 0, .99)`,\n            height: \"550px\", width: \"1080\",\n            paddingLeft:\"30px\", fontSize: \"25px\", color:\"white\", fontWeight: 100,\n            fontFamily:\"Helvetica, sans-serif\"}}>\n            <div style={{height: \"50px\"}} />\n            <div style={{fontWeight: \"bold\"}} className=\"RepositionTitle\">Our Story</div>\n\n            <div style={{height: \"10px\"}} />\n            <div style={{marginLeft: \"30px\", marginRight: \"30px\", paddingLeft: \"30px\", paddingRight: \"30px\"}}>\n                We started Second Chance as a small web-based service with just my brother and I and it is to say\n                that the story behind this company’s formation is a sorrow one. We lost our grandfather at a very young age\n                due to colon cancer. We come from a very small town in the Wyoming with only one medical doctor for miles\n                around. Unfortunately, our grandfather was misdiagnosed until it was too late where he finally succumbed to\n                his illness. We believed that if only he had a second diagnosis, he would have had a second chance to live\n                a fuller life. Hence is why we started up this company. Now we serve patients with hundreds of specialized\n                doctors nationwide from a mouse click away.\n            </div>\n            <br />\n            <br />\n            <div className={\"RepositionCloser\"}>Stay Safe,</div>\n            <br />\n            <div className={\"RepositionName\"}>The Lehmann Doctors</div>\n\n        </div>\n\n    </Parallax>\n\n\n\n);\n\nconst Container_SelectDoctorTitle = () => (\n    <Parallax\n        blur={{ min: -15, max: 15 }}\n        bgImageAlt=\"penn-1\"\n        strength={-200}\n        style={{\n            position: 'absolute',\n            background: `rgba(0, 0, 0, 0)`,\n        }}\n\n    >\n\n\n        <div style={{ height: '300px' }} />\n        <div style={{ backgroundColor:`rgba(0, 0, 0, 0.65)`, display: \"inline\",\n            paddingLeft:\"30px\",fontSize: 120, color:\"white\", fontWeight: 100, fontFamily:\"Arial, Helvetica, sans-serif\"}}>Pick from hundreds of doctors.</div>\n\n        <div style={{\n            backgroundColor:`rgba(0, 0, 0, 0.65)`,\n            width:\"1000px\",\n            paddingLeft:\"30px\",fontSize: 75, color:\"white\",\n            fontWeight: 100, fontFamily:\"Arial, Helvetica, sans-serif\"}}>Nationwide.</div>\n\n    </Parallax>\n\n);\n\n\n\n\nconst Container_Testimonial = () => (\n    <Parallax\n        blur={{ min: -15, max: 15 }}\n        bgImage={require('./homepage_sections/homepage_backgrounds/testimonial_slider_background_black-texture.jpg')}\n        strength={-200}\n        style={{\n            position: 'absolute',\n            background: `rgba(0, 0, 0, 0)`,\n        }}\n\n    >\n\n        <div className={\"TestimonySliderStretcher\"} />\n        <div className={\"ResizeParallax\"} />\n        <Testimonial_Slider />\n        <div style={{ height: '25px' }} />\n\n    </Parallax>\n\n);\n\nconst Container_QualificationTitle = () => (\n    <Parallax\n        blur={{ min: -15, max: 15 }}\n        bgImageAlt=\"penn-1\"\n        strength={-200}\n        style={{\n            position: 'absolute',\n            background: `rgba(0, 0, 0, 0)`,\n        }}\n\n    >\n        <div className={\"PushQualTitleDown\"} />\n        <div className={\"SameQualTitle\"}>Same qualifications  </div>\n\n        <div className={\"SafetyOfHomeMessage\"}>from the safety of your home.</div>\n\n    </Parallax>\n\n);\n\n\nconst Container_Copyright = () => (\n    <Parallax\n        blur={{ min: -15, max: 15 }}\n\n        bgImageAlt=\"penn-1\"\n        strength={-200}\n    >\n        <div style={{ height: '200px' }} />\n        <Container style={{marginLeft:\"50%\", width:\"50%\"}}>\n            <Row><ContactUs_HomePage /></Row>\n            <Row style={{marginLeft:\"-8%\", width:\"50%\"}}>© 2020 Second Chance. All rights reserved.</Row>\n        </Container>\n\n    </Parallax>\n\n);\n\n\n\nexport class Homepage extends React.Component\n{\n\n    render()\n    {\n        return(\n            <div style={{width: \"100%\"}}>\n                <Container_IntroTitle />\n                <div className={\"FixedBackgroundImg\"}></div>\n                <Container_OurStory />\n                <Container_SelectDoctorTitle />\n                <div className={\"FixedBackgroundImg3\"} />\n                <div style={{height: \"400px\", backgroundColor:\"black\"}}>\n                    <Container_Testimonial />\n                </div>\n\n                <Container_QualificationTitle />\n                <div className={\"FixedBackgroundImg2\"}></div>\n                <Container_Copyright />\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport {SlidePageTransitionAnimation} from './animations/ani_slideIn';\nimport './pricingPage.css';\nimport majorCreditCardImg from \"./payment/payment_pics/major_credit_cards_pic.png\";\n\n//generates price page to inform users/potential users of our prices\nexport function Pricing() {\n\n    function ShowBackgroundPricingImg()\n    {\n        return(<div className={\"PricingFixedBackgroundImg\"}>\n            <div className={\"approvalSeal\"} />\n            <div className={\"MoveOneSmallPriceDown\"}/>\n            <div className={\"OneSmallPriceText\"} style={{fontFamily:\"Didot\"}}>\n                One small price that will keep your piggy bank healthy!</div>\n        </div>);\n    }\n\n    function ShowBackgroundPricingInfo()\n    {\n        return(<div className={\"PricingInfoLayer\"}>\n            <div className={\"PriceText\"} style={{fontFamily:\"Didot\"}}>Only $150 per Diagnosis! </div>\n            <div style={{height:\"40%\"}} />\n            <img style={{marginLeft:\"40%\", height: \"25%\", width: \"20%\", objectFit: \"fill\"}} src={majorCreditCardImg}/>\n\n\n        </div>);\n    }\n    //Price that will keep your piggy bank healthy\n    return (\n\n        <div className={\"pageSizer\"}>\n\n            {SlidePageTransitionAnimation(ShowBackgroundPricingImg,\"down\")}\n            {SlidePageTransitionAnimation(ShowBackgroundPricingInfo,\"up\")}\n\n\n        </div>\n\n    );\n\n}\n","import React from \"react\";\nimport \"./assets/card.scss\";\nimport '../../css/makeImgUndraggable.css';\n\n//Fills out the front of the card to essential physician information\nconst FrontCard = (props) => {\n\n  return (\n    <article\n      id=\"front-card\"\n      className={`card-container ${props.class}`}\n      style={props.style}\n    >\n      <div className=\"img-item\">        </div>\n      <div className=\"text-item\">\n\n        <p>{props.user.doctorName}</p>\n        <p>{props.user.location}</p>\n        <p>{props.user.specialty}</p>\n        <img className={'imgUndraggable'} align={\"center\"} height={180} width={180} src={props.user.image} alt={\"docimg\"} />\n      </div>\n    </article>\n  );\n};\n\n//fills the back of the card with extra information of a physician\nconst BackCard = (props) => {\n\n  return (\n    <section\n      id=\"back-card\"\n      className={`card-container ${props.class}`}\n      style={props.style}\n    >\n      <h1>{props.user.about} More info</h1>\n      <div>{props.user.age} years old</div>\n      <div>NPI: {props.user.npi}</div>\n      <div>{props.user.location}</div>\n      <div>{props.user.email}</div>\n      <div>\n        <i className=\"fas fa-map-marker-alt\" />\n        {props.user.from}\n      </div>\n    </section>\n  );\n};\n\nconst cardPosition = (order, isBack, position) => {\n  if (order === 0 && (position.X || position.Y)) {\n    return {\n      display: order !== 0 && isBack ? \"none\" : \"flex\",\n      top: (position.Y / window.innerHeight) * 100 + \"%\",\n      left: (position.X / window.innerWidth) * 100 + \"%\",\n      width: `calc(300px - ${order}%)`\n    };\n  }\n  return {\n    display: order !== 0 && isBack ? \"none\" : \"flex\",\n    top: 50 + order + \"%\",\n    width: `calc(300px - ${order}%)`\n  };\n};\n\nconst showCardClass = (index, status, isBack) => {\n  if (index === 0) {\n    switch (status) {\n      case 1:\n        return isBack ? \"show-back-card\" : \"show-front-card\";\n      case 2:\n        return isBack ? \"show-front-card\" : \"show-back-card\";\n      default:\n        return \"\";\n    }\n  }\n};\n\nconst cardContainer = (props, position) => {\n  let card_list = [];\n  const maxNumberOfCards = 14;\n  props.user_data.map((val, index) => {\n  if(index < maxNumberOfCards) {\n    let mainScroll = index === 0 ? props.scroll : \"\";\n    card_list.push(\n        <FrontCard\n            user={val}\n            key={index}\n            class={\n              mainScroll + \" \" + showCardClass(index, props.show_status, false)\n            }\n            style={cardPosition(index, false, position)}\n        />,\n        <BackCard\n            user={val}\n            key={index + props.user_data.length}\n            class={mainScroll + \" \" + showCardClass(index, props.show_status, true)}\n            style={cardPosition(index, true, position)}\n        />\n    );\n  }\n    return card_list;\n  });\n  return card_list;\n};\n\nexport default cardContainer;\n","import React, {Component} from 'react';\nimport Hammer from 'react-hammerjs';\nimport cardContainer from './card_related/card';\n\n//Detects if the card was pulled to the right or left\nexport default class HammerArea extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      position: {\n        X: 0,\n        Y: 0\n      }\n\n    }\n  }\n\n  onDragStart = (e) => {\n    this.setState(() => {\n      return {\n        position: {\n          X: e.center.x,\n          Y: e.center.y\n        }\n      }\n    })\n  }\n\n  onDragEnd = (e) => {\n    if (e.deltaX < -50){\n      this.props.func_like(false);\n    } else if (50 < e.deltaX){\n      this.props.func_like(true);\n    }\n    this.setState(() => {\n      return {\n        position: {\n          X: 0,\n          Y: 0\n        }\n      }\n    })\n  }\n\n  render(){\n\n    return(\n      <Hammer\n          onPan={this.onDragStart}\n          onTap={this.props.func_show_info.bind(this)}\n          onPanEnd={this.onDragEnd}\n      >\n        <div className='card-area'>\n          {cardContainer(this.props.card_data, this.state.position)}\n        </div>\n      </Hammer>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport \"../assets/header.scss\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header>\n        <p>Our Doctors</p>\n      </header>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport HammerArea from \"../../hammer\";\nimport \"../assets/body.scss\";\nimport {Button, Modal, Col, Row, ButtonGroup} from \"react-bootstrap\";\nimport Header from \"./header\";\n\nexport default class Body extends Component {\n  constructor(props) {\n    super(props);\n\n    let dataList = this.props.drInfo;\n    console.log(dataList)\n\n    this.state = {\n      user_data: [...dataList],\n      is_moving: false,\n      show_status: 0,\n      scroll: \"\",\n        show: false,\n        helpUserIsShown: false\n\n    };\n    this.data ={}\n    this.data.cntIndexCard = 0;\n    this.data.numElements = dataList.length;\n    this.data.hadChosen = false;\n\n  }\n\n\n    helpUserInfo()\n    {\n\n\n        return(\n            <Modal show = {this.state.helpUserIsShown}\n                   size = {'xl'}\n            >\n                <Modal.Header>\n                    <h1>How to Select a Physician:</h1>\n                    <Button onClick={()=>{this.setState({helpUserIsShown: !this.state.helpUserIsShown})}}>\n                        Close\n                    </Button>\n                </Modal.Header>\n                <Modal.Body>\n                    <h3 style={{marginBottom: \"10px\"}}>Tip 1: Click & Drag the image to the LEFT to swap for a different doctor.</h3>\n                    <h3>Tip 2: Click & Drag the image to the RIGHT to select that doctor to diagnose your case.</h3>\n                </Modal.Body>\n                <Modal.Footer>\n\n                </Modal.Footer>\n            </Modal>\n        )\n\n    }\n\n    handleModal()\n    {\n        this.setState({show:!this.state.show})\n    }\n\n    ShowContentsOfBody()\n    {\n\n        return(\n            <div>\n                <div id=\"main-container\">\n                    <HammerArea\n                        card_data={this.state}\n                        func_like={(is_like) => this.isLike(is_like)}\n                        func_show_info={() => this.isShowBackToggle()}\n                    />\n                    <div className=\"button-area\">\n                        <button\n                            onClick={this.isLike.bind(this, false)}\n                            disabled={this.state.is_moving}\n                        >\n                            <Button href=\"#\">Next</Button>\n                        </button>\n                        <button\n                            onClick={this.isShowBackToggle.bind(this)}\n                            disabled={this.state.is_moving}\n                        >\n                            <Button href=\"#\">Info</Button>\n                        </button>\n                        <button\n                            onClick={this.isLike.bind(this, true)}\n                            disabled={this.state.is_moving}\n                        >\n                            <Button href=\"#\">Select</Button>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    RunModalPhysician()\n    {\n\n        return(\n            <div>\n                {this.helpUserInfo()}\n                <Button onClick={()=>{this.handleModal()}}>\n                    Select Physician\n                </Button>\n\n\n                <Modal show = {this.state.show}\n                       size = {'xl'}\n                >\n                    <Modal.Header>\n                        <h1>Select Secondary Physician</h1>\n                        <ButtonGroup>\n                            <Button onClick={()=>this.setState({helpUserIsShown: !this.state.helpUserIsShown})}>Need Help?</Button>\n                            <Button onClick={()=>{this.handleModal()}}>\n                                Cancel\n                            </Button>\n                        </ButtonGroup>\n\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Header />\n                        {this.ShowContentsOfBody()}\n                    </Modal.Body>\n                    <Modal.Footer>\n\n                    </Modal.Footer>\n                </Modal>\n\n\n            </div>\n        )\n    }\n\n\n  isLike = (ans) => {\n      console.log(this.state.user_data[this.data.cntIndexCard]);\n      this.data.cntIndexCard = this.data.cntIndexCard;\n      console.log(\"indxNum \" + this.data.cntIndexCard);\n\n      if(ans === true)\n      {\n\n          //Fixes underbound\n          if(this.data.cntIndexCard >= this.data.numElements | this.data.cntIndexCard < 0)\n          {\n              this.data.cntIndexCard = 1;\n          }\n\n          // else if(this.data.cntIndexCard < 0)\n          // {\n          //     this.data.cntIndexCard = this.data.cntIndexCard-1;\n          // }\n          // else if(this.data.hadChosen === false)\n          // {\n          //     this.data.cntIndexCard = this.data.cntIndexCard - 1;\n          // }\n\n          this.data.hadChosen = true;\n\n\n          //call function that takes in the index or card information to be shoved to the backend\n          //This just stores the doctor's information until submit button is pushed\n          //console.log(\"indxNum \" + this.data.cntIndexCard);\n\n          //console.log(people1);\n          //console.log(people1[this.data.cntIndexCard]);\n          console.log(this.state.user_data[this.data.cntIndexCard]);\n          console.log(this.data.cntIndexCard);\n          console.log(this.state.user_data);\n          console.log(this.state.userData);\n          let selectDr = JSON.stringify(this.state.user_data[this.data.cntIndexCard]);\n          console.log(selectDr);\n          sessionStorage.setItem('selectedDoctorIndx', selectDr);\n          this.handleModal();   //Closes the doctor selection modal\n\n\n      }\n\n    this.setState(() => {\n      return {\n        is_moving: true,\n        scroll: ans ? \"right-scroll\" : \"left-scroll\"\n      };\n    });\n    setTimeout(() => {\n      let data = this.state.user_data;\n      data.shift();\n      this.setState(() => {\n        return {\n          user_data: this.props.createDataList(data),   //I changed this with Eric and Bernie\n          is_moving: false,\n          show_status: 0,\n          scroll: \"\"\n        };\n      });\n    }, 500);\n  };\n\n  isShowBackToggle = () => {\n    this.setState(() => {\n      return {\n        show_status: this.state.show_status === 2 ? 1 : 2\n      };\n    });\n  };\n\n\n  render() {\n\n    return (\n        <div>\n            {this.RunModalPhysician()}\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport Body from './views/body';\nimport '../../css/animatedBackground.scss';\n\n//Obtains doctor's information from the our database that will be inserted into digital cards on screen\n//User has the opinion to drag and pull the cards or click buttons to select the physician they want\nexport class Caller_SwipeCardAnimation extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                people1:[],\n                isLoading: true,\n                cnt: 0\n            };\n\n\n    }\n\n    async componentDidMount() {\n\n\n        //Calls to endpoint for every doctors' info\n        //then push into people1 array\n        console.log(\"Testing get_all_physician_records POST\");\n\n        const requestOptions = {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\"phy_id\": 1})\n        };\n\n\n\n        await fetch(\"http://52.247.220.137:80/physician/all\")\n            .then(response => response.json())\n            .then(\n                (result) => {\n                    console.log(\"I am in fetch.....\")\n                    console.log(result);\n                    let l = result.length;\n                    let peopleArray = [];\n                    for (let i = 0; i < l; i++) {\n                        peopleArray.push({});\n                        peopleArray[i].doctorName = result[i].phy_name;\n                        peopleArray[i].age = Math.floor(Math.random()*30+30);\n                        peopleArray[i].location = result[i].phy_addr;\n                        peopleArray[i].email = result[i].email;\n                        peopleArray[i].rating = \"CONSULT BACKEND ABOUT A FLOAT RATING [0.0, 5.0]\";\n                        peopleArray[i].npi = result[i].npi;\n                        peopleArray[i].specialty = result[i].phy_qual;\n                        peopleArray[i].drId = result[i].phy_id;\n\n                    }\n                    this.loading = true;\n                    this.setState(\n                        {\n                            people1: peopleArray,\n                            isLoading: false\n                        }\n                    )\n                    this.p = peopleArray;\n                    return peopleArray;\n                }\n            )\n\n    }\n\n    FromList = (list, index) => {\n        return list[index];\n    };\n\n    fetchUserData = () => {\n        const user_data = this.randomlyOneOfList(this.state.people1);\n        user_data.avatar = this.state.people1;\n\n\n        return user_data;\n    };\n\n    createDataList = (list = []) => {\n        while(list.length < 1) {\n            list.push(this.fetchUserData());\n        }\n        return list;\n    };\n\n    randomlyOneOfList = (list) => {\n        return list[Math.floor(Math.random() * Math.floor(list.length))];\n    }\n\n\n    render() {\n        return(\n            <div>\n\n                {!this.state.isLoading && (\n                    <Body drInfo = {this.state.people1}  createDataList = {(drList) => this.createDataList(drList)}/>\n                )}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport SlidingPane from \"react-sliding-pane\";\nimport \"react-sliding-pane/dist/react-sliding-pane.css\";\nimport patient_Me from '../components/images/patient_Me.jpg';\nimport {Image, Button, Container, Col, Row} from 'react-bootstrap';\nimport '../css/slidePanelRowVerticalSpacing.css';\n\nexport class PatientSlidePanel extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state={\n            isPaneOpen: false,\n        }\n        this.data ={};\n        this.data.pat_name= 'Kevin Vo';\n        this.data.pat_age= '98';\n        this.data.pat_bio= 'A delight for the senses.';\n        this.data.pat_sex= 'M';\n        this.data.pat_height= '167.64';\n        this.data.pat_weight= \"86.1826\";\n\n        this.RightPaneHandle = this.RightPaneHandle.bind(this)\n\n    }\n\n    RightPaneHandle()\n    {\n        this.setState(\n            {\n                isPaneOpen: !this.state.isPaneOpen\n            }\n        )\n    }\n\n\n    GetSlidingPanel()\n    {\n        return(\n            <SlidingPane\n                style={{backgroundImage: {patient_Me}}}\n                className={\"panel-heading\"}\n                overlayClassName={\"panel-heading\"}\n                isOpen={this.state.isPaneOpen}\n                from={\"left\"}\n                width={\"320px\"}\n                onRequestClose={\n                    () => {\n                        this.setState({\n                            isPaneOpen: false\n                        })\n                    }\n                }\n\n                title={ <div className={\"TitleText\"} >Patient Information</div> }\n                subtitle={<div>Name: {this.data.pat_name}</div>}\n            >\n\n                <Image src = {patient_Me}\n                       width={\"auto\"}\n                       height={\"270px\"}\n                       thumbnail\n                       className={\"img-border\"}/>\n\n                <Container>\n                    <Row className={\"RowVerticalSpacing\"}>\n                        <div className={\"TitleText\"} >Patient Information:</div>\n                    </Row>\n                    <Row style={{marginLeft: \"30px\"}} className={\"RowVerticalSpacing\"}>\n                        Name: {this.data.pat_name}\n                    </Row>\n                    <Row style={{marginLeft: \"30px\"}} className={\"RowVerticalSpacing\"}>\n                        Sex: {this.data.pat_sex}\n                    </Row>\n                    <Row  style={{marginLeft: \"30px\"}} className={\"RowVerticalSpacing\"}>\n                        Age: {this.data.pat_age}\n                    </Row>\n                    <Row  style={{marginLeft: \"30px\"}} className={\"RowVerticalSpacing\"}>\n                        Height: {this.data.pat_height} cm\n                    </Row>\n                    <Row  style={{marginLeft: \"30px\"}} className={\"RowVerticalSpacing\"}>\n                        Weight: {this.data.pat_weight} kg\n                    </Row>\n                    <Row  style={{marginLeft: \"30px\"}} className={\"RowVerticalSpacing\"}>\n                        Bio: {this.data.pat_bio}\n                    </Row>\n\n                </Container>\n            </SlidingPane>\n\n\n\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <Button onClick={this.RightPaneHandle} >Show Patient Info</Button>\n\n                {this.GetSlidingPanel()}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {PicCarousel} from '../picCarousel';\nimport {MultiBrowsePic} from '../multiBrowsePic';\nimport {Payment_Form} from \"../payment/payment_form\"\nimport {Row, Col, Button, Form, Container} from 'react-bootstrap';\n\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport {Caller_SwipeCardAnimation} from '../card_related/caller_SwipeCardAnimation';\nimport {PatientSlidePanel} from \"../patientSidePanel\";\nimport 'mdbreact/dist/css/mdb.css';\nimport 'mdbreact/dist/css/style.css';\nimport './caseCreation/fixedBackground_caseCreationPage.css';\n\n//Renders a page where patients can request secondary physicians to examine their case\nexport class CaseCreation extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.state =\n            {\n                pat_notes: '',  //Details that patients can add to case\n                patientSelectedCategory: '',\n                people1: [],\n                patientRecords: [],\n                is_rec_loading: true,\n                record_id: this.props.userInfo.record_id,\n                submitButtonClicked: false\n            };\n        this.data = {\n            pics: '',    //Images of the patient for the case\n            userID: '1', //0 -> Doctor User, 1 -> Patient User\n            show: false,\n            prim_case_description: '',\n\n\n        };\n\n        this.drModeID = '0';  //ID for a doctor user\n        this.patModeID = '1'; //ID for a patient user\n\n        this.GetDrInfoForBackend = this.GetDrInfoForBackend.bind(this);\n    }\n\n    componentDidMount() {\n        const requestMethods = {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\n\n                pat_id: this.props.userInfo.pat_id // pat_id\n\n            })\n        }\n        fetch(\"http://52.247.220.137/get_pat_records_lite\", requestMethods)\n            .then((d) => d.json())\n            .then(d => {\n                    console.log(d);\n                    this.setState({\n                        patientRecords: d,\n                        record_id: d[0].record_id,\n                        is_rec_loading: false\n                    })\n                }\n            )\n    }\n\n    pageTitleUserDisplay = () =>\n    {\n        if(this.data.userID === this.patModeID)\n        {\n            return(\n                <Form.Label>\n                    <h2><u>Submit Case for Second Opinion</u></h2>\n                </Form.Label>\n            );\n        }\n        else\n        {\n            return(\n                <Form.Label>\n                    <h1>Submit Case</h1>\n                </Form.Label>\n            );\n        }\n    }\n\n    categoryTitleUserDisplay = () =>\n    {\n        console.log(this.data.userID + \" - pat - \" + this.patModeID);\n\n\n        return <h3 style={{display:\"inline\", fontSize:\"25px\", fontWeight:\"bold\"}}>Select Category for Second Opinion:</h3>\n\n    }\n\n\n    viewOrAddPicMode = () =>\n    {\n\n        if(this.data.userID === this.patModeID)\n        {\n            return (<PicCarousel />)\n        }\n        else\n        {\n            return (<PicCarousel />)\n        }\n\n    }\n\n\n\n    descriptionTitleUserDisplay = () =>\n    {\n        if(this.userID === this.patModeID) {\n            return (\n                <div>\n                    <label>\n                        <div style={{fontWeight: \"bold\", fontSize: \"30px\"}}>Description (Optional):</div>\n                        <br/>\n                        <textarea name=\"pat_notes\" rows=\"10\" cols=\"150\" value={this.state.pat_notes}\n                                  onChange={this.handleInputChange}/>\n                    </label>\n                </div>\n\n            );\n        }\n        else\n        {\n            return(\n                <label>\n                    <div style={{fontWeight: \"bold\", fontSize: \"30px\"}}>Description:</div>\n                    <br />\n                    <textarea  name=\"pat_notes\" rows=\"10\" cols=\"150\" value={this.state.pat_notes}\n                               onChange={this.handleInputChange}/>\n                    <div style={{height:\"40px\"}}/>\n                </label>\n            );\n        }\n\n    }\n\n    handleSelectDoctor ()\n    {\n        return(<Caller_SwipeCardAnimation GetDrInfoForBackend={(p) => {this.GetDrInfoForBackend(p)} }/>);\n    }\n\n\n\n\n    drCaseCreationComponents = () =>\n    {\n        /*\n        let pat_id = this.props.userInfo.pat_id\n         */\n\n        return(\n            <div className={\"FixedBackgroundImgCaseCreation\"} >\n                <div style={{ background: `rgba(255, 255, 255, 0.7)`, height:\"100%\" }}>\n\n                <Form style={{zIndex: \"10\", textAlign:\"center\"}} >\n                    <PatientSlidePanel pat_data={this.data}/>\n                    {this.pageTitleUserDisplay()}\n                    <br />\n\n\n                    <Container style={{width:\"1000px\", margin:\"auto\", border:\"0px\"}}>\n                        <Row>\n                            <h4 style={{textAlign:\"left\", paddingLeft:\"30px\", fontSize:\"30px\",\n                                fontWeight:\"bold\"}}>Note: </h4>\n                        </Row>\n\n                        <Row style={{paddingLeft:\"50px\"}}>\n                                <h4 style={{textAlign:\"left\", fontSize:\"20px\", fontWeight:\"bold\"}}>\n                                    An Identifying Number will be generated for this case on the servers once created.\n                                </h4>\n                        </Row>\n\n                    </Container>\n\n                    <br />\n\n\n\n                    {this.viewOrAddPicMode()}\n\n                    <Row>\n                        <Col style={{width: \"1000px\", margin:\"auto\"}}>\n                            <Form.Label style={{width: \"500px\", marginLeft:\"45%\", marginRight:\"1px\"}}>\n\n                                {this.categoryTitleUserDisplay()}\n                                <Form.Control name={\"patientSelectedCategory\"} as={\"select\"} defaultValue={\"January\"}\n                                              value={this.state.value} onChange={this.handleInputChange}>\n                                    <option value=\"Allergy and Immunology\">Allergy and Immunology</option>\n                                    <option value=\"Endovascular Surgical Neuroradiology\">Endovascular Surgical Neuroradiology</option>\n                                    <option value=\"Gastroenterology\">Gastroenterology</option>\n                                    <option value=\"General Surgery\">General Surgery</option>\n                                    <option value=\"Hematology\">Hematology</option>\n                                    <option value=\"Musculoskeletal Radiology\">Musculoskeletal Radiology</option>\n                                    <option value=\"Neurology\">Neurology</option>\n                                    <option value=\"Orthopaedics\">Orthopaedics</option>\n                                    <option value=\"Otolaryngology\">Otolaryngology</option>\n                                    <option value=\"Pathology\">Pathology</option>\n                                    <option value=\"Pediatric\">Pediatric</option>\n                                    <option value=\"Radiation Oncology\">Radiation Oncology</option>\n                                    <option value=\"Reproductive Endocrinology and Infertility\">Reproductive Endocrinology and Infertility</option>\n                                    <option value=\"Spinal Cord Injury Medicine\">Spinal Cord Injury Medicine</option>\n                                    <option value=\"Sports Medicine\">Sports Medicine</option>\n                                    <option value=\"Thoracic Surgery\">Thoracic Surgery</option>\n                                    <option value=\"Vascular and Interventional Radiology\">Vascular and Interventional Radiology</option>\n                                </Form.Control>\n                            </Form.Label>\n                        </Col>\n                        <Col>\n                            <h3 style={{marginLeft:\"170px\", fontSize:\"25px\", fontWeight:\"bold\"}}>Select the case:</h3>\n\n                            <Form.Label style={{width: \"500px\", marginLeft:\"45%\", marginRight:\"1px\"}}>\n                                <Form.Control name={\"record_id\"} as={\"select\"} defaultValue={\"1\"}\n                                              onChange={this.handleInputChange}>\n                                    {!this.state.is_rec_loading && this.state.patientRecords.map(item => {\n                                        return(\n                                            <option value={item.record_id}>{item.comment}</option>\n                                        )\n                                    })}\n                                </Form.Control>\n                            </Form.Label>\n                        </Col>\n                        <Col style={{width: \"50px\"}}>\n                            <Caller_SwipeCardAnimation GetDrInfoForBackend = {(p) => {this.GetDrInfoForBackend(p)}}/>\n                        </Col>\n\n                    </Row>\n\n                    <br />\n\n                    <br />\n\n                    {this.descriptionTitleUserDisplay()}\n\n                    {(this.state.submitButtonClicked) && <div style={{fontSize: \"60px\"}}>Case Submitted.</div>}\n                    <div style={{border:\"0px\", margin:\"0px\", padding:\"0px\"}}/>\n                    <Button name=\"submit\" style={{display:\"inline\"}} onClick={this.handleSubmit}>Submit</Button>\n\n                </Form>\n                </div>\n            </div>\n        );\n    }\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            })\n    }\n\n    GetDrInfoForBackend(people1)\n    {\n        this.setState (\n            {\n                people1: people1\n            }\n        )\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        // if (this.is_paid){\n        //     return(<Payment_Form caseDetail={}/>)\n        // }\n        let selectedDr = JSON.parse(sessionStorage.getItem('selectedDoctorIndx'));\n\n        console.log(\"SELECTED DOCTOR\");\n        console.log(selectedDr)\n        //selectedNPI = this.state.people1[selectedDr];\n\n        console.log(\"RECORD ID\");\n        console.log(this.state.record_id);\n\n        const requestMethods = {\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json'},\n            body: JSON.stringify( {\n                record_id: this.state.record_id,\n                physician_id: selectedDr.drId,\n                pat_id: this.props.userInfo.pat_id // this.props.userInfo.pat_id\n\n            })\n        }\n        //Res PendingRec is response pending records\n        // needs to be tested still. sever was down 11/7/20.\n        // server should be up by 3pm\n        fetch(\"http://52.247.220.137/record_assessment\", requestMethods)\n            .then(ResPendingRec => ResPendingRec.text())\n            .then(s => {\n                console.log(\"Message from Backend after Primary Dr. Submits\");\n                console.log(s);\n                if (s == \"record updated\") {\n                    this.setState({responsestatus: \"success\"})\n                }\n                else {\n                    console.log(\"ERROR\");\n                    this.setState({responsestatus:\"error\"})\n                }\n\n            })\n\n            this.setState({submitButtonClicked: true})\n\n\n    }\n\n    render()\n    {\n        console.log(\"from dr Case Submission modeID = \" + this.props.userInfo.modeID);\n        console.log(\"from dr Case Submission = \" + this.props.userInfo.userID);\n        return(\n            <div className={\"keep_it_100\"}>\n\n                <div className={\"keep_it_100\"} style={{position: \"fixed\"}}>\n                    <h2 style={{zIndex: \"50\", width:\"100%\", position: \"fixed\", marginBottom:\"10%\",\n                        color: \"white\", textAlign: 'center',\n                        background: `rgba(0,0,0,0.9)`}}><u>Case Creation</u></h2>\n                    <div style={{height:\"40px\"}}/>\n\n                    {this.drCaseCreationComponents()};\n                </div>\n            </div>\n        );\n    }\n};","import React from \"react\";\nimport { MDBMask, MDBView, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport 'mdbreact/dist/css/mdb.css';\n\n//creates a transparent blue hover box over certain images\nexport function HoverImgBlkWhite(props){\n\n\n\n\n        return (\n\n            <MDBContainer className=\"mt-4\">\n                <div style={{position: \"relative\",\n                    textAlign: \"center\",\n                    color: \"white\",\n                    fontSize: \"20px\",\n                    fontWeight: \"600\"}}>Click Image below to Sign In or Register as a <div style={{fontSize: \"50px\"}}>{props.overlayText}</div></div>\n                <MDBRow>\n                    <MDBCol>\n\n                        <MDBView hover>\n\n                            <img\n                                src={props.imgSource}\n                                className=\"img-fluid\"\n                                alt=\"\"\n                                style ={{height: props.data.picHeight, width: props.data.picWidth}}\n\n\n                            />\n\n                            <MDBMask className=\"flex-center\" overlay={props.data.overlayColor}>\n                                <p className=\"white-text\">{props.overlayText}</p>\n                            </MDBMask>\n\n\n                        </MDBView>\n                    </MDBCol>\n                </MDBRow>\n\n            </MDBContainer>\n\n        );\n\n\n\n}\n\n\n\n","//props will sent in a bunch of stuff\nimport React, {useState} from \"react\";\nimport {Container, Row, Col, Form, Button} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap-grid.css';\nimport 'react-bootstrap/dist/react-bootstrap';\n\n//Generates a form for doctor users and patient users to fill in their information for registration\nfunction DropDownMenu(data){\n\n    return(\n        <Form.Control name = {data.name} value={data.selectedBirthElement} onChange={data.handleInputChange} as={\"select\"} defaultValue={\"January\"}>\n\n                {\n                    data.dataArr.map(function(selectedBirthElement){\n                        return <option value={selectedBirthElement}>{selectedBirthElement}</option>\n                    })\n                }\n\n        </Form.Control>\n\n\n\n    )\n}\n\nfunction DropDownMenu_Hosp(data){\n    console.log(data);\n    return(\n        <Form.Control name = {\"hospital\"} onChange={data.handleInputChange} as={\"select\"} defaultValue={\"1\"}>\n\n            {\n                data.dataArr.map(function(item) {\n\n                    return <option value={item.hospital_id}>{item.hospital_name}</option>\n                })\n            }\n\n\n\n        </Form.Control>\n\n\n    )\n\n}\n\nfunction DrAttritube(data)\n{\n    console.log(data);\n    if(data.modeID == 'Doctor') {\n        return (\n            <div>\n                <Form.Label>NPI:</Form.Label>\n                <Form.Control name=\"npi\" placeholder={\"Enter National Provider Identifier\"}/>\n\n\n\n                <Form.Label>Speciality:</Form.Label>\n                <Form.Control name=\"speciality\" placeholder={\"Enter Specialty\"} />\n\n\n\n                <Form.Label>Select Clinic:</Form.Label>\n                <DropDownMenu_Hosp name={\"hospital\"} dataArr = {data.dataArr} />\n\n\n            </div>\n        );\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nfunction GetTitle(data)\n{\n    if(data.modeID == 'Doctor')\n    {\n        return(<Form.Label><u className={\"display-4\"}>Physician Registration</u></Form.Label>);\n    }\n    else\n    {\n        return(<Form.Label><u className={\"display-4\"}>Patient Registration</u></Form.Label>);\n    }\n}\n\nfunction ShowRegistrationForm(props)\n{\n    let modeID = props.outerProps.data.userMode;\n    console.log(props);\n\n    return(\n        <div>\n\n            <Form id={\"myForm\"} style={{width:\"500px\", margin:\"auto\"}}>\n                <Form.Label>\n                    <GetTitle modeID = {modeID}/>\n                    <br />\n                </Form.Label>\n                <Form.Group controlId={\"formEmail\"}>\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control name=\"email\" value={props.outerProps.data.email} type=\"email\" placeholder={\"Enter email\"}/>\n                </Form.Group>\n\n                <Form.Group controlId={\"formPassword\"}>\n                    <Row>\n                        <Col>\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control name=\"password\" value={props.outerProps.data.password} type={\"password\"}\n                                          placeholder={\"Enter Password\"} />\n                        </Col>\n                        <Col>\n                            <Form.Label>Repeat Password</Form.Label>\n                            <Form.Control name=\"repassword\" value={props.outerProps.data.repassword} type={\"password\"}\n                                          placeholder={\"Re-Enter Password\"} />\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Group controlId={\"formName\"}>\n                    <Form.Label>Name</Form.Label>\n                    <Row>\n                        <Col>\n                            <Form.Control name=\"firstName\" value={props.outerProps.data.firstName} placeholder={\"Enter First name\"}/>\n                        </Col>\n                        <Col>\n                            <Form.Control name=\"lastName\" value={props.outerProps.data.lastName} placeholder={\"Enter Last name\"}/>\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <Form.Label>Birthday</Form.Label>\n                <Row>\n\n                    <Col>\n                        <DropDownMenu name={\"selectedBirthMonth\"} dataArr = {props.outerProps.data.date.month} />\n                    </Col>\n                    <Col>\n\n                        <DropDownMenu name={\"selectedBirthDay\"} dataArr = {props.outerProps.data.date.day} />\n                    </Col>\n                    <Col>\n                        <DropDownMenu name={\"selectedBirthYear\"} dataArr = {props.outerProps.data.date.year} />\n                    </Col>\n\n                </Row>\n\n\n\n                <DrAttritube modeID={modeID} dataArr = {props.outerProps.hospital}/>\n\n\n                <Form.Label>Bio:</Form.Label>\n                <br />\n                <Form.Control name={\"bio\"} as={\"textarea\"} rows={3} cols={100}/>\n\n                <Row>\n                    <Button type=\"button\" onClick={props.outerProps.handleSubmit}>Register</Button>\n                </Row>\n            </Form>\n        </div>\n    );\n}\n\n\nexport function RegFunctionalComponent(props)\n{\n   return(\n       <div>\n           <ShowRegistrationForm outerProps = {props} />\n       </div>\n   )\n}","import React from 'react';\nimport {Button, Form, Container} from 'react-bootstrap';\nimport '../../css/login.css';\n\n//Renders the login page\nexport class Login extends React.Component\n{\n    constructor(props) {\n        super(props);\n\n        this.state =\n            {\n                email: '',\n                password: '',\n                loginInfoFromBackend: []\n\n            };\n\n    }\n\n    handleInputChange = (event) =>\n    {\n        this.setState(\n            {\n\n                [event.target.name]: event.target.value\n            })\n\n    }\n\n    SelectTitle()\n    {\n        if(this.props.data.userMode === 'Doctor')\n        {\n            return(<Form.Label><u className={\"display-4\"}>Physician Login</u></Form.Label>);\n        }\n        else\n        {\n            return(<Form.Label><u className={\"display-4\"}>Patient Login</u></Form.Label>);\n        }\n    }\n\n\n    showLogin = () =>\n    {\n        return(\n            <Container style={{width:\"50%\", margin:\"auto\"}}>\n                <Form className={'loginForm'} onSubmit={this.handleSubmit}>\n                    {this.SelectTitle()}\n                    <br />\n                    <Form.Label>\n                        Email:\n                        <Form.Control as={\"input\"}\n                            name=\"email\"\n                            type=\"email\"\n                            value={this.state.email}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </Form.Label>\n\n\n\n                    <br />\n                    <Form.Label>\n                        Password:\n                        <Form.Control as={\"input\"}\n                            name=\"password\"\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleInputChange}\n                            required/>\n                    </Form.Label>\n\n                    <br />\n\n\n                    <Button type=\"button\" onClick={() => this.handleLoginSubmit()}>Submit</Button>\n                </Form>\n            </Container>\n        );\n    }\n\n\n    handleLoginSubmit()\n    {\n        let userDataBackend = [];\n        if(this.props.data.userMode === 'Doctor') {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\"username\": this.state.email, \"password\": this.state.password})\n            };\n\n            fetch(\"http://52.247.220.137:80/physician/login\", requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    userDataBackend = {};\n                    userDataBackend.modeID = \"physician\";\n                    userDataBackend.userID = response.phy_id;\n                    userDataBackend.userData = response;\n\n                    this.props.handleUserLoginFromNavBar(userDataBackend);\n        }).catch((error)=>{alert(\"The Username or Password is incorrect.\")})\n                //.catch(r => r.text()).then(r => console.log(r));\n\n        }\n        else\n        {\n            const requestOptions = {\n                method: 'POST',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\"username\": this.state.email, \"password\": this.state.password})\n            };\n\n            fetch(\"http://52.247.220.137:80/client/login\", requestOptions)\n                .then(response => response.json())\n                .then(response => {\n                    console.log(response);\n                    userDataBackend = {};\n                    userDataBackend.modeID = \"patient\";\n                    userDataBackend.userID = response.pat_id;\n                    userDataBackend.userData = response;\n\n                    this.props.handleUserLoginFromNavBar(userDataBackend);\n                }).catch((error)=>{alert(\"The Username or Password is incorrect.\")})\n        }\n\n    }\n\n\n\n    render() {\n\n        return(\n            <div>\n                {this.showLogin()}\n            </div>\n\n\n        );\n    }\n\n}","import React from 'react';\nimport {RegFunctionalComponent} from './registration_funct_comp';\nimport {ButtonGroup, Button} from 'react-bootstrap';\nimport {Login} from './login';\n\nimport './userRelatedCSS/loginRegisterDisplay.css';\n\n//Selects which type of login or register page to display\nexport class LoginRegisterDisplay extends React.Component {\n    state = {selectedFile: null}\n\n    constructor(props) {\n        super(props);\n        fetch(\"http://52.247.220.137:80/hospitals\")\n            .then(response => response.json())\n            .then(json => {\n\n                this.state.hospitalNameArr = json\n                this.state.isLoading = false;\n\n\n            });\n        this.state = {\n            isLogin: true,\n            choseReturn: false,\n            isLoading: true,\n            hospitalNameArr: []\n        }\n        this.checkSelectedDayOfMonth = '';\n        this.catOfMonthYear = '';\n        this.isOverflowedDayOfMonth = false;\n        this.data = {};\n\n        //this.data.hospitalNameArr= [\"Cleveland Clinic\", \"Johns Hopkins Hospital\", \"Mayo Clinic\", \"UCLA Medical Center\"];\n\n        this.data.date= {\n            month: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\",\n                \"November\", \"December\"],\n\n            day: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\",\n                \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"],\n\n            year:[]\n        };\n        this.data.userMode = this.props.userMode;\n    }\n    getDaysInMonth = function(month, year)\n    {\n        return new Date(year, month, 0).getDate();\n    }\n\n    setCurrentYear = () =>\n    {\n        let currentDate = new Date();\n        let currentYear = currentDate.getFullYear();\n\n        for(let cntDay = 1900; cntDay <= currentYear; cntDay++)\n        {\n            this.data.date.year.push(cntDay);\n\n\n        }\n    }\n\n    GetNumericalMonth(monthName)\n    {\n        switch(monthName)\n        {\n            case 'January': return 1; break;\n            case 'February': return 2; break;\n            case 'March': return 3; break;\n            case 'April': return 4; break;\n            case 'May': return 5; break;\n            case 'June': return 6; break;\n            case 'July': return 7; break;\n            case 'August': return 8; break;\n            case 'September': return 9; break;\n            case 'October': return 10; break;\n            case 'November': return 11; break;\n            case 'December': return 12; break;\n            default: return 1;\n        }\n    }\n\n    GetAge(data)\n    {\n        const numericalBirthMonth = this.GetNumericalMonth(data.selectedBirthMonth);\n        const convertedBirthdate = new Date(data.selectedBirthYear, numericalBirthMonth, data.selectedBirthDay,\n            0,0,0,0);\n        this.checkSelectedDayOfMonth = data.selectedBirthDay;\n        if(data.selectedBirthDay > this.getDaysInMonth(numericalBirthMonth, data.selectedBirthYear))\n        {\n            this.isOverflowedDayOfMonth = true;\n        }\n        this.catOfMonthYear = data.selectedBirthMonth + \" \" + data.selectedBirthYear;\n        const currentDate = new Date();\n\n        let calculatedAge = currentDate.getTime() - convertedBirthdate.getTime();\n\n        calculatedAge = new Date(calculatedAge);\n\n        calculatedAge = Math.abs(calculatedAge.getUTCFullYear()-1970);\n\n\n        return calculatedAge;\n    }\n\n    handleSubmit = () => {\n        const data = this.iter_over_items();\n        const calculatedAge = this.GetAge(data);\n\n        if(this.isOverflowedDayOfMonth == true)\n        {\n            alert(this.catOfMonthYear + \" does not have \" + this.checkSelectedDayOfMonth + \" days.\");\n        }\n        else {\n            if (data.password != data.repassword) {\n                alert(\"Password and Re-Password does NOT match. You entered Password: \" +\n                    data.password + \", Re-Password: \" + data.repassword);\n            } else if (this.props.userMode == 'Physician' || this.props.userMode == 'Doctor') {\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({\n                        \"npi\": data.npi, \"username\": data.email, \"phy_name\": data.firstName + \" \" + data.lastName,\n                        \"phy_bio\": data.bio, \"phy_addr\": \"12345\", \"phy_qual\": data.speciality,\n                        \"email\": data.email, \"password\": data.password\n                    })\n\n                };\n                console.log(requestOptions);\n\n                fetch(\"http://52.247.220.137:80/physician\", requestOptions)\n                    .then(response => console.log(response.text()))\n\n\n            } else {\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({\n                        \"username\": data.email, pat_age: calculatedAge, \"pat_sex\": \"NA\",\n                        \"pat_medical_history\": data.bio, \"pat_name\": data.firstName + \" \" + data.lastName,\n                        \"email\": data.email, \"password\": data.password,\n                    })\n\n\n                };\n\n                fetch(\"http://52.247.220.137:80/client\", requestOptions)\n                    .then(response => response.text())\n                    .then(response => {\n                            if (response == \"email exists\") {\n                                alert(\"The email already exists\");\n                                //window.location.reload(false);\n                            }\n                        }\n                    );\n            }\n\n\n        }\n\n        this.isOverflowedDayOfMonth = false;\n\n    }\n\n    iter_over_items(){\n        let inputs = document.getElementById(\"myForm\").elements;\n\n        let to_send = {};\n\n        for (var i = 0; i < inputs.length; i++) {\n            let element = inputs[i];\n\n            to_send[element.name] = element.value;\n\n        }\n\n        return to_send;\n    }\n    SelectLoginRegisterHandle = (choice) =>\n    {\n        switch(choice)\n        {\n            case \"login\":{\n                this.setState({\n                    isLogin: true,\n                    choseReturn: false\n                })\n\n            };break;\n            case \"reg\": {\n                this.setState({\n                    isLogin: false,\n                    choseReturn: false\n                })\n\n            };break;\n            case \"switch\": {\n                if(this.data.userMode == \"Doctor\" || this.data.userMode == \"Physician\")\n                {\n                    this.data.userMode = \"Patient\";\n                }\n                else\n                {\n                    this.data.userMode = \"Doctor\";\n                }\n\n                this.setState({\n                    isLogin: this.state.isLogin,\n                    choseReturn: true\n                })\n\n            };break;\n\n        }\n\n        console.log(\"**** isLogin = \" + this.state.isLogin + \", choseReturn = \" + this.state.choseReturn + \", userMode = \" + this.data.userMode)\n    }\n\n\n\n    render() {\n\n        console.log(this.data)\n        this.setCurrentYear();\n        if (this.state.isLoading){\n            console.log(\"im loading....\");\n            return(\n                <div>\n\n                    <ButtonGroup>\n                        <Button onClick={()=>this.SelectLoginRegisterHandle(\"login\")}>Login</Button>\n                        <Button onClick={()=>this.SelectLoginRegisterHandle(\"reg\")}>Register</Button>\n                        <Button onClick={()=>this.SelectLoginRegisterHandle(\"switch\")}>Switch User Type</Button>\n                    </ButtonGroup>\n\n\n                        {\n                            !this.state.choseReturn &&\n                            this.state.isLogin &&\n                            <div className={\"Login_Form\"}>\n                                <div style={{height: \"50px\"}}/>\n                                <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                            </div>\n                        }\n\n\n\n                        {\n                            this.state.choseReturn &&\n                            this.state.isLogin &&\n                            <div className={\"Login_Form\"}>\n                                <div style={{height: \"50px\"}}/>\n                                <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                            </div>\n                        }\n\n                </div>\n            )\n        }\n        return (\n            <div>\n                <div className={\"LogReg_FixedBackgroundImg\"} />\n                <ButtonGroup>\n                    <Button onClick={()=>this.SelectLoginRegisterHandle(\"login\")}>Login</Button>\n                    <Button onClick={()=>this.SelectLoginRegisterHandle(\"reg\")}>Register</Button>\n                    <Button onClick={()=>this.SelectLoginRegisterHandle(\"switch\")}>Switch User Type</Button>\n                </ButtonGroup>\n\n                    {\n                        this.state.choseReturn &&\n                        this.state.isLogin &&\n                        <div className={\"Login_Form\"}>\n                            <div style={{height: \"50px\"}}/>\n                            <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                        </div>\n                    }\n\n\n                    {\n                        this.state.choseReturn &&\n                        !this.state.isLogin &&\n                        <div className={\"Reg_Form\"}>\n                            <div style={{height: \"50px\"}}/>\n                            <RegFunctionalComponent hospital = {this.state.hospitalNameArr} data={this.data} handleSubmit={(e) => this.handleSubmit(e)}/>\n                        </div>\n                    }\n\n\n\n                    {\n\n                        !this.state.choseReturn &&\n                        !this.state.isLogin &&\n                        <div className={\"Reg_Form\"}>\n                            <div style={{height: \"50px\"}}/>\n                            <RegFunctionalComponent hospital = {this.state.hospitalNameArr} data={this.data} handleSubmit={(e) => this.handleSubmit(e)}/>\n                        </div>\n                    }\n\n\n                    {\n                        !this.state.choseReturn &&\n                        this.state.isLogin &&\n                        <div className={\"Login_Form\"}>\n                            <div style={{height: \"50px\"}}/>\n                            <Login data={this.data} handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar}/>\n                        </div>\n                    }\n\n            </div>\n\n        );\n    }\n};\n\n\n","import React from 'react';\nimport {Container, Row, Col, Button, Modal} from 'react-bootstrap';\nimport doctor_left from '../../pictures/patient_doctor_select/left_doctor.png';\nimport patient_right from '../../pictures/patient_doctor_select/right_patient.png';\nimport {HoverImgBlkWhite} from \"../hoverImgBlkWhite\";\n\nimport {LoginRegisterDisplay} from \"./loginRegisterDisplay\";\nimport './userRelatedCSS/loginRegisterDisplay.css';\n\n\n//Generates a fancy UI for users to select if they're a doctor or patient upon login\n//This UI has been enhanced of easy-to-read labels to guide the user on what to do\nexport class DoctorPatientSelect extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.data = {};\n        this.data.picHeight = '500px';\n        this.data.picWidth  = '550px';\n        this.data.overlayColor = \"blue-strong\";\n        this.data.selectedUserMode = \"none\";\n        this.state={\n            showPic:true\n        }\n        this.changeShowPic = null;\n        this.GetShowDoctorPatientPicLoginSelect = this.GetShowDoctorPatientPicLoginSelect.bind(this);\n\n    }\n\n    GetShowDoctorPatientPicLoginSelect = (showIt_bool) =>\n    {\n        this.setState(\n            {\n                showPic: showIt_bool\n            }\n        )\n    }\n\n\n    toggleShowPic(selectedMode)\n    {\n        this.data.selectedUserMode = selectedMode;\n\n\n\n        this.setState(\n            {\n                showPic: !this.state.showPic\n            }\n        )\n    }\n    handleDoctorPic = () =>\n    {\n        \n        this.toggleShowPic('Doctor');\n    }\n\n    handlePatientPic = () =>\n    {\n        this.toggleShowPic('Patient');\n\n    }\n\n    DisplaySelectionPics()\n    {\n        return(\n            <div>\n\n            <Container style={{width: \"800px\"}} >\n\n                <Row>\n                    <Col>\n                        <h3 style={{textAlign:\"center\", color: \"black\"}}><u>Select Which Type of User You Are:</u></h3>\n                    </Col>\n                </Row>\n\n                <Row>\n\n                    <Col>\n                        <div style ={{border:\"5px solid black\", background: `rgba(0,0,0,.8)`}} onClick = { () => this.handleDoctorPic()}>\n                             <HoverImgBlkWhite  data={this.data} overlayText = \"Doctor\"\n                                                  imgSource = {doctor_left}\n                             />\n                        </div>\n\n                    </Col>\n\n                    <Col >\n\n\n                        <div style ={{border:\"5px solid black\", background: `rgba(0,0,0,.8)`}} onClick = { () => this.handlePatientPic()}>\n                            <HoverImgBlkWhite data={this.data} overlayText = \"Patient\"\n                                              imgSource = {patient_right}\n\n                            />\n\n\n                        </div>\n\n\n                    </Col>\n\n                </Row>\n\n            </Container>\n\n            </div>\n        );\n    }\n\n    SwitchToAccessPage()\n    {\n        if(this.state.showPic)\n        {\n            return(\n                <div>\n                    {this.DisplaySelectionPics()}\n                </div>\n            )\n        }\n        else\n        {\n\n            return(\n                <div>\n                    <LoginRegisterDisplay handleUserLoginFromNavBar = {this.props.handleUserLoginFromNavBar} userMode={this.data.selectedUserMode}/>\n\n                </div>\n            );\n        }\n    }\n\n\n    render()\n    {\n\n        return(\n            <div>\n                <div className={\"LogReg_FixedBackgroundImg\"} />\n                {this.SwitchToAccessPage()}\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport {Button, Nav, Navbar} from \"react-bootstrap\";\nimport {ClientCaseManagement} from './case_related/clientCaseManagement';\n\nimport {DrCaseManagement} from \"./case_related/drCaseManagement\";\n\nimport {Contact} from '../components/contact';\n\nimport {DrEdit} from \"./user_related/drEdit\";\nimport '../css/navbar_design.css';\nimport {Homepage} from \"./homepage\";\nimport {Pricing} from './pricingPage'\nimport {Paymenthistory} from './payment/paymenthistory';\n\nimport{CaseCreation} from './case_related/caseCreation';\nimport {DoctorPatientSelect} from './user_related/doctorPatientSelect'\nimport {Payment_Form} from \"./payment/payment_form\";\nimport {FullViewCase} from '../components/case_related/fullViewCase';\n\nimport navbarLogo from './images/navbar_logo.png';\n\n//Generates the navigation bar at the top of every page\nexport default class NavbarClass extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modeID: \"\",\n            userID: \"\",\n            userData: \"\"\n        }\n\n        this.handleUserLoginFromNavBar = this.handleUserLoginFromNavBar.bind(this);\n\n    }\n\n\n\n    NewUserNavBar()\n    {\n\n\n        return(\n\n            <div>\n                <Router>\n                    <div>\n                        <Navbar className={'SizeNav'} sticky={\"top\"} style={{paddingTop:\"0px\", paddingBottom:\"0px\"}}>\n                            <Nav>\n                                <span style={{color:\"white\", fontSize:\"25px\"}}>\n                                <img responsive src={navbarLogo} style={{height:\"50px\", width:\"50px\",marginBottom:\"5px\",borderTop:\"-10px\", paddingBottom:\"15px\"}}/>SecondChance\n                                </span>\n                                <div className={\"MoveLinksRight\"}></div>\n                                <Link to=\"/\">Home</Link>\n\n                                <Link to=\"/contact\">Contact Us</Link>\n\n                                <Link to=\"/pricing\">Pricing</Link>\n\n                                <Link to=\"/loginSelect\">Login</Link>\n\n                            </Nav>\n                        </Navbar>\n                        <Switch>\n                            <Route exact path={'/'} component={() => <Homepage userInfo = {this.data} handleUserLoginFromNavBar = {this.handleUserLoginFromNavBar}/>}></Route>\n                            <Route exact path={'/loginSelect'} component={() => <DoctorPatientSelect handleUserLoginFromNavBar = {this.handleUserLoginFromNavBar}/>}></Route>\n                            <Route exact path={'/contact'} component={() => <Contact userInfo = {this.data}/>}></Route>\n                            <Route exact path={'/pricing'} component={() => <Pricing/>}></Route>\n                            <Route exact path={'/payment'} component={()=> <Payment_Form/>}></Route>\n                            <Route exact path={'/gotofullCaseView'} component={()=> <FullViewCase caseInfo={this.state.userData}/>}></Route>\n                            <Redirect to={'/'} />\n                        </Switch>\n                    </div>\n                </Router>\n\n                <br />\n\n            </div>\n        );\n    }\n    PatientNavBar()\n    {\n        return(\n            <div>\n                <Router>\n                    <div>\n                        <Navbar className={'SizeNav'} sticky={\"top\"} style={{paddingTop:\"0px\", paddingBottom:\"0px\"}}>\n                            <Nav>\n                                <span style={{color:\"white\", fontSize:\"25px\"}}>\n                                    <img responsive src={navbarLogo} style={{height:\"50px\", width:\"50px\",\n                                        marginBottom:\"5px\",borderTop:\"-10px\", paddingBottom:\"15px\"}}/>SecondChance\n                                </span>\n                                <div className={\"MovePatientLinksRight\"}></div>\n\n                                <Link to=\"/\">Home</Link>\n\n                                <Link to=\"/contact\">Contact Us</Link>\n\n                                <Link to=\"/edit\">Edit</Link>\n\n                                <Link to={\"/caseCreate\"}>Case Submission</Link>\n\n                                <Link to={\"/clientCaseMgmt\"}>Client Case Management</Link>\n\n                                <Button onClick={()=>window.location.reload()}>Logout</Button>\n                            </Nav>\n                        </Navbar>\n                        <Switch>\n                            <Route exact path={'/'} component={() => <Homepage userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path='/contact' component={() => <Contact userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/edit'} component ={() => <DrEdit userMode = {\"patient\"} userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/clientCaseMgmt'} component={() => <ClientCaseManagement userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/caseCreate'} component={() => <CaseCreation userInfo = {this.state.userData}/>}></Route>\n                            <Redirect to={'/'} />\n                        </Switch>\n                    </div>\n                </Router>\n                <br />\n\n            </div>\n        );\n\n    }\n\n    DoctorNavBar()\n    {\n        //user personalID and pass as props into all the other pages to display that user's info for tables\n        return(\n            <div>\n                <Router>\n                    <div>\n                        <Navbar className={'SizeNav'} sticky={\"top\"} style={{paddingTop:\"0px\", paddingBottom:\"0px\"}}>\n                            <Nav>\n                                <span style={{color:\"white\", fontSize:\"25px\"}}>\n                                <img responsive src={navbarLogo} style={{height:\"50px\", width:\"50px\",marginBottom:\"5px\",\n                                    borderTop:\"-10px\", paddingBottom:\"15px\"}}/>SecondChance\n                                </span>\n                                <div className={\"MoveDoctorLinksRight\"}></div>\n\n                                <Link to=\"/\">Home</Link>\n\n                                <Link to=\"/contact\">Contact Us</Link>\n\n                                <Link to=\"/edit\">Edit</Link>\n\n                                <Link to={\"/doctorCaseMgmt\"}>Doctor Case Management</Link>\n\n                                <Button onClick={()=>window.location.reload()}>Logout</Button>\n\n                            </Nav>\n                        </Navbar>\n                        <Switch>\n                            <Route exact path={'/'} component={() => <Homepage userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path='/contact' component={() => <Contact userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/edit'} component={() => <DrEdit userMode = {\"doctor\"} userInfo = {this.state.userData}/>}></Route>\n                            <Route exact path={'/doctorCaseMgmt'} component={() => <DrCaseManagement modeID = {this.state.modeID} userInfo = {this.state.userData}/>}></Route>\n                            <Redirect to={'/'} />\n\n                        </Switch>\n                    </div>\n                </Router>\n                <br />\n\n            </div>\n        );\n    }\n\n    NavbarModes()\n    {\n\n        if(this.state.modeID === 'patient')\n        {\n\n            return( this.PatientNavBar() )\n        }\n        else if(this.state.modeID === 'physician')\n        {\n\n            return(this.DoctorNavBar())\n        }\n        else    //If not logged in\n        {\n\n\n            return(this.NewUserNavBar())\n\n        }\n\n    }\n    handleUserLoginFromNavBar = (props) =>\n    {\n\n        this.setState({\n            modeID: props.modeID,\n            userID: props.userID,\n            userData: props.userData\n        })\n\n       sessionStorage.setItem('userInfoFromSessionStorage', props)\n    }\n\n\n    render() {\n        console.log(window.innerWidth);\n        return(\n          <div>\n\n              {this.NavbarModes()}\n              <br />\n\n          </div>\n        );\n    }\n}","import React from 'react';\n\nimport NavbarClass from './components/navbar_custom';\n\nimport './css/animatedBackground.scss'\nfunction App() {\n\n  return (\n        <div className=\"App\" >\n\n            <NavbarClass />\n\n\n        </div>\n  );\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/major_credit_cards_pic.c94befce.png\";","module.exports = __webpack_public_path__ + \"static/media/pat_avatar_1.b915b8b1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/male_tux.06508454.PNG\";"],"sourceRoot":""}